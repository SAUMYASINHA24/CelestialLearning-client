[{"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js":"1","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js":"2","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js":"3","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js":"4","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js":"5","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js":"6","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/userActions.js":"7","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js":"8","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberVerify.js":"9","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberLogin.js":"10","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberSignup.js":"11","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/authorLogin.js":"12","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/authorSignup.js":"13","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js":"14","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberProfile.js":"15","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header_auth.js":"16","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberDashborad.js":"17","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberSettings.js":"18"},{"size":355,"mtime":1609743407541,"results":"19","hashOfConfig":"20"},{"size":637,"mtime":1609694972232,"results":"21","hashOfConfig":"20"},{"size":1785,"mtime":1609836313682,"results":"22","hashOfConfig":"20"},{"size":1505,"mtime":1609743394317,"results":"23","hashOfConfig":"20"},{"size":535,"mtime":1609732848516,"results":"24","hashOfConfig":"20"},{"size":543,"mtime":1609694972232,"results":"25","hashOfConfig":"20"},{"size":2094,"mtime":1609731455626,"results":"26","hashOfConfig":"20"},{"size":2492,"mtime":1609838683307,"results":"27","hashOfConfig":"20"},{"size":756,"mtime":1609743410161,"results":"28","hashOfConfig":"20"},{"size":3030,"mtime":1609774083671,"results":"29","hashOfConfig":"20"},{"size":4309,"mtime":1609743374561,"results":"30","hashOfConfig":"20"},{"size":2952,"mtime":1609773912261,"results":"31","hashOfConfig":"20"},{"size":4375,"mtime":1609737717765,"results":"32","hashOfConfig":"20"},{"size":483,"mtime":1609733165830,"results":"33","hashOfConfig":"20"},{"size":5773,"mtime":1609838093555,"results":"34","hashOfConfig":"20"},{"size":2620,"mtime":1609838629644,"results":"35","hashOfConfig":"20"},{"size":329,"mtime":1609838760698,"results":"36","hashOfConfig":"20"},{"size":1853,"mtime":1609838427225,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1quvh92",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js",[],["80","81"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/userActions.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js",["82"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberVerify.js",["83","84"],"import React, { useEffect } from 'react';\nimport { verifyUser } from '../../actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction UserVerify({ match, history }) {\n    const dispatch = useDispatch();\n\n    const userVerify = useSelector(state => state.userVerify);\n    const { loading, error, verify } = userVerify;\n\n    let token = match.params.token;\n\n    useEffect(() => {\n        if (verify) {\n            history.push('/user/login');\n        }\n    }, [verify, history]);\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(verifyUser(token));\n    };\n\n    return (\n        <form onSubmit={submitHandler}>\n            <button>Submit</button>\n        </form>\n    );\n}\n\nexport default UserVerify;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberLogin.js",["85","86","87","88"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/userActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\nfunction UserLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/');\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        setEmail('');\n        setPassword('');\n    };\n\n    const profile = () => {\n        history.push(\"/subscriber/profile\")\n    }\n\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/author/login\">Are you an Author?</a>\n                    <br />\n                    <a href=\"/path_to_page\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default UserLogin;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberSignup.js",["89","90"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/userActions';\nimport { Card,  CardTitle,  CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\nfunction UserSignUp({ history }) {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error } = userRegister;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/');\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n            setName('');\n            setEmail('');\n            setPassword('');\n            setConfirmPassword('');\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup\">Are you an Author?</a><br />\n                    <a href=\"/subscriber/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default UserSignUp;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/authorLogin.js",["91","92","93"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/userActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\nfunction AuthorLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/');\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        setEmail('');\n        setPassword('');\n    };\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/subscriber/login\">Are you a Subscriber?</a>\n                    <br />\n                    <a href=\"/path_to_page\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default AuthorLogin;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/authorSignup.js",["94","95","96","97","98"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/userActions';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\nfunction UserSignUp({ history }) {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error } = userRegister;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/');\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n            setName('');\n            setEmail('');\n            setPassword('');\n            setConfirmPassword('');\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup\">Are you a Subscriber?</a><br />\n\n                    <a href=\"/author/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default UserSignUp;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberProfile.js",["99","100","101","102","103","104","105","106","107","108","109","110"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header_auth.js",["111","112","113","114"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberDashborad.js",["115"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/subscriberSettings.js",["116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":40,"column":17,"nodeType":"123","endLine":40,"endColumn":35},{"ruleId":"124","severity":1,"message":"125","line":9,"column":13,"nodeType":"126","messageId":"127","endLine":9,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":9,"column":22,"nodeType":"126","messageId":"127","endLine":9,"endColumn":27},{"ruleId":"124","severity":1,"message":"129","line":5,"column":39,"nodeType":"126","messageId":"127","endLine":5,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":17,"column":13,"nodeType":"126","messageId":"127","endLine":17,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":17,"column":22,"nodeType":"126","messageId":"127","endLine":17,"endColumn":27},{"ruleId":"124","severity":1,"message":"130","line":32,"column":11,"nodeType":"126","messageId":"127","endLine":32,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":20,"column":13,"nodeType":"126","messageId":"127","endLine":20,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":20,"column":22,"nodeType":"126","messageId":"127","endLine":20,"endColumn":27},{"ruleId":"124","severity":1,"message":"129","line":5,"column":39,"nodeType":"126","messageId":"127","endLine":5,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":17,"column":13,"nodeType":"126","messageId":"127","endLine":17,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":17,"column":22,"nodeType":"126","messageId":"127","endLine":17,"endColumn":27},{"ruleId":"124","severity":1,"message":"131","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"124","severity":1,"message":"132","line":6,"column":16,"nodeType":"126","messageId":"127","endLine":6,"endColumn":26},{"ruleId":"124","severity":1,"message":"129","line":6,"column":39,"nodeType":"126","messageId":"127","endLine":6,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":21,"column":13,"nodeType":"126","messageId":"127","endLine":21,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":21,"column":22,"nodeType":"126","messageId":"127","endLine":21,"endColumn":27},{"ruleId":"124","severity":1,"message":"133","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"134","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"135","line":11,"column":24,"nodeType":"126","messageId":"127","endLine":11,"endColumn":37},{"ruleId":"124","severity":1,"message":"136","line":12,"column":22,"nodeType":"126","messageId":"127","endLine":12,"endColumn":33},{"ruleId":"124","severity":1,"message":"137","line":13,"column":19,"nodeType":"126","messageId":"127","endLine":13,"endColumn":27},{"ruleId":"124","severity":1,"message":"138","line":14,"column":25,"nodeType":"126","messageId":"127","endLine":14,"endColumn":39},{"ruleId":"124","severity":1,"message":"139","line":15,"column":24,"nodeType":"126","messageId":"127","endLine":15,"endColumn":37},{"ruleId":"124","severity":1,"message":"140","line":16,"column":29,"nodeType":"126","messageId":"127","endLine":16,"endColumn":47},{"ruleId":"124","severity":1,"message":"141","line":17,"column":28,"nodeType":"126","messageId":"127","endLine":17,"endColumn":45},{"ruleId":"124","severity":1,"message":"142","line":19,"column":11,"nodeType":"126","messageId":"127","endLine":19,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":25,"column":13,"nodeType":"123","endLine":25,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":81,"column":1,"nodeType":"147","messageId":"148","endLine":117,"endColumn":2},{"ruleId":"124","severity":1,"message":"149","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":16},{"ruleId":"124","severity":1,"message":"150","line":33,"column":14,"nodeType":"126","messageId":"127","endLine":33,"endColumn":30},{"ruleId":"124","severity":1,"message":"151","line":36,"column":11,"nodeType":"126","messageId":"127","endLine":36,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":42,"column":17,"nodeType":"123","endLine":42,"endColumn":35},{"ruleId":"143","severity":1,"message":"144","line":7,"column":13,"nodeType":"123","endLine":7,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":10,"column":13,"nodeType":"123","endLine":10,"endColumn":28},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'CardImg' is defined but never used.","'profile' is assigned a value but never used.","'useHistory' is defined but never used.","'CardHeader' is defined but never used.","'useEffect' is defined but never used.","'logo' is defined but never used.","'setmiddleName' is assigned a value but never used.","'setlastName' is assigned a value but never used.","'setphNum' is assigned a value but never used.","'setlinkedInURL' is assigned a value but never used.","'settwitterURL' is assigned a value but never used.","'sethigherEducation' is assigned a value but never used.","'setareaOfInterest' is assigned a value but never used.","'updateProfile' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Header_auth must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Button' is defined but never used.","'loginHandleClick' is defined but never used.","'signupHandleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
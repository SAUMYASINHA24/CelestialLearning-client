[{"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/index.js":"1","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/App.js":"2","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/store.js":"3","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/reducers/userReducer.js":"4","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"5","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"6","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"7","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"8","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js":"9","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"10","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"11","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"12","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js":"13","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorCourses.js":"14","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseHome.js":"15","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"16","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"17","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Home.js":"18","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"19","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"20","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"21","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CreateCourse.js":"22","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseView.js":"23","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/UploadCourse.js":"24","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"25","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"26","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/constants/userConstants.js":"27","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Footer.js":"28","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HLSSource.js":"29","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Header.js":"30","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/actions/subscriberActions.js":"31","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/actions/authorActions.js":"32","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CourseCard.js":"33","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HomeCarousel.js":"34","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js":"35","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/plugin.js":"36","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetVerify.js":"37","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberNewPassword.js":"38","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberEmailVerify.js":"39"},{"size":471,"mtime":1612161820086,"results":"40","hashOfConfig":"41"},{"size":4384,"mtime":1612701706496,"results":"42","hashOfConfig":"41"},{"size":910,"mtime":1612161820086,"results":"43","hashOfConfig":"41"},{"size":3182,"mtime":1612161820086,"results":"44","hashOfConfig":"41"},{"size":3609,"mtime":1612681232267,"results":"45","hashOfConfig":"41"},{"size":1912,"mtime":1612684307975,"results":"46","hashOfConfig":"41"},{"size":5383,"mtime":1612682152387,"results":"47","hashOfConfig":"41"},{"size":5498,"mtime":1612702644914,"results":"48","hashOfConfig":"41"},{"size":2133,"mtime":1612696194817,"results":"49","hashOfConfig":"41"},{"size":3109,"mtime":1612161820070,"results":"50","hashOfConfig":"41"},{"size":760,"mtime":1612161820070,"results":"51","hashOfConfig":"41"},{"size":1845,"mtime":1612161820070,"results":"52","hashOfConfig":"41"},{"size":1500,"mtime":1612161820070,"results":"53","hashOfConfig":"41"},{"size":1100,"mtime":1612548765468,"results":"54","hashOfConfig":"41"},{"size":9357,"mtime":1612704372483,"results":"55","hashOfConfig":"41"},{"size":4498,"mtime":1612161820070,"results":"56","hashOfConfig":"41"},{"size":11732,"mtime":1612700032709,"results":"57","hashOfConfig":"41"},{"size":1147,"mtime":1612668094076,"results":"58","hashOfConfig":"41"},{"size":2225,"mtime":1612703098757,"results":"59","hashOfConfig":"41"},{"size":1510,"mtime":1612504194135,"results":"60","hashOfConfig":"41"},{"size":11322,"mtime":1612504194135,"results":"61","hashOfConfig":"41"},{"size":17769,"mtime":1612517718095,"results":"62","hashOfConfig":"41"},{"size":2995,"mtime":1612504194135,"results":"63","hashOfConfig":"41"},{"size":8548,"mtime":1612504194135,"results":"64","hashOfConfig":"41"},{"size":3275,"mtime":1612679118663,"results":"65","hashOfConfig":"41"},{"size":2657,"mtime":1612161820070,"results":"66","hashOfConfig":"41"},{"size":1841,"mtime":1612161820070,"results":"67","hashOfConfig":"41"},{"size":2572,"mtime":1612161820070,"results":"68","hashOfConfig":"41"},{"size":1002,"mtime":1612161820070,"results":"69","hashOfConfig":"41"},{"size":2236,"mtime":1612161820070,"results":"70","hashOfConfig":"41"},{"size":2900,"mtime":1612161820070,"results":"71","hashOfConfig":"41"},{"size":2871,"mtime":1612161820070,"results":"72","hashOfConfig":"41"},{"size":854,"mtime":1612161820070,"results":"73","hashOfConfig":"41"},{"size":1122,"mtime":1612504194135,"results":"74","hashOfConfig":"41"},{"size":943,"mtime":1612161820070,"results":"75","hashOfConfig":"41"},{"size":129,"mtime":1612504194135,"results":"76","hashOfConfig":"41"},{"size":1953,"mtime":1612698392585,"results":"77","hashOfConfig":"41"},{"size":3215,"mtime":1612698796053,"results":"78","hashOfConfig":"41"},{"size":1923,"mtime":1612701641490,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"96rb5c",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/index.js",[],["171","172"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/App.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/store.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/reducers/userReducer.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",["173","174","175","176"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",["177","178","179","180","181"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",["182","183","184","185"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",["186","187","188"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorLogin.js",["189"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/authorActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from 'sweetalert2'\n\nfunction AuthorLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorLogin = useSelector(state => state.authorLogin);\n    const {  error, authorInfo } = authorLogin;\n\n    useEffect(() => {\n        if (authorInfo) {\n            history.push('/author/dashboard');\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [history, authorInfo]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        \n    };\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/subscriber/login\">Are you a Subscriber?</a>\n                    <br />\n                    <a href=\"/author/forgetpassword\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default AuthorLogin;\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorVerify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSettings.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js",["190"],"import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\nexport default function AuthorForgetPassword() {\n\n    const [email, setEmail] = useState('');\n\n    return (\n        <div>\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Forget Password</CardTitle>\n                    <Form >\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >\n                            Submit\n                        </Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/login/\">Log in</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorCourses.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseHome.js",["191","192","193","194","195","196","197","198","199"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSignup.js",["200"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/authorActions';\nimport { Card, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\nimport Swal from \"sweetalert2\"\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\n function AuthorSignup({ history }) {\n\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorRegister = useSelector(state => state.authorRegister);\n    const {  error ,success , message } = authorRegister;\n\n\n\n    useEffect(() => {\n          if(error){     \n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`\n               })\n          }\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               }).then(res => {\n                    history.push('/author/login')\n               })\n          }\n        \n    }, [history, error , success ]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n    };\n}\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup\">Are you a Subscriber?</a><br />\n\n                    <a href=\"/author/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n\n}\n\nexport default AuthorSignup\n\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",["201","202","203","204","205","206","207","208","209","210"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Home.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",["211","212","213"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",["214"],"import React, { useState, useEffect } from 'react';\nimport CourseCard from '../Utils/CourseCard';\nimport AuthorHeader from './AuthorHeader';\nimport { Container, Row, Col } from 'shards-react';\nimport '../styles/UserDashboard.css';\nimport Axios from 'axios';\n\nexport default function AuthorDashboard() {\n    const cardTitles = ['title1', 'title5', 'title4', 'title3', 'title2'];\n    const [courses, setCourses] = useState([]);\n\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        Axios.post('/author/profile').then(res => {\n            setName(res.data.profiledata.firstName);\n        });\n\n        Axios.get('/homePage').then(res => {\n            console.log('Result : ', res.data.courseData);\n            setCourses(res.data.courseData);\n        });\n    }, []);\n\n    return (\n        <div>\n            <AuthorHeader />\n            <div className=\"all\">\n                <h1>Welcome {name}!</h1>\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\n                <div className=\"main\">\n                    {courses.map(course => (\n                        <Container className=\"cc\">\n                            <Row>\n                                <Col>\n                                    <CourseCard course={course} />\n                                </Col>\n                            </Row>\n                        </Container>\n                    ))}\n                    ;\n                </div>\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorProfile.js",["215","216","217","218","219"],"import React, { useState, useEffect } from 'react';\nimport AuthorHeader from './AuthorHeader';\nimport '../styles/UserProfile.css';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\n\nexport default function AuthorProfile() {\n    const [firstName, setfirstName] = useState('First Name');\n    const [middleName, setmiddleName] = useState('Middle Name');\n    const [lastName, setlastName] = useState('Last Name');\n    const [phNum, setphNum] = useState('Phone Number');\n    const [linkedInURL, setlinkedInURL] = useState('LinkedIn URL');\n    const [twitterURL, settwitterURL] = useState('Twitter URL');\n    const [qualification, setqualification] = useState('Qaulification');\n    const [biography, setBiography] = useState('Biography ');\n\n    useEffect(() => {\n        axios.post('/author/profile').then(res => {\n            //console.log(\"Project : \" , res.data)\n            setfirstName(res.data.profiledata.firstName);\n            setmiddleName(res.data.profiledata.middleName);\n            setlastName(res.data.profiledata.lastName);\n            setphNum(res.data.profiledata.phNum);\n            setlinkedInURL(res.data.profiledata.linkedInURL);\n            settwitterURL(res.data.profiledata.twitterURL);\n            setqualification(res.data.profiledata.qualification);\n            setBiography(res.data.profiledata.biography);\n        });\n    }, []);\n\n    const ImageUpload = () => {\n        const [file, setFile] = useState('');\n        const [imagePreviewUrl, setImagePreview] = useState('');\n\n        useEffect(() => {\n            axios.post('/author/profileImageView').then(res => {\n                setImagePreview(res.data.url);\n            });\n        }, []);\n\n        const _handleSubmit = e => {\n            e.preventDefault();\n            // TODO: do something with -> this.state.file\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n            axios({\n                method: 'post',\n                url: '/author/profileImageUpdate',\n                data: formData\n            });\n        };\n\n        const _handleImageChange = e => {\n            e.preventDefault();\n\n            let reader = new FileReader();\n            let file = e.target.files[0];\n\n            reader.onloadend = () => {\n                setFile(file);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        };\n\n        return (\n            <div>\n                <form onSubmit={e => _handleSubmit(e)}>\n                    <input className=\"ProfileImageInputButton\" type=\"file\" onChange={e => _handleImageChange(e)} />\n                    <Button className=\"ProfileImageSubmitButton\" type=\"submit\" onClick={e => _handleSubmit(e)}>\n                        Upload Image\n                    </Button>\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <AuthorHeader />\n            <div className=\"profiletab\">\n                <Tabs id=\"profileTab\">\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\n                        <div className=\"ProfilePic\">\n                            <ImageUpload />\n                        </div>\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#firstName\">First Name</label>\n                                <FormInput\n                                    id=\"#firstName\"\n                                    value={firstName}\n                                    onChange={event => {\n                                        setfirstName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#middleName\">Middle Name</label>\n                                <FormInput\n                                    id=\"#middleName\"\n                                    value={middleName}\n                                    onChange={event => {\n                                        setmiddleName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#lastName\">Last Name</label>\n                                <FormInput\n                                    id=\"#lastName\"\n                                    value={lastName}\n                                    onChange={event => {\n                                        setlastName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#phNum\">Phone Number</label>\n                                <FormInput\n                                    id=\"#phNum\"\n                                    value={phNum}\n                                    onChange={event => {\n                                        setphNum(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {});\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\n                                <FormInput\n                                    id=\"#linkedInURL\"\n                                    value={linkedInURL}\n                                    onChange={event => {\n                                        setlinkedInURL(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\n                                <FormInput\n                                    id=\"#twitterURL\"\n                                    value={twitterURL}\n                                    onChange={event => {\n                                        settwitterURL(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {});\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"education\" title=\"Education\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#qualification\">Qualification</label>\n                                <FormInput\n                                    id=\"#qualification\"\n                                    value={qualification}\n                                    onChange={event => {\n                                        setqualification(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\n                                <FormInput\n                                    id=\"#areaOfInterest\"\n                                    value={biography}\n                                    onChange={event => {\n                                        setBiography(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {});\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CreateCourse.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/CreateCourse.css';\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\nimport { Image } from 'react-bootstrap';\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport { Slider, Switch } from 'antd';\nimport axios from 'axios';\nimport { Upload } from 'antd';\n\nexport default function CreateCourse() {\n    let history = useHistory();\n    const [courseId, setCourseId] = useState('');\n\n    useEffect(() => {\n         console.log(\"History : \" , history.location.state.id)\n          if(history.location.state === undefined){\n              history.push('/author/uploadcourse')\n          }else{\n            setCourseId(history.location.state.id)\n          }\n\n         // console.log(\"History : \" , history.location.state.id)\n        //   if(history.location.state === undefined){\n        //       history.push('/author/uploadcourse')\n        //   }else{\n        //     setCourseId(history.location.state.id)\n        //   }\n\n    }, []);\n\n    const PreviewVedioUpload = () => {\n        const [vedioFile , setVedioFile] = useState(null)\n        function handelFileChange(e) {\n            setVedioFile(e.target.files[0])\n        }\n        function handleSubmit() {\n            const formData = new FormData()\n            formData.append('image', vedioFile);\n            formData.append('courseId', history.location.state.id); //Inserting course ID maunually    \n            axios({\n                method: 'post',\n                url: '/author/uploadPreview',\n                data: formData \n            })\n        }\n        return(\n            <div>\n                <input type = 'file' onChange = {e => handelFileChange(e)}/>\n                <br />\n                <button onClick = {handleSubmit}>Upload</button>\n            </div>\n        )\n    }\n\n    const ImageUpload = () => {\n\n        const [file , setFile] = useState('')\n        const [imagePreviewUrl , setImagePreview] = useState('')\n        const _handleSubmit = (e) => {\n\n            e.preventDefault();\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n\n            formData.append('courseId' , history.location.state.id ) // Inserting course Id manually \n            axios({\n                method: 'post',\n                url: '/author/uploadThumbnail',\n                data: formData \n            })\n        }\n       \n\n\n        const _handleImageChange = e => {\n\n            e.preventDefault();\n            let reader = new FileReader();\n            let file = e.target.files[0];\n            reader.onloadend = () => {\n\n                setFile(file)\n                setImagePreview(reader.result)\n            }\n            reader.readAsDataURL(file)\n        }\n        return(\n                <div >\n                <form onSubmit={(e)=>_handleSubmit(e)}>\n                <input  \n                    type=\"file\" \n                    onChange={(e)=>_handleImageChange(e)} \n\n                    />\n                <button    \n                    type=\"submit\" \n                    onClick={(e)=>_handleSubmit(e)}>Upload Image</button>\n\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    // Course Thumbnail\n    const CourseThumbnail = () => {\n        const [fileList, setFileList] = useState([]);\n\n        const onChange = ({ fileList: newFileList }) => {\n            setFileList(newFileList);\n        };\n\n        const onPreview = async file => {\n            let src = file.url;\n            if (!src) {\n                src = await new Promise(resolve => {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(file.originFileObj);\n                    reader.onload = () => resolve(reader.result);\n                });\n            }\n            const image = new Image();\n            image.src = src;\n            const imgWindow = window.open(src);\n            imgWindow.document.write(image.outerHTML);\n        };\n\n        return (\n            <ImgCrop rotate>\n                <Upload\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    listType=\"picture-card\"\n                    fileList={fileList}\n                    onChange={onChange}\n                    onPreview={onPreview}\n                >\n                    {fileList.length < 1 && '+ Upload'}\n                </Upload>\n            </ImgCrop>\n        );\n    };\n\n    // Preview Video\n    const previewprops = {\n        name: 'file',\n        action: 'author/uploadThumbnailPreview',\n        headers: {\n            authorization: 'authorization-text'\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n                console.log('error ; ', info);\n            }\n        }\n    };\n\n    // Price Slider\n    class PriceSlider extends React.Component {\n        state = {\n            disabled: false\n        };\n\n        handleDisabledChange = disabled => {\n            this.setState({ disabled });\n        };\n\n        render() {\n            const { disabled } = this.state;\n            return (\n                <>\n                    <Slider min={500} max={5000} range defaultValue={[700, 1500]} disabled={disabled} />\n                </>\n            );\n        }\n    }\n\n    function Section({ sectionId }) {\n        const [section, createSection] = useState(true);\n        const [sectionName, setSectionName] = useState('');\n\n        console.log('$$$$$$$$$$$$ Secid : ', sectionId);\n\n        const [fields, setFields] = useState([{ lectureName: '', lectureFile: null }]);\n\n        function handleAdd() {\n            const values = [...fields];\n            values.push({ lectureName: '', lectureFile: null });\n            setFields(values);\n        }\n\n        function handleRemove(i) {\n            const values = [...fields];\n            values.splice(i, 1);\n            setFields(values);\n        }\n\n        function handleNameChange(i, event) {\n            const values = [...fields];\n            values[i].lectureName = event.target.value;\n            setFields(values);\n        }\n        function handleFileChange(i, event) {\n            const values = [...fields];\n            values[i].lectureFile = event.target.files[0];\n            setFields(values);\n        }\n\n        function saveLecture(i) {\n            const values = [...fields];\n            const formData = new FormData();\n            formData.append('image', values[i].lectureFile);\n            formData.append('vedioName', `${values[i].lectureName}`);\n            formData.append('sectionId', `${sectionId}`);\n            axios({\n                method: 'post',\n                url: '/author/add-video',\n                data: formData\n            });\n        }\n\n        return (\n            <div>\n                <Card className=\"CrCoCard\">\n                    <CardBody>\n                        <CardTitle>\n                            <h4>Section Name here</h4>\n                        </CardTitle>\n                        {fields.map((field, idx) => {\n                            return (\n                                <div key={`${field}-${idx}`}>\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Lecture Name and attach file\"\n                                        value={field.lectureName || ''}\n                                        onChange={e => handleNameChange(idx, e)}\n                                    />\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"file\"\n                                        placeholder=\"Upload File\"\n                                        onChange={e => handleFileChange(idx, e)}\n                                    />\n                                    <Button theme=\"success\" className=\"CrCoSaveLectureBut\" type=\"button\" onClick={() => saveLecture(idx)}>\n                                        Save Lecture\n                                    </Button>\n                                </div>\n                            );\n                        })}\n                        <Button theme=\"success\" className=\"CrCoAddLectureBut\" type=\"button\" onClick={() => handleAdd()}>\n                            Add Lecture\n                        </Button>\n                        <Button\n                            theme=\"success\"\n                            className=\"CrCoShowStateBut\"\n                            type=\"button\"\n                            onClick={() => {\n                                console.log('Feilds : ', fields);\n                            }}\n                        >\n                            Show State\n                        </Button>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n    function SectionContainer() {\n        //  const courseId = '60040cd8ca5848206b593c67'\n        const [sections, setSections] = useState([{ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' }]);\n        const [sectionCount, setSectionCount] = useState(0);\n        const [name, setName] = useState('');\n\n        const saveSection = i => {\n            setSectionCount(sectionCount + 1);\n            axios\n                .post('/author/create-section', {\n                    number: sectionCount,\n                    sectionName: name,\n                    courseId: `${history.location.state.id}`\n                    //courseId: '6006db170db0231310bd4728'\n                })\n                .then(res => {\n                    const values = [...sections];\n                    values[i].sectionNumber = sectionCount;\n                    values[i].sectionSaved = true;\n                    values[i].sectionName = name;\n                    values[i].sectionId = `${res.data.sectionId}`;\n                    setSections(values);\n                })\n                .catch(err => {\n                    console.log('Error : ', err);\n                });\n        };\n        const addSection = () => {\n            setName('');\n            const values = [...sections];\n            values.push({ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' });\n            setSections(values);\n        };\n\n        return (\n            <div>\n                {sections.map((section, idx) => {\n                    return !section.sectionSaved ? (\n                        <div>\n                            <FormInput\n                                className=\"videoIp\"\n                                type=\"text\"\n                                placeholder=\"Enter Section Name\"\n                                value={name || ''}\n                                onChange={e => setName(e.target.value)}\n                            />\n\n                            <Button theme=\"success\" className=\"CrCoSaveSecBut\" type=\"button\" onClick={() => saveSection(idx)}>\n                                Save Section\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Section sectionId={section.sectionId} />\n                        </div>\n                    );\n                })}\n                <Button className=\"CrCoAddSectionBtn\" theme=\"success\" type=\"button\" onClick={addSection}>\n                    Add Section\n                </Button>\n            </div>\n        );\n    }\n\n    const step1Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <label className=\"labelstep2\" htmlFor=\"name\">\n                                Section Name:\n                            </label>\n                        </Form>\n                    </div>\n                    <SectionContainer />\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        Add a thumbnail and preview\n                        <div className=\"thumbnailUpload\">\n                            <h4>Thumbnail</h4>\n                            <ImageUpload />\n                        </div>\n                        <div className=\"previewUpload\">\n                            <h4>Preview</h4>\n\n                            <PreviewVedioUpload />\n                          \n\n                        </div>\n                        <Form>\n                            <FormGroup></FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step3Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"priceRange\">\n                        What price range would to like to set for your course\n                        <PriceSlider />\n                    </div>\n                    <Form>\n                        <label className=\"labelstep2\" htmlFor=\"name\">\n                            Would you like to add any coupons?:\n                        </label>\n                        <FormGroup>\n                            <FormInput type=\"text\"></FormInput>\n                        </FormGroup>\n                    </Form>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"previewCourse\">Please Confirm all the data before submitting your course for preview</div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n        // handle the submit logic here\n        // This function will be executed at the last step\n        // when the submit button (next button in the previous steps) is pressed\n        history.push('/course/create');\n    }\n    return (\n        <div>\n            {/* <AuthorHeader /> */}\n            <div className=\"createheader\">\n                <Button className=\"buttonexitc\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                    Exit\n                </Button>\n                <div className=\"createheading\">Let's Set-up your Course!</div>\n                <Button className=\"buttonbackc\" theme=\"outline-danger\" href=\"/author/uploadcourse\">\n                    Back\n                </Button>\n            </div>\n            <div className=\"ui divider\"></div>\n            <div className=\"stepbar\">\n                <StepProgressBar\n                    startingStep={0}\n                    onSubmit={onFormSubmit}\n                    steps={[\n                        {\n                            label: 'Step 1',\n                            name: 'step 1',\n                            subtitle: 'Course Curiculam and Content',\n                            content: step1Content\n                            // validator: step1Validator\n                        },\n                        {\n                            label: 'Step 2',\n                            name: 'step 2',\n                            subtitle: 'Course Preview and Thumbnail',\n                            content: step2Content\n                            // validator: step2Validator\n                        },\n                        {\n                            label: 'Step 3',\n                            name: 'step 3',\n                            subtitle: 'Pricing and Coupons',\n                            content: step3Content\n                            // validator: step3Validator\n                        },\n                        {\n                            label: 'Step 4',\n                            name: 'step 4',\n                            subtitle: 'Submit for Preview',\n                            content: step4Content\n                            // validator: step4Validator\n                        }\n                    ]}\n                />\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseView.js",["238","239"],"import React, { useEffect, useState } from 'react';\nimport SubscriberHeader from '../Subscriber/SubscriberHeader';\nimport '../styles/CourseView.css';\nimport '../styles/video-react.css'; // import css\nimport HLSSource from '../Utils/HLSSource';\nimport { Player, ControlBar, ForwardControl, ReplayControl } from 'video-react';\nimport { Button } from 'shards-react';\nimport { Collapse } from 'antd';\nimport { Scrollbars } from 'rc-scrollbars';\nimport axios from 'axios'\n\nexport default function CourseView() {\n\n    const [sections , setSections] = useState([])\n    const [playerUrl , setUrl] = useState('')\n    \n    useEffect(() => {\n        axios.post('/author/course/sections' , {\n            courseId : \"6016bca4b217f3151fff05cb\"\n\n        }).then(res => {\n            res.data.sections.forEach((value , index) => {\n                setSections(oldArray => [...oldArray, {sectionName : value.sectionName , sectionVedios : value.video}])\n            })\n        })\n    } , [])\n\n    const Section = ({section}) => {\n        const { Panel } = Collapse;\n\n        return(\n            \n            <Collapse>\n                 <Panel header = {section.sectionName} >\n                {\n                    section.sectionVedios.map(vedio => \n                    <button key = {vedio.videoName} onClick = {() => {\n                        setUrl(`${vedio.videoURL}`)\n                        console.log(\"url : \" , playerUrl)\n                        }}>\n                        {vedio.videoName}\n                    </button>\n                    \n                    )\n                }\n                </Panel>\n            </Collapse>\n        )\n    }   \n    return (\n        <div>\n            <SubscriberHeader />\n            <div className=\"vidPlayerdiv\">\n                <h1 className=\"crvTitle\">Title</h1>\n\n                {/* If you want to use MP4 file, give a src prop to Player tag and remove HLSSoure tag || If you want to play m3u8 file, keep the HLSSource tag just change the url */}\n                <Player className=\"vidPlayer\"\n                    src = {playerUrl}\n                >\n                    {/* <HLSSource\n                        isVideoChild\n                        src=\"https://multiplatform-f.akamaihd.net/i/multi/will/bunny/big_buck_bunny_,640x360_400,640x360_700,640x360_1000,950x540_1500,.f4v.csmil/master.m3u8\"\n                    /> */}\n                    <ControlBar className=\"ctrlbar\" autoHide={true}>\n                        <ReplayControl seconds={10} order={2.2} />\n                        <ForwardControl seconds={10} order={3.2} />\n                    </ControlBar>\n                </Player>\n            </div>\n            <div  className=\"crvCollapse\"> \n                <Scrollbars style={{ width: 525, height: 630 }}>\n                    {\n                        sections.map(section => <Section section = {section} key={section.sectionName}/>) \n                    } \n                    \n                </Scrollbars>\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/UploadCourse.js",["240","241","242","243","244","245"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/UploadCourse.css';\nimport { Dropdown, Forms } from 'react-bootstrap';\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\nimport axios from 'axios';\n\nexport default function UploadCourse() {\n    const [title, setTitle] = useState('Course Name');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [suitableFor, setSuitableFor] = useState('');\n    const [platform, setPlatform] = useState('');\n    const [prerequisite, setPrerequisite] = useState('');\n\n    // setup the step content\n    let history = useHistory();\n    const step1Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <CardTitle className=\"institle\">Instructions</CardTitle>\n                    <p>Instructions will be entered here</p>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"name\">\n                                    What would you like to name your course?\n                                </label>\n\n                                <FormInput\n                                    type=\"text\"\n                                    id=\"title\"\n                                    onChange={e => setTitle(e.target.value)}\n                                    placeholder=\"Enter Something..\"\n                                ></FormInput>\n                            </FormGroup>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"desc\">\n                                    Give a short Description about your course!\n                                </label>\n                                <FormTextarea\n                                    rows=\"5\"\n                                    type=\"text\"\n                                    id=\"desc\"\n                                    onChange={e => setDescription(e.target.value)}\n                                    placeholder=\"Enter Something..\"\n                                />\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step3Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step3\">\n                        <label className=\"labelstep3\" htmlFor=\"dropdown\">\n                            Where would you categorize your course?\n                        </label>\n                        <Dropdown className=\"createdropdown\">\n                            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\n                                Choose\n                            </Dropdown.Toggle>\n                            <input type=\"text\" onChange={e => setCategory(e.target.value)} />\n                            <Dropdown.Menu>\n                                <Dropdown.Item href=\"#Development\">Development</Dropdown.Item>\n                                <Dropdown.Item href=\"#Business\">Business</Dropdown.Item>\n                                <Dropdown.Item href=\"#Finance&Accounting\">Finance & Accounting</Dropdown.Item>\n                                <Dropdown.Item href=\"#IT&Software\">IT & Software</Dropdown.Item>\n                                <Dropdown.Item href=\"#Marketing\">Marketing</Dropdown.Item>\n                                <Dropdown.Item href=\"Photography\">Photography</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n            <CardBody>\n                <div className=\"step4\">\n                    <Form>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"suit\">\n                                For whom this course will be suitable for?\n                            </label>\n                            <FormInput\n                                type=\"suit\"\n                                id=\"suit\"\n                                onChange={e => {\n                                    setSuitableFor(e.target.value);\n                                }}\n                                placeholder=\"Enter Something..\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"platform\">\n                                Platform?\n                            </label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"platform\"\n                                onChange={e => {\n                                    setPlatform(e.target.value);\n                                }}\n                                placeholder=\"Enter Something..\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"prerequisites\">\n                                Any prerequisites?\n                            </label>\n                            <FormInput\n                                type=\"suit\"\n                                id=\"prerequisites\"\n                                onChange={e => {\n                                    setPrerequisite(e.target.value);\n                                }}\n                                placeholder=\"Enter Something..\"\n                            />\n                        </FormGroup>\n                    </Form>\n                </div>\n            </CardBody>\n        </Card>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n        axios.post('/author/create-course', { title, description, category, suitableFor, platform, prerequisite }).then(res => {\n            console.log(res.data.courseId);\n            history.push({\n                pathname: '/course/create',\n                state: { id: res.data.courseId }\n            });\n        });\n\n        //\n    }\n\n    return (\n        <div>\n            <div className=\"createheading\">Get Started With Your Course</div>\n            <Button className=\"buttonexit\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                Exit\n            </Button>\n            <StepProgressBar\n                className=\"stepbar\"\n                startingStep={0}\n                onSubmit={onFormSubmit}\n                steps={[\n                    {\n                        label: 'Step 1',\n                        name: 'step 1',\n                        content: step1Content\n                        // validator: step1Validator\n                    },\n                    {\n                        label: 'Step 2',\n                        name: 'step 2',\n                        content: step2Content\n                        // validator: step2Validator\n                    },\n                    {\n                        label: 'Step 3',\n                        name: 'step 3',\n                        content: step3Content\n                        // validator: step3Validator\n                    },\n                    {\n                        label: 'Step 4',\n                        name: 'step 4',\n                        content: step4Content\n                        // validator: step4Validator\n                    }\n                ]}\n            />\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["246"],"import React from 'react';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\nimport CategoriesDropdown from \"../Utils/CategoriesDropdown\"\n\n// import { useDispatch } from 'react-redux';\n// import { logout } from '../../actions/subscriberActions';\n\n export const SubscriberHeader = () => {\n    return (\n        <div className=\"subscriberheader\">\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo}  width='90' heigh='90' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>\n                            <CategoriesDropdown />\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar>\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\">\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n            </Collapse>\n            <div className=\"right\">\n                <Collapse navbar>\n                <div>\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <Dropdown >\n                    <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                        <BsPersonSquare size=\"30\" />\n                    </Dropdown.Toggle>\n\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Button className=\"logoutbutton\" theme=\"outline-danger\" href=\"/\">Logout</Button>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                <div className=\"right\"></div>\n            </Collapse>\n            </div>\n\n        </Navbar>\n        </div>\n    );\n};\n\nexport default SubscriberHeader;\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorHeader.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/constants/userConstants.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Footer.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HLSSource.js",["247"],"import React, { Component } from 'react';\nimport Hls from 'hls.js';\nimport { BsReverseLayoutSidebarInsetReverse } from 'react-icons/bs';\n\nexport default class HLSSource extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.hls = new Hls();\n  }\n\n  componentDidMount() {\n    // `src` is the property get from this component\n    // `video` is the property insert from `Video` component\n    // `video` is the html5 video element\n    const { src, video } = this.props;\n    // load hls video source base on hls.js\n    if (Hls.isSupported()) {\n      this.hls.loadSource(src);\n      this.hls.attachMedia(video);\n      this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        video.play();\n      });\n    }\n  }\n\n\n  componentWillUnmount() {\n    // destroy hls video source\n    if (this.hls) {\n      this.hls.destroy();\n    }\n  }\n\n  render() {\n    return (\n      <source\n        src={this.props.src}\n        type={this.props.type || 'application/x-mpegURL'}\n      />\n    );\n  }\n}\n\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Header.js",["248"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport CategoriesDropdown from './CategoriesDropdown';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport var type = \"\";\n\nexport const Header = () => {\n    const history = useHistory();\n\n    function loginHandleClick() {\n        history.push('/subscriber/login');\n    }\n    const signupHandleClick = () => {\n        history.push('/subscriber/signup');\n    };\n   \n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} width='60' heigh='40' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink><CategoriesDropdown /></NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar >\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\" >\n                        <InputGroupAddon  type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                \n                \n            </Collapse>\n            <div className=\"right\">\n                    \n                    <Button outline theme=\"danger\" onClick={loginHandleClick}>\n                        LogIn\n                    </Button>\n                    <Button className=\"signupButton\" outline theme=\"danger\" onClick={signupHandleClick}>\n                        SignUp\n                    </Button>\n                </div>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/actions/subscriberActions.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/actions/authorActions.js",["249","250"],"import axios from 'axios'\nimport {\n  \n  AUTHOR_LOGIN_FAIL,\n  AUTHOR_LOGIN_REQUEST,\n  AUTHOR_LOGIN_SUCCESS,\n  AUTHOR_LOGOUT,\n\n  AUTHOR_REGISTER_FAIL,\n  AUTHOR_REGISTER_REQUEST,\n  AUTHOR_REGISTER_SUCCESS,\n  \n  AUTHOR_VERIFY_REQUEST,\n  AUTHOR_VERIFY_SUCCESS,\n  AUTHOR_VERIFY_FAIL,\n  SET_COURSE_ID,\n\n} from '../constants/userConstants'\n\n\nexport const register = (username, email, password , confirm_password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_REGISTER_REQUEST,\n       })\n   \n       await axios.post(\n         '/author/register',\n         { username, email, password , confirm_password },\n       ).then(res => {\n            dispatch({\n                 type : AUTHOR_REGISTER_SUCCESS ,\n                 payload : \"An Email has been sent to you.\"\n            })\n       })\n       \n     } catch (error) {\n       dispatch({\n         type: AUTHOR_REGISTER_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export const logout = () => (dispatch) => {\n     localStorage.removeItem('isAuthor')\n     dispatch({\n       type : AUTHOR_LOGOUT\n     })\n   }\n\n   export const verifyAuthor = (token) => async (dispatch) => {\n     try {\n       dispatch({\n         type:AUTHOR_VERIFY_REQUEST,\n       })\n   \n\n       const config = {\n         headers : {\n          'Content-Type': 'application/json',\n           'Authorization' : `Bearer ${token}`\n         }\n       }\n\n       await axios.post(\n         '/author/verify',\n         {token} ,\n         {\n          headers : {\n           'Content-Type': 'application/json',\n            'Authorization' : `Bearer ${token}`\n          }\n        }\n \n       )\n       dispatch({\n         type:AUTHOR_VERIFY_SUCCESS,\n       })\n  \n       \n     } catch (error) {\n       dispatch({\n         type:AUTHOR_VERIFY_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n\n   const login = (email, password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_LOGIN_REQUEST,\n       })\n   \n       const config = {\n         headers: {\n\n           'Content-Type': 'application/json',\n         },\n       }\n   \n       const { data } = await axios.post(\n         '/author/login',\n         { email, password },\n         config\n       )\n   \n       dispatch({\n         type: AUTHOR_LOGIN_SUCCESS,\n         payload: data,\n       })\n   \n     //  localStorage.setItem('isAuthor', true)\n     } catch (error) {\n       dispatch({\n         type: AUTHOR_LOGIN_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export default login \n\n   \n\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HomeCarousel.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/plugin.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetVerify.js",["251","252","253","254","255"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberNewPassword.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberEmailVerify.js",["256","257","258","259","260"],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":1,"column":27,"nodeType":"267","messageId":"268","endLine":1,"endColumn":36},{"ruleId":"265","severity":1,"message":"269","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":21},{"ruleId":"265","severity":1,"message":"270","line":2,"column":23,"nodeType":"267","messageId":"268","endLine":2,"endColumn":34},{"ruleId":"265","severity":1,"message":"271","line":8,"column":8,"nodeType":"267","messageId":"268","endLine":8,"endColumn":13},{"ruleId":"265","severity":1,"message":"266","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"269","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":21},{"ruleId":"265","severity":1,"message":"270","line":2,"column":23,"nodeType":"267","messageId":"268","endLine":2,"endColumn":34},{"ruleId":"265","severity":1,"message":"272","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":20},{"ruleId":"265","severity":1,"message":"273","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"274","line":5,"column":9,"nodeType":"267","messageId":"268","endLine":5,"endColumn":17},{"ruleId":"265","severity":1,"message":"269","line":13,"column":10,"nodeType":"267","messageId":"268","endLine":13,"endColumn":21},{"ruleId":"265","severity":1,"message":"270","line":13,"column":23,"nodeType":"267","messageId":"268","endLine":13,"endColumn":34},{"ruleId":"275","severity":1,"message":"276","line":28,"column":44,"nodeType":"277","messageId":"278","endLine":28,"endColumn":46},{"ruleId":"275","severity":1,"message":"276","line":31,"column":48,"nodeType":"277","messageId":"278","endLine":31,"endColumn":50},{"ruleId":"275","severity":1,"message":"276","line":72,"column":48,"nodeType":"277","messageId":"278","endLine":72,"endColumn":50},{"ruleId":"279","severity":1,"message":"280","line":30,"column":8,"nodeType":"281","endLine":30,"endColumn":29,"suggestions":"282"},{"ruleId":"265","severity":1,"message":"283","line":7,"column":12,"nodeType":"267","messageId":"268","endLine":7,"endColumn":17},{"ruleId":"265","severity":1,"message":"272","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":20},{"ruleId":"265","severity":1,"message":"284","line":6,"column":16,"nodeType":"267","messageId":"268","endLine":6,"endColumn":26},{"ruleId":"265","severity":1,"message":"285","line":10,"column":10,"nodeType":"267","messageId":"268","endLine":10,"endColumn":17},{"ruleId":"265","severity":1,"message":"286","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":17},{"ruleId":"279","severity":1,"message":"287","line":65,"column":8,"nodeType":"281","endLine":65,"endColumn":10,"suggestions":"288"},{"ruleId":"265","severity":1,"message":"289","line":67,"column":13,"nodeType":"267","messageId":"268","endLine":67,"endColumn":18},{"ruleId":"290","severity":1,"message":"291","line":70,"column":34,"nodeType":"292","messageId":"293","endLine":70,"endColumn":36},{"ruleId":"294","severity":1,"message":"295","line":108,"column":27,"nodeType":"296","messageId":"297","endLine":108,"endColumn":56},{"ruleId":"275","severity":1,"message":"276","line":129,"column":39,"nodeType":"277","messageId":"278","endLine":129,"endColumn":41},{"ruleId":"279","severity":1,"message":"298","line":44,"column":8,"nodeType":"281","endLine":44,"endColumn":35,"suggestions":"299"},{"ruleId":"265","severity":1,"message":"300","line":8,"column":10,"nodeType":"267","messageId":"268","endLine":8,"endColumn":16},{"ruleId":"265","severity":1,"message":"301","line":8,"column":18,"nodeType":"267","messageId":"268","endLine":8,"endColumn":25},{"ruleId":"265","severity":1,"message":"302","line":9,"column":8,"nodeType":"267","messageId":"268","endLine":9,"endColumn":14},{"ruleId":"265","severity":1,"message":"303","line":14,"column":12,"nodeType":"267","messageId":"268","endLine":14,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":33,"column":48,"nodeType":"277","messageId":"278","endLine":33,"endColumn":50},{"ruleId":"275","severity":1,"message":"276","line":63,"column":48,"nodeType":"277","messageId":"278","endLine":63,"endColumn":50},{"ruleId":"304","severity":1,"message":"305","line":99,"column":25,"nodeType":"306","endLine":99,"endColumn":96},{"ruleId":"275","severity":1,"message":"276","line":125,"column":44,"nodeType":"277","messageId":"278","endLine":125,"endColumn":46},{"ruleId":"279","severity":1,"message":"307","line":136,"column":8,"nodeType":"281","endLine":136,"endColumn":10,"suggestions":"308"},{"ruleId":"275","severity":1,"message":"276","line":182,"column":72,"nodeType":"277","messageId":"278","endLine":182,"endColumn":74},{"ruleId":"275","severity":1,"message":"276","line":20,"column":44,"nodeType":"277","messageId":"278","endLine":20,"endColumn":46},{"ruleId":"275","severity":1,"message":"276","line":36,"column":44,"nodeType":"277","messageId":"278","endLine":36,"endColumn":46},{"ruleId":"279","severity":1,"message":"307","line":47,"column":8,"nodeType":"281","endLine":47,"endColumn":10,"suggestions":"309"},{"ruleId":"265","severity":1,"message":"310","line":9,"column":11,"nodeType":"267","messageId":"268","endLine":9,"endColumn":21},{"ruleId":"265","severity":1,"message":"300","line":8,"column":10,"nodeType":"267","messageId":"268","endLine":8,"endColumn":16},{"ruleId":"265","severity":1,"message":"301","line":8,"column":18,"nodeType":"267","messageId":"268","endLine":8,"endColumn":25},{"ruleId":"265","severity":1,"message":"311","line":9,"column":10,"nodeType":"267","messageId":"268","endLine":9,"endColumn":24},{"ruleId":"265","severity":1,"message":"312","line":10,"column":8,"nodeType":"267","messageId":"268","endLine":10,"endColumn":15},{"ruleId":"304","severity":1,"message":"305","line":82,"column":25,"nodeType":"306","endLine":82,"endColumn":96},{"ruleId":"265","severity":1,"message":"313","line":5,"column":38,"nodeType":"267","messageId":"268","endLine":5,"endColumn":50},{"ruleId":"265","severity":1,"message":"314","line":7,"column":27,"nodeType":"267","messageId":"268","endLine":7,"endColumn":34},{"ruleId":"265","severity":1,"message":"311","line":11,"column":10,"nodeType":"267","messageId":"268","endLine":11,"endColumn":24},{"ruleId":"265","severity":1,"message":"315","line":13,"column":18,"nodeType":"267","messageId":"268","endLine":13,"endColumn":24},{"ruleId":"265","severity":1,"message":"316","line":19,"column":12,"nodeType":"267","messageId":"268","endLine":19,"endColumn":20},{"ruleId":"279","severity":1,"message":"307","line":36,"column":8,"nodeType":"281","endLine":36,"endColumn":10,"suggestions":"317"},{"ruleId":"304","severity":1,"message":"305","line":110,"column":25,"nodeType":"306","endLine":110,"endColumn":96},{"ruleId":"265","severity":1,"message":"318","line":120,"column":11,"nodeType":"267","messageId":"268","endLine":120,"endColumn":26},{"ruleId":"265","severity":1,"message":"319","line":158,"column":11,"nodeType":"267","messageId":"268","endLine":158,"endColumn":23},{"ruleId":"265","severity":1,"message":"320","line":198,"column":16,"nodeType":"267","messageId":"268","endLine":198,"endColumn":23},{"ruleId":"265","severity":1,"message":"321","line":198,"column":25,"nodeType":"267","messageId":"268","endLine":198,"endColumn":38},{"ruleId":"265","severity":1,"message":"322","line":199,"column":16,"nodeType":"267","messageId":"268","endLine":199,"endColumn":27},{"ruleId":"265","severity":1,"message":"323","line":199,"column":29,"nodeType":"267","messageId":"268","endLine":199,"endColumn":43},{"ruleId":"265","severity":1,"message":"324","line":211,"column":18,"nodeType":"267","messageId":"268","endLine":211,"endColumn":30},{"ruleId":"265","severity":1,"message":"325","line":428,"column":14,"nodeType":"267","messageId":"268","endLine":428,"endColumn":28},{"ruleId":"265","severity":1,"message":"326","line":432,"column":14,"nodeType":"267","messageId":"268","endLine":432,"endColumn":28},{"ruleId":"265","severity":1,"message":"327","line":436,"column":14,"nodeType":"267","messageId":"268","endLine":436,"endColumn":28},{"ruleId":"265","severity":1,"message":"328","line":440,"column":14,"nodeType":"267","messageId":"268","endLine":440,"endColumn":28},{"ruleId":"265","severity":1,"message":"286","line":5,"column":8,"nodeType":"267","messageId":"268","endLine":5,"endColumn":17},{"ruleId":"265","severity":1,"message":"329","line":7,"column":10,"nodeType":"267","messageId":"268","endLine":7,"endColumn":16},{"ruleId":"265","severity":1,"message":"330","line":7,"column":20,"nodeType":"267","messageId":"268","endLine":7,"endColumn":25},{"ruleId":"265","severity":1,"message":"314","line":8,"column":27,"nodeType":"267","messageId":"268","endLine":8,"endColumn":34},{"ruleId":"265","severity":1,"message":"325","line":148,"column":14,"nodeType":"267","messageId":"268","endLine":148,"endColumn":28},{"ruleId":"265","severity":1,"message":"326","line":152,"column":14,"nodeType":"267","messageId":"268","endLine":152,"endColumn":28},{"ruleId":"265","severity":1,"message":"327","line":156,"column":14,"nodeType":"267","messageId":"268","endLine":156,"endColumn":28},{"ruleId":"265","severity":1,"message":"328","line":160,"column":14,"nodeType":"267","messageId":"268","endLine":160,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":34,"column":17,"nodeType":"306","endLine":34,"endColumn":58},{"ruleId":"265","severity":1,"message":"331","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":44},{"ruleId":"304","severity":1,"message":"305","line":39,"column":17,"nodeType":"306","endLine":39,"endColumn":57},{"ruleId":"265","severity":1,"message":"332","line":16,"column":3,"nodeType":"267","messageId":"268","endLine":16,"endColumn":16},{"ruleId":"265","severity":1,"message":"333","line":62,"column":14,"nodeType":"267","messageId":"268","endLine":62,"endColumn":20},{"ruleId":"265","severity":1,"message":"266","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"269","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":21},{"ruleId":"265","severity":1,"message":"270","line":2,"column":23,"nodeType":"267","messageId":"268","endLine":2,"endColumn":34},{"ruleId":"265","severity":1,"message":"272","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":20},{"ruleId":"265","severity":1,"message":"273","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"269","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":21},{"ruleId":"265","severity":1,"message":"270","line":2,"column":23,"nodeType":"267","messageId":"268","endLine":2,"endColumn":34},{"ruleId":"265","severity":1,"message":"272","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":20},{"ruleId":"265","severity":1,"message":"273","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":26},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'login' is defined but never used.","'useHistory' is defined but never used.","'verifySubscriber' is defined but never used.","'register' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.","ArrayExpression",["336"],"'email' is assigned a value but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'HLSSource' is defined but never used.","React Hook useEffect has a missing dependency: 'courseTitle'. Either include it or remove the dependency array.",["337"],"'Panel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["338"],"'Upload' is defined but never used.","'message' is defined but never used.","'Avatar' is defined but never used.","'url' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["339"],["340"],"'cardTitles' is assigned a value but never used.","'UploadOutlined' is defined but never used.","'ImgCrop' is defined but never used.","'FormTextarea' is defined but never used.","'CardImg' is defined but never used.","'Switch' is defined but never used.","'courseId' is assigned a value but never used.",["341"],"'CourseThumbnail' is assigned a value but never used.","'previewprops' is assigned a value but never used.","'section' is assigned a value but never used.","'createSection' is assigned a value but never used.","'sectionName' is assigned a value but never used.","'setSectionName' is assigned a value but never used.","'handleRemove' is defined but never used.","'step1Validator' is defined but never used.","'step2Validator' is defined but never used.","'step3Validator' is defined but never used.","'step4Validator' is defined but never used.","'Button' is defined but never used.","'Forms' is defined but never used.","'BsReverseLayoutSidebarInsetReverse' is defined but never used.","'SET_COURSE_ID' is defined but never used.","'config' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"348","fix":"350"},{"desc":"348","fix":"351"},"Update the dependencies array to be: [history, authorInfo, error]",{"range":"352","text":"353"},"Update the dependencies array to be: [courseTitle]",{"range":"354","text":"355"},"Update the dependencies array to be: [history, error, success, message]",{"range":"356","text":"357"},"Update the dependencies array to be: [history]",{"range":"358","text":"359"},{"range":"360","text":"359"},{"range":"361","text":"359"},[996,1017],"[history, authorInfo, error]",[2523,2525],"[courseTitle]",[1308,1335],"[history, error, success, message]",[5005,5007],"[history]",[1472,1474],[1334,1336]]
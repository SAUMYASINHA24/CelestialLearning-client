[{"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/index.js":"1","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/App.js":"2","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"3","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"4","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"5","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"6","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"7","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"8","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js":"9","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetVerify.js":"10","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberNewPassword.js":"11","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberEmailVerify.js":"12","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"13","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"14","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"15","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"16","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"17","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"18","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js":"19","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorForgetVerify.js":"20","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorNewPassword.js":"21","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorEmailVerify.js":"22","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Home.js":"23","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/UploadCourse.js":"24","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CreateCourse.js":"25","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseHome.js":"26","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseView.js":"27","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/jwplayer/demo.js":"28","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"29","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/verify.js":"30","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CourseCard.js":"31","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberCourseCarousel.js":"32","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HLSSource.js":"33","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"34","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Footer.js":"35","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Header.js":"36","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Carousel.js":"37","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HomeCarousel.js":"38","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorCourseCarousel.js":"39","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js":"40"},{"size":231,"mtime":1613719164060,"results":"41","hashOfConfig":"42"},{"size":4747,"mtime":1613719164044,"results":"43","hashOfConfig":"42"},{"size":3027,"mtime":1613719164044,"results":"44","hashOfConfig":"42"},{"size":4306,"mtime":1613719164044,"results":"45","hashOfConfig":"42"},{"size":540,"mtime":1613719164044,"results":"46","hashOfConfig":"42"},{"size":14260,"mtime":1613719164044,"results":"47","hashOfConfig":"42"},{"size":2077,"mtime":1613726029359,"results":"48","hashOfConfig":"42"},{"size":5483,"mtime":1613719164044,"results":"49","hashOfConfig":"42"},{"size":2098,"mtime":1613719164044,"results":"50","hashOfConfig":"42"},{"size":572,"mtime":1613719164044,"results":"51","hashOfConfig":"42"},{"size":3180,"mtime":1613719164044,"results":"52","hashOfConfig":"42"},{"size":516,"mtime":1613719164044,"results":"53","hashOfConfig":"42"},{"size":2941,"mtime":1613719164044,"results":"54","hashOfConfig":"42"},{"size":4298,"mtime":1613719164044,"results":"55","hashOfConfig":"42"},{"size":487,"mtime":1613719164044,"results":"56","hashOfConfig":"42"},{"size":15726,"mtime":1613719164044,"results":"57","hashOfConfig":"42"},{"size":1222,"mtime":1613719164044,"results":"58","hashOfConfig":"42"},{"size":5423,"mtime":1613719164044,"results":"59","hashOfConfig":"42"},{"size":2110,"mtime":1613719164044,"results":"60","hashOfConfig":"42"},{"size":563,"mtime":1613719164044,"results":"61","hashOfConfig":"42"},{"size":3156,"mtime":1613719164044,"results":"62","hashOfConfig":"42"},{"size":524,"mtime":1613719164044,"results":"63","hashOfConfig":"42"},{"size":1421,"mtime":1613724890461,"results":"64","hashOfConfig":"42"},{"size":9120,"mtime":1613719164044,"results":"65","hashOfConfig":"42"},{"size":19106,"mtime":1613719164044,"results":"66","hashOfConfig":"42"},{"size":9746,"mtime":1613719164044,"results":"67","hashOfConfig":"42"},{"size":3692,"mtime":1613734242792,"results":"68","hashOfConfig":"42"},{"size":377,"mtime":1613719164056,"results":"69","hashOfConfig":"42"},{"size":3328,"mtime":1613719164044,"results":"70","hashOfConfig":"42"},{"size":740,"mtime":1613719164044,"results":"71","hashOfConfig":"42"},{"size":854,"mtime":1613719164044,"results":"72","hashOfConfig":"42"},{"size":3636,"mtime":1613719164044,"results":"73","hashOfConfig":"42"},{"size":1002,"mtime":1613734761452,"results":"74","hashOfConfig":"42"},{"size":3506,"mtime":1613719164044,"results":"75","hashOfConfig":"42"},{"size":2572,"mtime":1613719164044,"results":"76","hashOfConfig":"42"},{"size":2610,"mtime":1613724457769,"results":"77","hashOfConfig":"42"},{"size":3503,"mtime":1613719164044,"results":"78","hashOfConfig":"42"},{"size":1122,"mtime":1613719164044,"results":"79","hashOfConfig":"42"},{"size":3517,"mtime":1613719164044,"results":"80","hashOfConfig":"42"},{"size":943,"mtime":1613719164044,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"96rb5c",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/index.js",[],["176","177"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/App.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",["178","179","180","181"],"import React, { useState, useEffect } from 'react';\nimport SubscriberHeader from './SubscriberHeader';\nimport '../styles/UserProfile.css';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Axios from 'axios';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\nexport default function SubscriberProfile({ history }) {\n    const [url, setUrl] = useState('');\n    const [imgStatus, setStatus] = useState('Upload Image');\n    const [firstName, setfirstName] = useState('First Name');\n    const [middleName, setmiddleName] = useState('Middle Name');\n    const [lastName, setlastName] = useState('Last Name');\n    const [phNum, setphNum] = useState('Phone Number');\n    const [linkedInURL, setlinkedInURL] = useState('LinkedIn URL');\n    const [twitterURL, settwitterURL] = useState('Twitter URL');\n    const [higherEducation, sethigherEducation] = useState('Higher Education');\n    const [areaOfInterest, setareaOfInterest] = useState('Area Of Interest');\n\n    const ImageUpload = () => {\n        const [file, setFile] = useState('');\n        const [imagePreviewUrl, setImagePreview] = useState('');\n\n        useEffect(() => {\n            axios\n                .post('/subscriber/profileImageView')\n                .then(res => {\n                    const ext = res.data.url.slice(-2);\n                    if (ext === 'NA') {\n                        setStatus('Upload Image');\n                    } else {\n                        setStatus('Update Image');\n                    }\n                    setImagePreview(res.data.url);\n\n                })\n                .catch(error => {\n                    if (error.response.data.message === 'Unauthorised.') {\n                        history.push('/subscriber/login');\n                    } else {\n                        Swal.fire({\n                            icon: 'error',\n                            text: `${error.response.data.message}`\n                        });\n                    }\n                });\n        }, []);\n\n        const _handleSubmit = e => {\n            e.preventDefault();\n            // TODO: do something with -> this.state.file\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n            axios({\n                method: 'post',\n                url: '/subscriber/profileImageUpdate',\n                data: formData\n            })\n                .then(res => {\n                    Swal.fire({\n                        icon: 'success',\n                        text: `${res.data.message}`\n                    });\n                })\n                .catch(error => {\n                    if (error.response.data.message === 'Unauthorised.') {\n                        history.push('/subscriber/login');\n                    } else {\n                        Swal.fire({\n                            icon: 'error',\n                            text: `${error.response.data.message}`\n                        });\n                    }\n                });\n        };\n\n        const _handleImageChange = e => {\n            e.preventDefault();\n\n            let reader = new FileReader();\n            let file = e.target.files[0];\n\n            reader.onloadend = () => {\n                setFile(file);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        };\n\n        return (\n            <div>\n                <form onSubmit={e => _handleSubmit(e)}>\n                    <input className=\"ProfileImageInputButton\" type=\"file\" onChange={e => _handleImageChange(e)} />\n                    <Button className=\"ProfileImageSubmitButton\" type=\"submit\" onClick={e => _handleSubmit(e)}>\n                        {imgStatus}\n                    </Button>\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    useEffect(() => {\n        Axios.post('/subscriber/profile')\n            .then(res => {\n                console.log('Response Invalid: ', res);\n                setUrl(res.data.url);\n                console.log('Project : ', res.data);\n                const {\n                    firstName,\n                    middleName,\n                    lastName,\n                    phNum,\n                    linkedInURL,\n                    twitterURL,\n                    higherEducation,\n                    areaOfInterest\n                } = res.data.profiledata;\n\n                setfirstName(firstName);\n                setmiddleName(middleName);\n                setlastName(lastName);\n                setphNum(phNum);\n                setlinkedInURL(linkedInURL);\n                settwitterURL(twitterURL);\n                sethigherEducation(higherEducation);\n                setareaOfInterest(areaOfInterest);\n            })\n            .catch(error => {\n                if (error.response.data.message == 'Unauthorised.') {\n                    history.push('/subscriber/login');\n                } else {\n                    Swal.fire({\n                        icon: 'error',\n                        text: `${error.response.data.message}`\n                    });\n                }\n            });\n    }, []);\n\n    return (\n        <div>\n            <SubscriberHeader history={history} />\n            <div>\n                <Tabs id=\"profileTab\" className=\"profiletab\">\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\n                        <div className=\"ProfilePic\">\n                            <ImageUpload />\n                        </div>\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#firstName\">First Name</label>\n                                <FormInput id=\"#firstName\" value={firstName} onChange={e => setfirstName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#middleName\">Middle Name</label>\n                                <FormInput id=\"#middleName\" value={middleName} onChange={e => setmiddleName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#lastName\">Last Name</label>\n                                <FormInput id=\"#lastName\" value={lastName} onChange={e => setlastName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#phNum\">Phone Number</label>\n                                <FormInput id=\"#phNum\" value={phNum} onChange={e => setphNum(e.target.value)} />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    Axios.post('/subscriber/update', {\n                                        firstName,\n                                        middleName,\n                                        lastName,\n                                        phNum,\n                                        linkedInURL,\n                                        twitterURL,\n                                        higherEducation,\n                                        areaOfInterest\n                                    })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon: 'success',\n                                                text: `${res.data.message}`\n                                            });\n                                        })\n                                        .catch(error => {\n                                            if (error.response.data.message === 'Unauthorised.') {\n                                                history.push('/subscriber/login');\n                                            } else {\n                                                Swal.fire({\n                                                    icon: 'error',\n                                                    text: `${error.response.data.message}`\n                                                });\n                                            }\n                                        });\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\n                                <FormInput id=\"#linkedInURL\" value={linkedInURL} onChange={e => setlinkedInURL(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\n                                <FormInput id=\"#twitterURL\" value={twitterURL} onChange={e => settwitterURL(e.target.value)} />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    Axios.post('/subscriber/update', {\n                                        firstName,\n                                        middleName,\n                                        lastName,\n                                        phNum,\n                                        linkedInURL,\n                                        twitterURL,\n                                        higherEducation,\n                                        areaOfInterest\n                                    }).then(res => {\n                                        Swal.fire({\n                                        icon : 'success' ,\n                                        text : `${res.data.message}`\n                                        })\n                                    }).catch(error => {\n                                        if(error.response.data.message === \"Unauthorised.\"){\n                                            history.push('/subscriber/login');\n                                        }\n                                        else\n                                        {\n                                            Swal.fire({\n                                                icon : 'error' ,\n                                                text : `${error.response.data.message}`\n                                            })\n                                        }\n                                    });;\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"education\" title=\"Education\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#higherEducation\">Higher Education</label>\n                                <FormInput\n                                    id=\"#higherEducation\"\n                                    value={higherEducation}\n                                    onChange={e => sethigherEducation(e.target.value)}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\n                                <FormInput id=\"#areaOfInterest\" value={areaOfInterest} onChange={e => setareaOfInterest(e.target.value)} />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    Axios.post('/subscriber/update', {\n                                        firstName,\n                                        middleName,\n                                        lastName,\n                                        phNum,\n                                        linkedInURL,\n                                        twitterURL,\n                                        higherEducation,\n                                        areaOfInterest\n                                    }).then(res => {\n                                        Swal.fire({\n                                            icon : 'success' ,\n                                            text : `${res.data.message}`\n                                        })\n                                    }).catch(error => {\n                                        if(error.response.data.message === \"Unauthorised.\"){\n                                            history.push('/subscriber/login');\n                                        }\n                                        else\n                                        {\n                                            Swal.fire({\n                                                icon : 'error' ,\n                                                text : `${error.response.data.message}`\n                                            })\n                                        }\n                                    });;\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",["182","183","184","185","186","187","188"],"import React, { useState, useEffect } from 'react';\nimport CourseCard from '../Utils/CourseCard';\nimport SubscriberHeader from './SubscriberHeader';\nimport Axios from 'axios';\nimport Swal from 'sweetalert2'\nimport SubscriberCourseCarousel from \"./SubscriberCourseCarousel\"\n\nimport '../styles/UserDashboard.css';\n\nexport default function SubscriberDashboard({ history }) {\n    const [courseID,setcourseID] = useState('')\n\n    const [courses, setCourses] = useState([]);\n    const [status,setCourseStatus] = useState('')\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        Axios.post('/subscriber/profile').then(res => {\n            setName(res.data.profiledata.firstName);\n        }).catch(error => {\n            if(error.response.data.message === \"Unauthorised.\"){\n                history.push('/subscriber/login');\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        });\n\n        // Axios.get('/subscriber/myCourses').then(res => {\n        //     console.log('Result : ', res.data.courseData);\n        //     console.log(\"efdef\",res.data.courseData[0].courseId)\n        //     setcourseID(res.data.courseData.courseId)\n        //     console.log(\"ID:\", courseID)\n        //     setCourses(res.data.courseData);\n        // }).catch(error => {\n        //     if(error.response.data.message === \"Unauthorised.\"){\n        //         history.push('/subscriber/login');\n        //     }\n        //     else\n        //     {\n        //         setCourseStatus(\"No Courses\")\n        //     }\n        // });\n    }, []);\n\n    return (\n        <div>\n            <SubscriberHeader history={history} />\n            <div className=\"all\">\n                <h1>Welcome {name}</h1>\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\n                {status}\n                \n                    <SubscriberCourseCarousel />\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetVerify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberNewPassword.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberEmailVerify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorLogin.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSignup.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorVerify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorProfile.js",["189","190"],"import React, { useState, useEffect } from 'react';\nimport AuthorHeader from './AuthorHeader';\nimport '../styles/UserProfile.css';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'\n\nexport default function AuthorProfile({history}) {\n    const [imgStatus, setStatus] = useState('Upload Image');\n\n    const [firstName, setfirstName] = useState('First Name');\n    const [middleName, setmiddleName] = useState('Middle Name');\n    const [lastName, setlastName] = useState('Last Name');\n    const [phNum, setphNum] = useState('Phone Number');\n    const [linkedInURL, setlinkedInURL] = useState('LinkedIn URL');\n    const [twitterURL, settwitterURL] = useState('Twitter URL');\n    const [qualification, setqualification] = useState('Qaulification');\n    const [biography, setBiography] = useState('Biography ');\n\n    useEffect(() => {\n        axios.post('/author/profile').then(res => {\n            \n            setfirstName(res.data.profiledata.firstName);\n            setmiddleName(res.data.profiledata.middleName);\n            setlastName(res.data.profiledata.lastName);\n            setphNum(res.data.profiledata.phNum);\n            setlinkedInURL(res.data.profiledata.linkedInURL);\n            settwitterURL(res.data.profiledata.twitterURL);\n            setqualification(res.data.profiledata.qualification);\n            setBiography(res.data.profiledata.biography);\n        }).catch(error => {\n            if(error.response.data.message === \"Unauthorised.\"){\n                history.push('/author/login');\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        });\n    }, []);\n\n    const ImageUpload = () => {\n        const [file, setFile] = useState('');\n        const [imagePreviewUrl, setImagePreview] = useState('');\n\n        useEffect(() => {\n            axios.post('/author/profileImageView').then(res => {\n                const ext = res.data.url.slice(-2);\n                if (ext === 'NA') {\n                    setStatus('Upload Image');\n                } else {\n                    setStatus('Update Image');\n                }\n                setImagePreview(res.data.url);\n            }).catch(error => {\n                if(error.response.data.message === \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            });\n        }, []);\n\n        const _handleSubmit = e => {\n            e.preventDefault();\n            // TODO: do something with -> this.state.file\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n            axios({\n                method: 'post',\n                url: '/author/profileImageUpdate',\n                data: formData\n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n\n                if(error.response.data.message === \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            });\n        };\n\n        const _handleImageChange = e => {\n            e.preventDefault();\n\n            let reader = new FileReader();\n            let file = e.target.files[0];\n\n            reader.onloadend = () => {\n                setFile(file);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        };\n\n        return (\n            <div>\n                <form onSubmit={e => _handleSubmit(e)}>\n                    <input className=\"ProfileImageInputButton\" type=\"file\" onChange={e => _handleImageChange(e)} />\n                    <Button className=\"ProfileImageSubmitButton\" type=\"submit\" onClick={e => _handleSubmit(e)}>\n                        {imgStatus}\n                    </Button>\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <AuthorHeader history={history}/>\n            <div className=\"profiletab\">\n                <Tabs id=\"profileTab\">\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\n                        <div className=\"ProfilePic\">\n                            <ImageUpload />\n                        </div>\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#firstName\">First Name</label>\n                                <FormInput\n                                    id=\"#firstName\"\n                                    value={firstName}\n                                    onChange={event => {\n                                        setfirstName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#middleName\">Middle Name</label>\n                                <FormInput\n                                    id=\"#middleName\"\n                                    value={middleName}\n                                    onChange={event => {\n                                        setmiddleName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#lastName\">Last Name</label>\n                                <FormInput\n                                    id=\"#lastName\"\n                                    value={lastName}\n                                    onChange={event => {\n                                        setlastName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#phNum\">Phone Number</label>\n                                <FormInput\n                                    id=\"#phNum\"\n                                    value={phNum}\n                                    onChange={event => {\n                                        setphNum(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon : 'success' ,\n                                                text : `${res.data.message}`\n                                            })\n                                        }).catch(error => {\n                                            if(error.response.data.message === \"Unauthorised.\"){\n                                                history.push('/author/login');\n                                            }\n                                            else\n                                            {\n                                                Swal.fire({\n                                                    icon : 'error' ,\n                                                    text : `${error.response.data.message}`\n                                                })\n                                            }\n                                        });\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\n                                <FormInput\n                                    id=\"#linkedInURL\"\n                                    value={linkedInURL}\n                                    onChange={event => {\n                                        setlinkedInURL(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\n                                <FormInput\n                                    id=\"#twitterURL\"\n                                    value={twitterURL}\n                                    onChange={event => {\n                                        settwitterURL(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon : 'success' ,\n                                                text : `${res.data.message}`\n                                            })\n                                        }).catch(error => {\n                                            if(error.response.data.message === \"Unauthorised.\"){\n                                                history.push('/author/login');\n                                            }\n                                            else\n                                            {\n                                                Swal.fire({\n                                                    icon : 'error' ,\n                                                    text : `${error.response.data.message}`\n                                                })\n                                            }\n                                        });\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"education\" title=\"Education\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#qualification\">Qualification</label>\n                                <FormInput\n                                    id=\"#qualification\"\n                                    value={qualification}\n                                    onChange={event => {\n                                        setqualification(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\n                                <FormInput\n                                    id=\"#areaOfInterest\"\n                                    value={biography}\n                                    onChange={event => {\n                                        setBiography(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon : 'success' ,\n                                                text : `${res.data.message}`\n                                            })\n                                        }).catch(error => {\n                                            if(error.response.data.message === \"Unauthorised.\"){\n                                                history.push('/author/login');\n                                            }\n                                            else\n                                            {\n                                                Swal.fire({\n                                                    icon : 'error' ,\n                                                    text : `${error.response.data.message}`\n                                                })\n                                            }\n                                        });;\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",["191"],"import React, { useState, useEffect } from 'react';\nimport AuthorHeader from './AuthorHeader';\nimport '../styles/UserDashboard.css';\nimport Axios from 'axios';\nimport AuthorCourseCarousel from './AuthorCourseCarousel';\nimport Swal from 'sweetalert2';\n\nexport default function AuthorDashboard({ history }) {\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        Axios.post('/author/profile')\n            .then(res => {\n                setName(res.data.profiledata.firstName);\n            })\n            .catch(error => {\n                if (error.response.data.message === 'Unauthorised.') {\n                    history.push('/author/login');\n                } else {\n                    Swal.fire({\n                        icon: 'error',\n                        text: `${error.response.data.message}`\n                    });\n                }\n            });\n    }, []);\n\n    return (\n        <div>\n            <AuthorHeader history={history} />\n            <div className=\"all\">\n                <h1>Welcome {name}!</h1>\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\n                <AuthorCourseCarousel />\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorSettings.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorForgetVerify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorNewPassword.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorEmailVerify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Home.js",["192","193","194","195","196","197","198","199"],"import React, { useEffect, useState } from 'react';\nimport { Header } from './Header';\nimport CourseCard from './CourseCard';\nimport HomeCarousel from './HomeCarousel';\nimport Footer1 from './Footer';\nimport { Container, Row, Col } from 'shards-react';\nimport axios from 'axios';\nimport CarouselDemo from '../Utils/Carousel';\nimport SubscriberHeader from '../Subscriber/SubscriberHeader';\nimport Cookies from 'js-cookie';\nimport AuthorHeader from '../Author/AuthorHeader';\n\nexport default function Home({ history }) {\n    const categories = ['IT & Software', 'Finance & Accounting', 'Development', 'Business', 'Marketing', 'Photography'];\n    const [courses, setCourses] = useState([]);\n    function Headerfunc() {\n        if (Cookies.get('u') === 's') {\n            return <SubscriberHeader />;\n        } else if (Cookies.get('u') === 'a') {\n            return <AuthorHeader />;\n        } else {\n            return <Header />;\n        }\n    }\n    // useEffect(() => {\n    //     axios.get('/home/getCourses').then(res => {\n    //         setCourses(res.data.courseData);\n    //     });\n    // }, []);\n\n    return (\n        <div className=\"home\">\n            <div className=\"header\">\n                <Headerfunc />\n            </div>\n            <HomeCarousel />\n\n            {categories.map(value => {\n                return <CarouselDemo cat={value} />;\n            })}\n\n            <Footer1 />\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/UploadCourse.js",["200","201","202","203","204","205"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/UploadCourse.css';\nimport { Dropdown} from 'react-bootstrap';\nimport { Card, CardTitle,CardBody } from 'shards-react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'\n\nexport default function UploadCourse() {\n    const [title, setTitle] = useState('Course Name');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [suitableFor, setSuitableFor] = useState('');\n    const [platform, setPlatform] = useState('');\n    const [prerequisite, setPrerequisite] = useState('');\n    const [cat,setCat] = useState('Choose a Category');\n    // setup the step content\n    let history = useHistory();\n    const step1Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <CardTitle className=\"institle\">Instructions</CardTitle>\n                    <p>Instructions will be entered here</p>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"name\">\n                                    What would you like to name your course?\n                                </label>\n\n                                <FormInput\n                                    type=\"text\"\n                                    id=\"title\"\n                                    onChange={e => setTitle(e.target.value)}\n                                    placeholder=\"Enter Something..\"\n                                ></FormInput>\n                            </FormGroup>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"desc\">\n                                    Give a short Description about your course!\n                                </label>\n                                <FormTextarea\n                                    rows=\"5\"\n                                    type=\"text\"\n                                    id=\"desc\"\n                                    onChange={e => setDescription(e.target.value)}\n                                    placeholder=\"Enter Something..\"\n                                />\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step3Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step3\">\n                        <label className=\"labelstep3\" htmlFor=\"dropdown\">\n                            Where would you categorize your course?\n                        </label>\n                        <Dropdown className=\"createdropdown\">\n                            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\n                                Choose\n                            </Dropdown.Toggle>\n                            {/* <input type=\"text\" onChange={e => setCategory(e.target.value)} /> */}\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={e=>setCategory('Development')}>Development</Dropdown.Item>\n                                <Dropdown.Item onClick={e=>setCategory(\"Business\")}>Business</Dropdown.Item>\n                                <Dropdown.Item onClick={e=>setCategory(\"Finance & Accounting\")}>Finance & Accounting</Dropdown.Item>\n                                <Dropdown.Item onClick={e=>setCategory(\"IT & Software\")}>IT & Software</Dropdown.Item>\n                                <Dropdown.Item onClick={e=>setCategory(\"Marketing\")}>Marketing</Dropdown.Item>\n                                <Dropdown.Item onClick={e=>setCategory(\"Photography\")}>Photography</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n            <CardBody>\n                <div className=\"step4\">\n                    <Form>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"suit\">\n                                For whom this course will be suitable for?\n                            </label>\n                            <FormInput\n                                type=\"suit\"\n                                id=\"suit\"\n                                onChange={e => {\n                                    setSuitableFor(e.target.value);\n                                }}\n                                placeholder=\"Enter Something..\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"platform\">\n                                Platform?\n                            </label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"platform\"\n                                onChange={e => {\n                                    setPlatform(e.target.value);\n                                }}\n                                placeholder=\"Enter Something..\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"prerequisites\">\n                                Any prerequisites?\n                            </label>\n                            <FormInput\n                                type=\"suit\"\n                                id=\"prerequisites\"\n                                onChange={e => {\n                                    setPrerequisite(e.target.value);\n                                }}\n                                placeholder=\"Enter Something..\"\n                            />\n                        </FormGroup>\n                    </Form>\n                </div>\n            </CardBody>\n        </Card>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n        console.log(category)\n        axios.post('/author/create-course', { title, description, category, suitableFor, platform, prerequisite }).then(res => {\n            console.log(res.data.courseId);\n            history.push({\n                pathname: '/course/create',\n                state: { id: res.data.courseId }\n            });\n        }).catch(error=>{\n            if(error.response.data.message === \"Unauthorised.\"){\n                history.push('/author/login');\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        });\n\n        //\n    }\n\n    return (\n        <div>\n            <div className=\"createheading\">Get Started With Your Course</div>\n            <Button className=\"buttonexit\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                Exit\n            </Button>\n            <StepProgressBar\n                className=\"stepbar\"\n                startingStep={0}\n                onSubmit={onFormSubmit}\n                steps={[\n                    {\n                        label: 'Step 1',\n                        name: 'step 1',\n                        content: step1Content\n                        // validator: step1Validator\n                    },\n                    {\n                        label: 'Step 2',\n                        name: 'step 2',\n                        content: step2Content\n                        // validator: step2Validator\n                    },\n                    {\n                        label: 'Step 3',\n                        name: 'step 3',\n                        content: step3Content\n                        // validator: step3Validator\n                    },\n                    {\n                        label: 'Step 4',\n                        name: 'step 4',\n                        content: step4Content\n                        // validator: step4Validator\n                    }\n                ]}\n            />\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CreateCourse.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, Button } from 'shards-react';\nimport '../styles/CreateCourse.css';\nimport { Card, CardTitle, CardBody } from 'shards-react';\nimport { Image } from 'react-bootstrap';\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport { Slider } from 'antd';\nimport axios from 'axios';\nimport { Upload } from 'antd';\n\nimport Swal from 'sweetalert2'\n\nexport default function CreateCourse() {\n    let history = useHistory();\n    const [courseId, setCourseId] = useState('');\n    \n    useEffect(() => {});\n\n\n    const PreviewVedioUpload = () => {\n        const [vedioFile, setVedioFile] = useState(null);\n        function handelFileChange(e) {\n            setVedioFile(e.target.files[0]);\n        }\n        function handleSubmit() {\n            const formData = new FormData();\n            formData.append('image', vedioFile);\n\n            formData.append('courseId', history.location.state.id); //Inserting course ID maunually    \n            axios({\n                method: 'post',\n                url: '/author/uploadPreview',\n\n                data: formData \n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n                if(error.response.data.message === \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            })\n        }\n        return (\n            <div>\n                <input type=\"file\" onChange={e => handelFileChange(e)} />\n                <br />\n                <button onClick={handleSubmit}>Upload</button>\n            </div>\n        );\n    };\n    \n\n    const ImageUpload = () => {\n        const [file, setFile] = useState('');\n        const [imagePreviewUrl, setImagePreview] = useState('');\n        const _handleSubmit = e => {\n            e.preventDefault();\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n\n\n            formData.append('courseId' , history.location.state.id ) // Inserting course Id manually \n            axios({\n                method: 'post',\n                url: '/author/uploadThumbnail',\n\n                data: formData \n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n                if(error.response.data.message === \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            })\n        }\n\n\n        const _handleImageChange = e => {\n            e.preventDefault();\n            let reader = new FileReader();\n            let file = e.target.files[0];\n            reader.onloadend = () => {\n                setFile(file);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        };\n        return (\n            <div>\n                <form onSubmit={e => _handleSubmit(e)}>\n                    <input type=\"file\" onChange={e => _handleImageChange(e)} />\n                    <button type=\"submit\" onClick={e => _handleSubmit(e)}>\n                        Upload Image\n                    </button>\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    // Course Thumbnail\n    const CourseThumbnail = () => {\n        const [fileList, setFileList] = useState([]);\n\n        const onChange = ({ fileList: newFileList }) => {\n            setFileList(newFileList);\n        };\n\n        const onPreview = async file => {\n            let src = file.url;\n            if (!src) {\n                src = await new Promise(resolve => {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(file.originFileObj);\n                    reader.onload = () => resolve(reader.result);\n                });\n            }\n            const image = new Image();\n            image.src = src;\n            const imgWindow = window.open(src);\n            imgWindow.document.write(image.outerHTML);\n        };\n\n        return (\n            <ImgCrop rotate>\n                <Upload\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    listType=\"picture-card\"\n                    fileList={fileList}\n                    onChange={onChange}\n                    onPreview={onPreview}\n                >\n                    {fileList.length < 1 && '+ Upload'}\n                </Upload>\n            </ImgCrop>\n        );\n    };\n\n    // Preview Video\n    const previewprops = {\n        name: 'file',\n        action: 'author/uploadThumbnailPreview',\n        headers: {\n            authorization: 'authorization-text'\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n                console.log('error ; ', info);\n            }\n        }\n    };\n\n    // Price Slider\n    class PriceSlider extends React.Component {\n        state = {\n            disabled: false\n        };\n\n        handleDisabledChange = disabled => {\n            this.setState({ disabled });\n        };\n\n        render() {\n            const { disabled } = this.state;\n            return (\n                <>\n                    <Slider min={500} max={5000} range defaultValue={[700, 1500]} disabled={disabled} />\n                </>\n            );\n        }\n    }\n\n    function Section({ sectionId }) {\n        const [section, createSection] = useState(true);\n        const [sectionName, setSectionName] = useState('');\n\n        console.log('$$$$$$$$$$$$ Secid : ', sectionId);\n\n        const [fields, setFields] = useState([{ lectureName: '', lectureFile: null }]);\n\n        function handleAdd() {\n            const values = [...fields];\n            values.push({ lectureName: '', lectureFile: null });\n            setFields(values);\n        }\n\n        function handleRemove(i) {\n            const values = [...fields];\n            values.splice(i, 1);\n            setFields(values);\n        }\n\n        function handleNameChange(i, event) {\n            const values = [...fields];\n            values[i].lectureName = event.target.value;\n            setFields(values);\n        }\n        function handleFileChange(i, event) {\n            const values = [...fields];\n            values[i].lectureFile = event.target.files[0];\n            setFields(values);\n        }\n\n        function saveLecture(i) {\n            const values = [...fields];\n            const formData = new FormData();\n            formData.append('image', values[i].lectureFile);\n            formData.append('vedioName', `${values[i].lectureName}`);\n            formData.append('sectionId', `${sectionId}`);\n            axios({\n                method: 'post',\n                url: '/author/add-video',\n                data: formData\n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n                if(error.response.data.message === \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            });\n        }\n\n        return (\n            <div>\n                <Card className=\"CrCoCard\">\n                    <CardBody>\n                        <CardTitle>\n                            <h4>Section Name here</h4>\n                        </CardTitle>\n                        {fields.map((field, idx) => {\n                            return (\n                                <div key={`${field}-${idx}`}>\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Lecture Name and attach file\"\n                                        value={field.lectureName || ''}\n                                        onChange={e => handleNameChange(idx, e)}\n                                    />\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"file\"\n                                        placeholder=\"Upload File\"\n                                        onChange={e => handleFileChange(idx, e)}\n                                    />\n                                    <Button theme=\"success\" className=\"CrCoSaveLectureBut\" type=\"button\" onClick={() => saveLecture(idx)}>\n                                        Save Lecture\n                                    </Button>\n                                </div>\n                            );\n                        })}\n                        <Button theme=\"success\" className=\"CrCoAddLectureBut\" type=\"button\" onClick={() => handleAdd()}>\n                            Add Lecture\n                        </Button>\n                        <Button\n                            theme=\"success\"\n                            className=\"CrCoShowStateBut\"\n                            type=\"button\"\n                            onClick={() => {\n                                console.log('Feilds : ', fields);\n                            }}\n                        >\n                            Show State\n                        </Button>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n    function SectionContainer() {\n        //  const courseId = '60040cd8ca5848206b593c67'\n        const [sections, setSections] = useState([{ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' }]);\n        const [sectionCount, setSectionCount] = useState(0);\n        const [name, setName] = useState('');\n\n        const saveSection = i => {\n            setSectionCount(sectionCount + 1);\n            axios\n                .post('/author/create-section', {\n                    number: sectionCount,\n                    sectionName: name,\n                    courseId: `${history.location.state.id}`\n                    //courseId: '6006db170db0231310bd4728'\n                })\n                .then(res => {\n                    const values = [...sections];\n                    values[i].sectionNumber = sectionCount;\n                    values[i].sectionSaved = true;\n                    values[i].sectionName = name;\n                    values[i].sectionId = `${res.data.sectionId}`;\n                    setSections(values);\n                })\n                .catch(error => {\n                    if(error.response.data.message === \"Unauthorised.\"){\n                        history.push('/author/login');\n                    }\n                    else\n                    {\n                        Swal.fire({\n                            icon : 'error' ,\n                            text : `${error.response.data.message}`\n                        })\n                    }\n                });\n        };\n        const addSection = () => {\n            setName('');\n            const values = [...sections];\n            values.push({ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' });\n            setSections(values);\n        };\n\n        return (\n            <div>\n                {sections.map((section, idx) => {\n                    return !section.sectionSaved ? (\n                        <div>\n                            <FormInput\n                                className=\"videoIp\"\n                                type=\"text\"\n                                placeholder=\"Enter Section Name\"\n                                value={name || ''}\n                                onChange={e => setName(e.target.value)}\n                            />\n\n                            <Button theme=\"success\" className=\"CrCoSaveSecBut\" type=\"button\" onClick={() => saveSection(idx)}>\n                                Save Section\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Section sectionId={section.sectionId} />\n                        </div>\n                    );\n                })}\n                <Button className=\"CrCoAddSectionBtn\" theme=\"success\" type=\"button\" onClick={addSection}>\n                    Add Section\n                </Button>\n            </div>\n        );\n    }\n\n    const step1Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <label className=\"labelstep2\" htmlFor=\"name\">\n                                Section Name:\n                            </label>\n                        </Form>\n                    </div>\n                    <SectionContainer />\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        Add a thumbnail and preview\n                        <div className=\"thumbnailUpload\">\n                            <h4>Thumbnail</h4>\n                            <ImageUpload />\n                        </div>\n                        <div className=\"previewUpload\">\n                            <h4>Preview</h4>\n\n                            <PreviewVedioUpload />\n                        </div>\n                        <Form>\n                            <FormGroup></FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step3Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"priceRange\">\n                        What price range would to like to set for your course\n                        <PriceSlider />\n                    </div>\n                    <Form>\n                        <label className=\"labelstep2\" htmlFor=\"name\">\n                            Would you like to add any coupons?:\n                        </label>\n                        <FormGroup>\n                            <FormInput type=\"text\"></FormInput>\n                        </FormGroup>\n                    </Form>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"previewCourse\">Please Confirm all the data before submitting your course for preview</div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n        // handle the submit logic here\n        // This function will be executed at the last step\n        // when the submit button (next button in the previous steps) is pressed\n        history.push('/course/create');\n    }\n    \n    return (\n        <div>\n            {/* <AuthorHeader /> */}\n            <div className=\"createheader\">\n                <Button className=\"buttonexitc\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                    Exit\n                </Button>\n                <div className=\"createheading\">Let's Set-up your Course!</div>\n                <Button className=\"buttonbackc\" theme=\"outline-danger\" href=\"/author/uploadcourse\">\n                    Back\n                </Button>\n            </div>\n            <div className=\"ui divider\"></div>\n            <div className=\"stepbar\">\n                <StepProgressBar\n                    startingStep={0}\n                    onSubmit={onFormSubmit}\n                    steps={[\n                        {\n                            label: 'Step 1',\n                            name: 'step 1',\n                            subtitle: 'Course Curiculam and Content',\n                            content: step1Content\n                            // validator: step1Validator\n                        },\n                        {\n                            label: 'Step 2',\n                            name: 'step 2',\n                            subtitle: 'Course Preview and Thumbnail',\n                            content: step2Content\n                            // validator: step2Validator\n                        },\n                        {\n                            label: 'Step 3',\n                            name: 'step 3',\n                            subtitle: 'Pricing and Coupons',\n                            content: step3Content\n                            // validator: step3Validator\n                        },\n                        {\n                            label: 'Step 4',\n                            name: 'step 4',\n                            subtitle: 'Submit for Preview',\n                            content: step4Content\n                            // validator: step4Validator\n                        }\n                    ]}\n                />\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseHome.js",["220","221","222","223","224"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/CourseHome.css';\nimport { useParams } from 'react-router';\nimport Header from '../Utils/Header';\nimport { Card, CardTitle, CardBody, CardFooter, CardImg, Button, Container, Row, Col } from 'shards-react';\nimport razorpayLogo from '../assets/razorpay.png';\nimport Footer1 from '../Utils/Footer';\nimport { Collapse } from 'antd';\nimport HLSSource from '../Utils/HLSSource';\nimport Axios from 'axios';\nimport { Scrollbars } from 'rc-scrollbars';\nimport { Player, ControlBar, ForwardControl, ReplayControl } from 'video-react';\nimport Swal from 'sweetalert2';\nimport Cookies from 'js-cookie';\nimport SubscriberHeader from '../Subscriber/SubscriberHeader';\nimport AuthorHeader from \"../Author/AuthorHeader\"\n\nfunction loadScript(src) {\n    return new Promise(resolve => {\n        const script = document.createElement('script');\n        script.src = src;\n        script.onload = () => {\n            resolve(true);\n        };\n        script.onerror = () => {\n            resolve(false);\n        };\n        document.body.appendChild(script);\n    });\n}\nconst __DEV__ = document.domain === 'localhost';\nexport default function CourseHome({ history }) {\n    const [title, setTitle] = useState('');\n    const [price, setPrice] = useState(0);\n    const [suitableFor, setSuitableFor] = useState('');\n    const [description, setDescription] = useState('');\n    const [prerequisite, setPrerequisite] = useState([]);\n    const [authorName, setAuthorName] = useState('');\n    const [category, setCategory] = useState('');\n    const [courseThumbnail, setCourseThumbnail] = useState('');\n    const [coursePreview, setCoursePreview] = useState('');\n    const [sectionData, setSections] = useState([]);\n\n    let { courseTitle } = useParams();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        Axios.post('/course/details', {\n            courseTitle: courseTitle\n        }).then(res => {\n            setTitle(res.data.title);\n            setPrice(res.data.price);\n            setSuitableFor(res.data.suitableFor);\n            setDescription(res.data.description);\n            setPrerequisite(res.data.prerequisite);\n            setAuthorName(res.data.authorName);\n            setCategory(res.data.category);\n            setCourseThumbnail(res.data.courseThumbnail);\n            setCoursePreview(res.data.coursePreview);\n            res.data.sectionData.forEach((value, index) => {\n                setSections(oldArray => [...oldArray, { sectionName: value.sectionName, sectionNumber: value.sectionNumber }]);\n            });\n        });\n    }, []);\n\n    const { Panel } = Collapse;\n    let itemList = [];\n\n    function Headerfunc() {\n        if (Cookies.get('u') === 's') {\n            return <SubscriberHeader />;\n        } else if (Cookies.get('u') === 'a') {\n            return <AuthorHeader />;\n        } else {\n            return <Header />;\n        }\n    }\n\n    prerequisite.map((item, index) => {\n        itemList.push(<li key={index}>{item}</li>);\n    });\n\n    const Section = ({ section }) => {\n        const { Panel } = Collapse;\n\n        return (\n            <Collapse>\n                <Panel header={section.sectionName} key={section.sectionNumber}>\n                    {}\n                </Panel>\n            </Collapse>\n        );\n    };\n    async function DisplayRazorpay() {\n        const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js');\n\n        if (!res) {\n            alert('Razorpay SDK failed to load. Are you online?');\n            return;\n        }\n\n        Axios.post('/payment/process', {\n            price,\n            courseTitle\n        })\n            .then(res => {\n                console.log(res.data);\n                const options = {\n                    key: __DEV__ ? 'rzp_test_3LqDzu8J6aTI9F' : 'PRODUCTION_KEY',\n                    currency: res.data.currency, //data.currency,\n                    amount: res.data.price,\n                    order_id: res.data.id, //data.id,\n                    name: `Payment for course ${title}`,\n                    description: `Course buy`,\n                    image: razorpayLogo\n\n                    // handler: function (response) {\n                    //     alert(response.razorpay_payment_id)\n                    //     alert(response.razorpay_order_id)\n                    //     alert(response.razorpay_signature)\n                    // },\n                    // prefill: {\n                    //     name : res.data.name,\n                    //     email: res.data.email,\n                    //     contact: res.data.contact\n                    // }\n                };\n                const paymentObject = new window.Razorpay(options);\n                paymentObject.open();\n            })\n            .catch(error => {\n                if (error.response.data.message === 'Unauthorised.') {\n                    Swal.fire({\n                        icon: 'error',\n                        text: `Your session has been expired. Kindly login again to continue.`\n                    });\n                    history.push('/subscriber/login');\n                }\n            });\n    }\n    return (\n        <div>\n            <Headerfunc />\n            <div className=\"topCard\">\n                <Card className=\"tpCard\" style={{ maxWidth: '1800px' }}>\n                    <CardImg className=\"crdImg\" src={courseThumbnail} />\n                    <CardBody>\n                        <CardTitle className=\"crhmCT\">{title}</CardTitle>\n                        <div className=\"SmallDesc\">\n                            <p>\n                                <h6>Price: {price}</h6>\n                            </p>\n                            <p>Author: {authorName}</p>\n                            <p>Category: {category}</p>\n                            <p>Language: English</p>\n                        </div>\n\n                        <Button className=\"WishlistButton\" onClick={DisplayRazorpay}>\n                            Buy Now\n                        </Button>\n                        <Button className=\"ShareButton\">Share</Button>\n                    </CardBody>\n                </Card>\n                <div>\n                    <Card className=\"tpCard1\" style={{ maxWidth: '1800px' }}>\n                        <CardBody>\n                            <div className=\"TextDescription\">\n                                <h2>Description:</h2>\n                                {description}\n                                <div className=\"TextSuitableFor\">\n                                    <h3>Suitable For:</h3>\n                                    {suitableFor}\n                                </div>\n                            </div>\n                            <h2 className=\"H2Heading\">Course Preview:</h2>\n                            <div className=\"CRHMVidPlayerDiv\">\n                                <Player className=\"CRHMvidPlayer\" src={coursePreview}>\n                                    {/* <HLSSource\n                                        isVideoChild\n                                        src=\"https://multiplatform-f.akamaihd.net/i/multi/will/bunny/big_buck_bunny_,640x360_400,640x360_700,640x360_1000,950x540_1500,.f4v.csmil/master.m3u8\"\n                                    /> */}\n                                    <ControlBar className=\"ctrlbar\" autoHide={true}>\n                                        <ReplayControl seconds={10} order={2.2} />\n                                        <ForwardControl seconds={10} order={3.2} />\n                                    </ControlBar>\n                                </Player>\n                            </div>\n                            <h2 className=\"H2Heading\">What You'll Learn:</h2>\n\n                            <div className=\"TextWhatLearn\">\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <ul>\n                                                <li>Spf/Dmarc</li>\n                                                <li>Cookie Issues</li>\n                                                <li>XSS</li>\n                                                <li>SQLi</li>\n                                            </ul>\n                                        </Col>\n\n                                        <Col>\n                                            <ul>\n                                                <li>IDOR</li>\n                                                <li>Authentication Bypass</li>\n                                                <li>Rate Limiting</li>\n                                                <li>RCE</li>\n                                            </ul>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </div>\n                            <h2 className=\"H2Heading\">PreRequisites:</h2>\n                            <div className=\"PrereqText\">{itemList}</div>\n                        </CardBody>\n                        <CardFooter></CardFooter>\n                    </Card>\n                </div>\n                <h3 className=\"ContentsHeading\">Contents</h3>\n                <Collapse className=\"CoHoCollaps\">\n                    <Scrollbars style={{ width: 525, height: 630 }}>\n                        {sectionData.map(section => (\n                            <Section section={section} key={section.sectionName} />\n                        ))}\n                    </Scrollbars>\n                </Collapse> \n            </div>\n\n            <div>\n                <Footer1 />\n            </div>\n        </div>\n    );\n}\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Course/CourseView.js",["225","226"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/jwplayer/demo.js",["227"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactJWPlayer from 'react-jw-player'\nexport default function Demo() {\n    return(\n        <ReactJWPlayer \n            playerID='4l9dIkdn'\n            playerScript='https://cdn.jwplayer.com/libraries/kMVvGqfm.js'\n            file='https://content.jwplatform.com/videos/NRO32dhz-xRznb4b4.mp4'\n        />\n    )\n}","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["228"],"import React from 'react';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\nimport CategoriesDropdown from \"../Utils/CategoriesDropdown\"\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useHistory } from 'react-router-dom';\n\n\n\n export default function SubscriberHeader(){\n    let history = useHistory();\n    return (\n        <div className=\"subscriberheader\">\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo}  width='90' heigh='90' onClick={()=>history.push('/')}/>\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>\n                            <CategoriesDropdown />\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar>\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\">\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n            </Collapse>\n            <div className=\"right\">\n                <Collapse navbar>\n                <div>\n                    <ShoppingCartIcon fontSize=\"large\"/>\n                </div>\n                <Dropdown >\n                    <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                        <BsPersonSquare size=\"30\" />\n                    </Dropdown.Toggle>\n\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Button className=\"logoutbutton\" theme=\"outline-danger\" onClick={ () => {\n                                axios.post('/logout').then(res => {\n                                    console.log(res.data.message);\n                                    Cookies.remove('u');\n\n                                    history.push('/');\n                                }).catch(error => {\n                                    console.log(error);\n                                });\n                            } }>Logout</Button>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                <div className=\"right\"></div>\n            </Collapse>\n            </div>\n\n        </Navbar>\n        </div>\n    );\n};\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/verify.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Subscriber/SubscriberCourseCarousel.js",["229"],"import React, { useState, useEffect } from 'react';\nimport { Carousel } from 'primereact/carousel';\nimport { Button } from 'primereact/button';\nimport '../styles/CarouselDemo.css';\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst SubscriberCourseCarousel = () => {\n    const [courses, setCourses] = useState([]);\n    const history = useHistory();\n    const [courseID,setcourseID] = useState('')\n\n    useEffect(() => {\n        Axios.get('/subscriber/myCourses').then(res => {\n            console.log('Result : ', res.data.courseData);\n            setcourseID(res.data.courseData.courseId)\n            console.log(\"ID:\", courseID)\n            setCourses(res.data.courseData);\n        });\n    }, []);\n\n    const submit = title => {\n        history.push(`/course/view/${title}`);\n    };\n    const responsiveOptions = [\n        {\n            breakpoint: '1024px',\n            numVisible: 3,\n            numScroll: 3\n        },\n        {\n            breakpoint: '600px',\n            numVisible: 2,\n            numScroll: 2\n        },\n        {\n            breakpoint: '480px',\n            numVisible: 1,\n            numScroll: 1\n        }\n    ];\n\n    const productTemplate = courses => {\n        return (\n            <div className=\"product-item\">\n                <div className=\"product-item-content\">\n                    <div className=\"p-mb-3\">\n                        <div className=\"CCimg\">\n                            <img\n                                src={courses.courseThumbnail}\n                                onError={e => (e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png')}\n                                alt=\"error\"\n                                className=\"product-image\"\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"CCtitle\">\n                            <h4 className=\"p-mb-1\">{courses.courseName}</h4>\n                        </div>\n                        <h6 className=\"p-mt-0 p-mb-3\">Rs. {courses.price}</h6>\n                        <div className=\"car-buttons p-mt-5\">\n                            <Button\n                                icon=\"pi pi-play\"\n                                onClick={() => submit(courses.courseName)}\n                                className=\"p-button p-button-rounded p-mr-2\"\n                            />\n                            <Button icon=\"pi pi-star\" className=\"p-button-success p-button-rounded p-mr-2\" />\n                            <Button icon=\"pi pi-cog\" className=\"p-button-help p-button-rounded\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"CourseCorousel\">\n                <div className=\"carousel-demo\">\n                    <div className=\"card\">\n                        <Carousel\n                            value={courses}\n                            numVisible={5}\n                            numScroll={5}\n                            responsiveOptions={responsiveOptions}\n                            itemTemplate={productTemplate}\n                            header={<h5 className=\"CCHeader\">Course Category</h5>}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SubscriberCourseCarousel;\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HLSSource.js",["230"],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorHeader.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Footer.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Header.js",["231","232"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport CategoriesDropdown from './CategoriesDropdown';\nimport Axios from 'axios'\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\nimport Search from '@material-ui/icons/Search';\n\nexport var type = \"\";\n\nexport const Header = () => {\n    const history = useHistory();\n\n    function loginHandleClick() {\n        history.push('/subscriber/login');\n    }\n    const signupHandleClick = () => {\n        history.push('/subscriber/signup');\n    };\n    async function search(key)\n    {\n        //console.warn(key);\n        if(key)\n        {\n            Axios.get('http://localhost:5000/home/search?param='+key).then(res=>{\n            console.log(res.data.resultData);   \n            })\n        }\n        \n    }\n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} width='60' heigh='40' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink><CategoriesDropdown /></NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar >\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\" >\n                        <InputGroupAddon  type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" onChange = {(e)=> search(e.target.value)} />\n                    </InputGroup>\n                </Nav>\n\n                \n                \n            </Collapse>\n            <div className=\"right\">\n                    <Button outline theme=\"info\" onClick={loginHandleClick}>\n                        LogIn\n                       \n\n                    </Button>\n                    <Button className=\"signupButton\" outline theme=\"info\" onClick={signupHandleClick}>\n                        SignUp\n                    </Button>\n                </div>\n        </Navbar>\n    );\n};\n\nexport default Header;","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/Carousel.js",["233"],"import React, { useState, useEffect } from 'react';\nimport { Carousel } from 'primereact/carousel';\nimport { Button } from 'primereact/button';\nimport '../styles/CarouselDemo.css';\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst CarouselDemo = ({cat}) => {\n    const [courses, setCourses] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        Axios.post('/home/getCourses', {\n            category: cat\n        }).then(res => {\n            console.log('Result : ', res.data.courseData);\n            setCourses(res.data.courseData);\n        });\n    }, []);\n\n    const submit = title => {\n        history.push(`/course/${title}`);\n    };\n    const responsiveOptions = [\n        {\n            breakpoint: '1024px',\n            numVisible: 3,\n            numScroll: 3\n        },\n        {\n            breakpoint: '600px',\n            numVisible: 2,\n            numScroll: 2\n        },\n        {\n            breakpoint: '480px',\n            numVisible: 1,\n            numScroll: 1\n        }\n    ];\n\n    const productTemplate = courses => {\n        return (\n            <div className=\"product-item\">\n                <div className=\"product-item-content\">\n                    <div className=\"p-mb-3\">\n                        <div className=\"CCimg\">\n                            <img\n                                src={courses.courseThumbnail}\n                                onError={e => (e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png')}\n                                alt=\"error\"\n                                className=\"product-image\"\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"CCtitle\">\n                            <h4 className=\"p-mb-1\">{courses.courseName}</h4>\n                        </div>\n                        <h6 className=\"p-mt-0 p-mb-3\">Rs. {courses.price}</h6>\n                        <div className=\"car-buttons p-mt-5\">\n                            <Button\n                                icon=\"pi pi-shopping-cart\"\n                                onClick={() => submit(courses.courseName)}\n                                className=\"p-button p-button-rounded p-mr-2\"\n                            />\n                            <Button icon=\"pi pi-star\" className=\"p-button-success p-button-rounded p-mr-2\" />\n                            <Button icon=\"pi pi-cog\" className=\"p-button-help p-button-rounded\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"CourseCorousel\">\n                <div className=\"carousel-demo\">\n                    <div className=\"card\">\n                        <Carousel\n                            value={courses}\n                            numVisible={5}\n                            numScroll={5}\n                            responsiveOptions={responsiveOptions}\n                            itemTemplate={productTemplate}\n                            header={<h5 className=\"CCHeader\">{cat}</h5>}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CarouselDemo;\n","/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/HomeCarousel.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Author/AuthorCourseCarousel.js",[],"/home/saumya/Desktop/Celestial Learning/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":12,"column":12,"nodeType":"240","messageId":"241","endLine":12,"endColumn":15},{"ruleId":"242","severity":1,"message":"243","line":104,"column":25,"nodeType":"244","endLine":104,"endColumn":96},{"ruleId":"245","severity":1,"message":"246","line":140,"column":49,"nodeType":"247","messageId":"248","endLine":140,"endColumn":51},{"ruleId":"249","severity":1,"message":"250","line":149,"column":8,"nodeType":"251","endLine":149,"endColumn":10,"suggestions":"252"},{"ruleId":"238","severity":1,"message":"253","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":18},{"ruleId":"238","severity":1,"message":"254","line":11,"column":12,"nodeType":"240","messageId":"241","endLine":11,"endColumn":20},{"ruleId":"238","severity":1,"message":"255","line":11,"column":21,"nodeType":"240","messageId":"241","endLine":11,"endColumn":32},{"ruleId":"238","severity":1,"message":"256","line":13,"column":12,"nodeType":"240","messageId":"241","endLine":13,"endColumn":19},{"ruleId":"238","severity":1,"message":"257","line":13,"column":21,"nodeType":"240","messageId":"241","endLine":13,"endColumn":31},{"ruleId":"238","severity":1,"message":"258","line":14,"column":19,"nodeType":"240","messageId":"241","endLine":14,"endColumn":34},{"ruleId":"249","severity":1,"message":"250","line":48,"column":8,"nodeType":"251","endLine":48,"endColumn":10,"suggestions":"259"},{"ruleId":"249","severity":1,"message":"250","line":45,"column":8,"nodeType":"251","endLine":45,"endColumn":10,"suggestions":"260"},{"ruleId":"242","severity":1,"message":"243","line":127,"column":25,"nodeType":"244","endLine":127,"endColumn":96},{"ruleId":"249","severity":1,"message":"250","line":26,"column":8,"nodeType":"251","endLine":26,"endColumn":10,"suggestions":"261"},{"ruleId":"238","severity":1,"message":"262","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":26},{"ruleId":"238","severity":1,"message":"253","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":18},{"ruleId":"238","severity":1,"message":"263","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":19},{"ruleId":"238","severity":1,"message":"264","line":6,"column":21,"nodeType":"240","messageId":"241","endLine":6,"endColumn":24},{"ruleId":"238","severity":1,"message":"265","line":6,"column":26,"nodeType":"240","messageId":"241","endLine":6,"endColumn":29},{"ruleId":"238","severity":1,"message":"266","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":13},{"ruleId":"238","severity":1,"message":"256","line":15,"column":12,"nodeType":"240","messageId":"241","endLine":15,"endColumn":19},{"ruleId":"238","severity":1,"message":"257","line":15,"column":21,"nodeType":"240","messageId":"241","endLine":15,"endColumn":31},{"ruleId":"238","severity":1,"message":"267","line":19,"column":12,"nodeType":"240","messageId":"241","endLine":19,"endColumn":15},{"ruleId":"238","severity":1,"message":"268","line":19,"column":16,"nodeType":"240","messageId":"241","endLine":19,"endColumn":22},{"ruleId":"238","severity":1,"message":"269","line":149,"column":14,"nodeType":"240","messageId":"241","endLine":149,"endColumn":28},{"ruleId":"238","severity":1,"message":"270","line":153,"column":14,"nodeType":"240","messageId":"241","endLine":153,"endColumn":28},{"ruleId":"238","severity":1,"message":"271","line":157,"column":14,"nodeType":"240","messageId":"241","endLine":157,"endColumn":28},{"ruleId":"238","severity":1,"message":"272","line":161,"column":14,"nodeType":"240","messageId":"241","endLine":161,"endColumn":28},{"ruleId":"238","severity":1,"message":"273","line":20,"column":12,"nodeType":"240","messageId":"241","endLine":20,"endColumn":20},{"ruleId":"238","severity":1,"message":"274","line":20,"column":22,"nodeType":"240","messageId":"241","endLine":20,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":124,"column":25,"nodeType":"244","endLine":124,"endColumn":96},{"ruleId":"238","severity":1,"message":"275","line":134,"column":11,"nodeType":"240","messageId":"241","endLine":134,"endColumn":26},{"ruleId":"238","severity":1,"message":"276","line":172,"column":11,"nodeType":"240","messageId":"241","endLine":172,"endColumn":23},{"ruleId":"238","severity":1,"message":"277","line":212,"column":16,"nodeType":"240","messageId":"241","endLine":212,"endColumn":23},{"ruleId":"238","severity":1,"message":"278","line":212,"column":25,"nodeType":"240","messageId":"241","endLine":212,"endColumn":38},{"ruleId":"238","severity":1,"message":"279","line":213,"column":16,"nodeType":"240","messageId":"241","endLine":213,"endColumn":27},{"ruleId":"238","severity":1,"message":"280","line":213,"column":29,"nodeType":"240","messageId":"241","endLine":213,"endColumn":43},{"ruleId":"238","severity":1,"message":"281","line":225,"column":18,"nodeType":"240","messageId":"241","endLine":225,"endColumn":30},{"ruleId":"238","severity":1,"message":"269","line":465,"column":14,"nodeType":"240","messageId":"241","endLine":465,"endColumn":28},{"ruleId":"238","severity":1,"message":"270","line":469,"column":14,"nodeType":"240","messageId":"241","endLine":469,"endColumn":28},{"ruleId":"238","severity":1,"message":"271","line":473,"column":14,"nodeType":"240","messageId":"241","endLine":473,"endColumn":28},{"ruleId":"238","severity":1,"message":"272","line":477,"column":14,"nodeType":"240","messageId":"241","endLine":477,"endColumn":28},{"ruleId":"238","severity":1,"message":"282","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":20},{"ruleId":"238","severity":1,"message":"283","line":10,"column":8,"nodeType":"240","messageId":"241","endLine":10,"endColumn":17},{"ruleId":"249","severity":1,"message":"284","line":66,"column":8,"nodeType":"251","endLine":66,"endColumn":10,"suggestions":"285"},{"ruleId":"238","severity":1,"message":"286","line":68,"column":13,"nodeType":"240","messageId":"241","endLine":68,"endColumn":18},{"ruleId":"287","severity":1,"message":"288","line":81,"column":36,"nodeType":"289","messageId":"290","endLine":81,"endColumn":38},{"ruleId":"238","severity":1,"message":"291","line":18,"column":12,"nodeType":"240","messageId":"241","endLine":18,"endColumn":21},{"ruleId":"249","severity":1,"message":"292","line":44,"column":7,"nodeType":"251","endLine":44,"endColumn":9,"suggestions":"293"},{"ruleId":"238","severity":1,"message":"294","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":37,"column":17,"nodeType":"244","endLine":37,"endColumn":89},{"ruleId":"249","severity":1,"message":"295","line":24,"column":8,"nodeType":"251","endLine":24,"endColumn":10,"suggestions":"296"},{"ruleId":"238","severity":1,"message":"297","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":44},{"ruleId":"238","severity":1,"message":"298","line":24,"column":8,"nodeType":"240","messageId":"241","endLine":24,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":51,"column":17,"nodeType":"244","endLine":51,"endColumn":57},{"ruleId":"249","severity":1,"message":"299","line":23,"column":8,"nodeType":"251","endLine":23,"endColumn":10,"suggestions":"300"},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["303"],"'CourseCard' is defined but never used.","'courseID' is assigned a value but never used.","'setcourseID' is assigned a value but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","'setCourseStatus' is assigned a value but never used.",["304"],["305"],["306"],"'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'axios' is defined but never used.","'cat' is assigned a value but never used.","'setCat' is assigned a value but never used.","'step1Validator' is defined but never used.","'step2Validator' is defined but never used.","'step3Validator' is defined but never used.","'step4Validator' is defined but never used.","'courseId' is assigned a value but never used.","'setCourseId' is assigned a value but never used.","'CourseThumbnail' is assigned a value but never used.","'previewprops' is assigned a value but never used.","'section' is assigned a value but never used.","'createSection' is assigned a value but never used.","'sectionName' is assigned a value but never used.","'setSectionName' is assigned a value but never used.","'handleRemove' is defined but never used.","'useHistory' is defined but never used.","'HLSSource' is defined but never used.","React Hook useEffect has a missing dependency: 'courseTitle'. Either include it or remove the dependency array.",["307"],"'Panel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'playerUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'title'. Either include them or remove the dependency array.",["308"],"'ReactDOM' is defined but never used.","React Hook useEffect has a missing dependency: 'courseID'. Either include it or remove the dependency array.",["309"],"'BsReverseLayoutSidebarInsetReverse' is defined but never used.","'Search' is defined but never used.","React Hook useEffect has a missing dependency: 'cat'. Either include it or remove the dependency array.",["310"],"no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},{"desc":"311","fix":"313"},{"desc":"311","fix":"314"},{"desc":"311","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},"Update the dependencies array to be: [history]",{"range":"324","text":"325"},{"range":"326","text":"325"},{"range":"327","text":"325"},{"range":"328","text":"325"},"Update the dependencies array to be: [courseTitle]",{"range":"329","text":"330"},"Update the dependencies array to be: [history, title]",{"range":"331","text":"332"},"Update the dependencies array to be: [courseID]",{"range":"333","text":"334"},"Update the dependencies array to be: [cat]",{"range":"335","text":"336"},[5618,5620],"[history]",[1687,1689],[1876,1878],[885,887],[2651,2653],"[courseTitle]",[1544,1546],"[history, title]",[899,901],"[courseID]",[784,786],"[cat]"]
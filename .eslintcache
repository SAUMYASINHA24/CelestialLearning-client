[{"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js":"1","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js":"2","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js":"3","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js":"4","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js":"5","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js":"6","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/userActions.js":"7","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js":"8","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js":"9","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"10","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"11","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"12","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"13","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"14","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"15","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"16","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/authorActions.js":"17","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/subscriberActions.js":"18","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"19","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"20","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"21","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"22","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"23","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"24","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"25","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js":"26","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HomeCarousel.js":"27","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Footer.js":"28","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js":"29","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js":"30","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourses.js":"31","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/UploadCourse.js":"32","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseHome.js":"33","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CreateCourse.js":"34"},{"size":471,"mtime":1610175777192,"results":"35","hashOfConfig":"36"},{"size":910,"mtime":1609846092755,"results":"37","hashOfConfig":"36"},{"size":3644,"mtime":1610705151008,"results":"38","hashOfConfig":"36"},{"size":3182,"mtime":1610175777192,"results":"39","hashOfConfig":"36"},{"size":780,"mtime":1610641588295,"results":"40","hashOfConfig":"36"},{"size":1795,"mtime":1609846092755,"results":"41","hashOfConfig":"36"},{"size":2145,"mtime":1609846092755,"results":"42","hashOfConfig":"36"},{"size":2236,"mtime":1610811305891,"results":"43","hashOfConfig":"36"},{"size":1769,"mtime":1610782339562,"results":"44","hashOfConfig":"36"},{"size":3193,"mtime":1610704977606,"results":"45","hashOfConfig":"36"},{"size":1115,"mtime":1610199542793,"results":"46","hashOfConfig":"36"},{"size":5829,"mtime":1610442724973,"results":"47","hashOfConfig":"36"},{"size":1847,"mtime":1610641671313,"results":"48","hashOfConfig":"36"},{"size":1861,"mtime":1609908161981,"results":"49","hashOfConfig":"36"},{"size":4498,"mtime":1610199429193,"results":"50","hashOfConfig":"36"},{"size":3109,"mtime":1610199406486,"results":"51","hashOfConfig":"36"},{"size":2847,"mtime":1610175777192,"results":"52","hashOfConfig":"36"},{"size":2780,"mtime":1610175777192,"results":"53","hashOfConfig":"36"},{"size":4679,"mtime":1610199599112,"results":"54","hashOfConfig":"36"},{"size":760,"mtime":1610199442421,"results":"55","hashOfConfig":"36"},{"size":7523,"mtime":1610199564189,"results":"56","hashOfConfig":"36"},{"size":1845,"mtime":1609908191666,"results":"57","hashOfConfig":"36"},{"size":1841,"mtime":1610641742438,"results":"58","hashOfConfig":"36"},{"size":2862,"mtime":1610199490475,"results":"59","hashOfConfig":"36"},{"size":2657,"mtime":1610462655543,"results":"60","hashOfConfig":"36"},{"size":943,"mtime":1609913331761,"results":"61","hashOfConfig":"36"},{"size":1550,"mtime":1610617470246,"results":"62","hashOfConfig":"36"},{"size":2572,"mtime":1610199668202,"results":"63","hashOfConfig":"36"},{"size":1519,"mtime":1610199555949,"results":"64","hashOfConfig":"36"},{"size":1500,"mtime":1610199344785,"results":"65","hashOfConfig":"36"},{"size":335,"mtime":1610440434986,"results":"66","hashOfConfig":"36"},{"size":6686,"mtime":1610723740633,"results":"67","hashOfConfig":"36"},{"size":253,"mtime":1610641537781,"results":"68","hashOfConfig":"36"},{"size":11969,"mtime":1610788365252,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1quvh92",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js",[],["150","151"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/userActions.js",[],["152","153"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js",["154"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js",["155"],"import React, { useEffect } from 'react';\nimport { Header } from './Header';\nimport CourseCard from './CourseCard';\nimport HomeCarousel from './HomeCarousel';\nimport Footer1 from './Footer';\nimport { Container, Row, Col } from 'shards-react';\n\nexport default function Home({ history }) {\n    const cardTitles = ['Python', 'MERN', 'JAVA', 'PhotoShop', 'C++'];\n    \n    return (\n        <div className=\"home\">\n            <div className=\"header\">\n                <Header />\n            </div>\n            <HomeCarousel />\n\n            <div className=\"main\">\n                {cardTitles.map(title => (\n                    <Container className=\"cc\">\n                        <Row>\n                            <Col>\n                                <CourseCard title={title} />\n                            </Col>\n                            {/* <Col>\n                            <CourseCard title=\"title2\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title3\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title4\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title5\"/>\n                        </Col> */}\n                        </Row>\n                    </Container>\n                ))}\n                ;\n            </div>\n            <div className=\"main2\">\n                <Container className=\"dr-example-container\">\n                    <Row>\n                        {/* <Col>\n                            <CourseCard title=\"title6\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title7\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title8\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title9\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title10\"/>\n                        </Col> */}\n                    </Row>\n                </Container>\n               \n            </div>\n\n            <Footer1 />\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",["156"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport login from \"../../actions/subscriberActions\"\nimport Swal from 'sweetalert2'\n\n\nfunction SubscriberLogin({history}) {\n     const [email, setEmail] = useState('');\n\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberLogin = useSelector(state => state.subscriberLogin);\n    const {  error, subscriberInfo } = subscriberLogin;\n\n    useEffect(() => {\n        if (subscriberInfo) {\n            console.log(\"Loged In\")\n            history.push('/subscriber/dashboard')\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [subscriberInfo , error]);   \n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n       \n    };\n\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/author/login\">Are you an Author?</a>\n                    <br />\n                    <a href=\"/subscriber/forgetpassword\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberLogin\n\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js",["157"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/authorActions';\nimport { Card, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\nimport Swal from \"sweetalert2\"\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\n function AuthorSignup({ history }) {\n\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorRegister = useSelector(state => state.authorRegister);\n    const {  error ,success , message } = authorRegister;\n\n\n\n    useEffect(() => {\n          if(error){     \n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`\n               })\n          }\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               }).then(res => {\n                    history.push('/author/login')\n               })\n          }\n        \n    }, [history, error , success ]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n    };\n}\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup\">Are you a Subscriber?</a><br />\n\n                    <a href=\"/author/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n\n}\n\nexport default AuthorSignup\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js",["158"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/authorActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from 'sweetalert2'\n\nfunction AuthorLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorLogin = useSelector(state => state.authorLogin);\n    const {  error, authorInfo } = authorLogin;\n\n    useEffect(() => {\n        if (authorInfo) {\n            history.push('/author/dashboard');\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [history, authorInfo]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        \n    };\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/subscriber/login\">Are you a Subscriber?</a>\n                    <br />\n                    <a href=\"/author/forgetpassword\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default AuthorLogin;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/authorActions.js",["159"],"import axios from 'axios'\nimport {\n  \n  AUTHOR_LOGIN_FAIL,\n  AUTHOR_LOGIN_REQUEST,\n  AUTHOR_LOGIN_SUCCESS,\n  AUTHOR_LOGOUT,\n\n  AUTHOR_REGISTER_FAIL,\n  AUTHOR_REGISTER_REQUEST,\n  AUTHOR_REGISTER_SUCCESS,\n  \n  AUTHOR_VERIFY_REQUEST,\n  AUTHOR_VERIFY_SUCCESS,\n  AUTHOR_VERIFY_FAIL,\n\n} from '../constants/userConstants'\n\n\nexport const register = (username, email, password , confirm_password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_REGISTER_REQUEST,\n       })\n   \n       await axios.post(\n         '/author/register',\n         { username, email, password , confirm_password },\n       ).then(res => {\n            dispatch({\n                 type : AUTHOR_REGISTER_SUCCESS ,\n                 payload : \"An Email has been sent to you.\"\n            })\n       })\n       \n     } catch (error) {\n       dispatch({\n         type: AUTHOR_REGISTER_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export const logout = () => (dispatch) => {\n     localStorage.removeItem('isAuthor')\n     dispatch({\n       type : AUTHOR_LOGOUT\n     })\n   }\n\n   export const verifyAuthor = (token) => async (dispatch) => {\n     try {\n       dispatch({\n         type:AUTHOR_VERIFY_REQUEST,\n       })\n   \n\n       const config = {\n         headers : {\n          'Content-Type': 'application/json',\n           'Authorization' : `Bearer ${token}`\n         }\n       }\n\n       await axios.post(\n         '/author/verify',\n         {token} ,\n         {\n          headers : {\n           'Content-Type': 'application/json',\n            'Authorization' : `Bearer ${token}`\n          }\n        }\n \n       )\n       dispatch({\n         type:AUTHOR_VERIFY_SUCCESS,\n       })\n  \n       \n     } catch (error) {\n       dispatch({\n         type:AUTHOR_VERIFY_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n\n   const login = (email, password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_LOGIN_REQUEST,\n       })\n   \n       const config = {\n         headers: {\n\n           'Content-Type': 'application/json',\n         },\n       }\n   \n       const { data } = await axios.post(\n         '/author/login',\n         { email, password },\n         config\n       )\n   \n       dispatch({\n         type: AUTHOR_LOGIN_SUCCESS,\n         payload: data,\n       })\n   \n     //  localStorage.setItem('isAuthor', true)\n     } catch (error) {\n       dispatch({\n         type: AUTHOR_LOGIN_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export default login ","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/subscriberActions.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",["160","161"],"import React, { useEffect, useState } from 'react';\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\n//import { register } from '../../actions/userActions';\nimport {register} from '../../actions/subscriberActions'\nimport { Card,  CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\nimport '../styles/UserSignUp.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from \"sweetalert2\"\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\n\nfunction SubscriberSignup() {\n     const [name, setName] = useState('');\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberRegister = useSelector(state => state.subscriberRegister);\n    const { loading, error ,success , message } = subscriberRegister;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n    useEffect(() => {\n     \n\n          if(error){\n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`    \n               })\n               console.log(\"Error : \" , error)\n          }\n\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               })\n          }\n    }, [error ,success ]);\n\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            // console.log(\"matched\")\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup\">Are you an Author?</a><br />\n                    <a href=\"/subscriber/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberSignup\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["162"],"import React from 'react';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\nimport CategoriesDropdown from \"../Utils/CategoriesDropdown\"\n\n// import { useDispatch } from 'react-redux';\n// import { logout } from '../../actions/subscriberActions';\n\n export const SubscriberHeader = () => {\n    return (\n        <div className=\"subscriberheader\">\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo}  width='90' heigh='90' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>\n                            <CategoriesDropdown />\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar>\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\">\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n            </Collapse>\n            <div className=\"right\">\n                <Collapse navbar>\n                <div>\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <Dropdown >\n                    <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                        <BsPersonSquare size=\"30\" />\n                    </Dropdown.Toggle>\n\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Button className=\"logoutbutton\" theme=\"outline-danger\" href=\"/\">Logout</Button>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                <div className=\"right\"></div>\n            </Collapse>\n            </div>\n\n        </Navbar>\n        </div>\n    );\n};\n\nexport default SubscriberHeader;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HomeCarousel.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Footer.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js",["163"],"import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\n\nexport default function SubscriberForgetPassword() {\n\n    const [email, setEmail] = useState('');\n\n    \n\n    return (\n        <div>\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Forget Password</CardTitle>\n                    <Form >\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >\n                            Submit\n                        </Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/login/\">Log in</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js",["164"],"import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\nexport default function AuthorForgetPassword() {\n\n    const [email, setEmail] = useState('');\n\n    return (\n        <div>\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Forget Password</CardTitle>\n                    <Form >\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >\n                            Submit\n                        </Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/login/\">Log in</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourses.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/UploadCourse.js",["165","166","167","168","169","170"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/UploadCourse.css';\nimport { Dropdown, Forms } from 'react-bootstrap';\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\n\nexport default function UploadCourse() {\n    // setup the step content\n    let history = useHistory();\n    const step1Content = (\n        <div> \n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <CardTitle className=\"institle\">Instructions</CardTitle>\n                    <p>Instructions will be entered here</p>\n                </CardBody>\n            </Card>\n        </div>\n    );\n    const step2Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"name\">\n                                    What would you like to name your course?\n                                </label>\n\n                                <FormInput type=\"text\" id=\"name\" placeholder=\"Enter Something..\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"desc\">\n                                    Give a short Description about your course!\n                                </label>\n                                <FormTextarea rows=\"5\" type=\"text\" id=\"desc\" placeholder=\"Enter Something..\" />\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n    const step3Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step3\">\n                        <label className=\"labelstep3\" htmlFor=\"dropdown\">\n                            Where would you categorize your course?\n                        </label>\n                        <Dropdown className=\"createdropdown\">\n                            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\n                                Choose a Category.\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <Dropdown.Item href=\"#Development\">Development</Dropdown.Item>\n                                <Dropdown.Item href=\"#Business\">Business</Dropdown.Item>\n                                <Dropdown.Item href=\"#Finance&Accounting\">Finance & Accounting</Dropdown.Item>\n                                <Dropdown.Item href=\"#IT&Software\">IT & Software</Dropdown.Item>\n                                <Dropdown.Item href=\"#Marketing\">Marketing</Dropdown.Item>\n                                <Dropdown.Item href=\"Photography\">Photography</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n            <CardBody>\n                <div className=\"step4\">\n                    <Form>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"suit\">\n                                For whom this course will be suitable for?\n                            </label>\n                            <FormInput type=\"suit\" id=\"suit\" placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"platform\">\n                                Platform?\n                            </label>\n                            <FormInput type=\"text\" id=\"platform\" placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"prerequisites\">\n                                Any prerequisites?\n                            </label>\n                            <FormInput type=\"suit\" id=\"prerequisites\" placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                    </Form>\n                </div>\n            </CardBody>\n        </Card>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n        // handle the submit logic here\n        // This function will be executed at the last step\n        // when the submit button (next button in the previous steps) is pressed\n        history.push('/course/create');\n    }\n\n    return (\n        <div>\n            <div className=\"createheading\">Get Started With Your Course</div>\n            <Button className=\"buttonexit\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                Exit\n            </Button>\n            <StepProgressBar\n                className=\"stepbar\"\n                startingStep={0}\n                onSubmit={onFormSubmit}\n                steps={[\n                    {\n                        label: 'Step 1',\n                        name: 'step 1',\n                        content: step1Content\n                        // validator: step1Validator\n                    },\n                    {\n                        label: 'Step 2',\n                        name: 'step 2',\n                        content: step2Content\n                        // validator: step2Validator\n                    },\n                    {\n                        label: 'Step 3',\n                        name: 'step 3',\n                        content: step3Content\n                        // validator: step3Validator\n                    },\n                    {\n                        label: 'Step 4',\n                        name: 'step 4',\n                        content: step4Content\n                        // validator: step4Validator\n                    }\n                ]}\n            />\n            ;\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseHome.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CreateCourse.js",["171","172","173","174","175","176","177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":39,"column":17,"nodeType":"187","endLine":39,"endColumn":57},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":33,"column":8,"nodeType":"194","endLine":33,"endColumn":32,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":44,"column":8,"nodeType":"194","endLine":44,"endColumn":35,"suggestions":"197"},{"ruleId":"192","severity":1,"message":"198","line":30,"column":8,"nodeType":"194","endLine":30,"endColumn":29,"suggestions":"199"},{"ruleId":"188","severity":1,"message":"200","line":61,"column":14,"nodeType":"190","messageId":"191","endLine":61,"endColumn":20},{"ruleId":"188","severity":1,"message":"201","line":28,"column":13,"nodeType":"190","messageId":"191","endLine":28,"endColumn":20},{"ruleId":"192","severity":1,"message":"196","line":50,"column":8,"nodeType":"194","endLine":50,"endColumn":25,"suggestions":"202"},{"ruleId":"185","severity":1,"message":"186","line":34,"column":17,"nodeType":"187","endLine":34,"endColumn":58},{"ruleId":"188","severity":1,"message":"203","line":8,"column":12,"nodeType":"190","messageId":"191","endLine":8,"endColumn":17},{"ruleId":"188","severity":1,"message":"203","line":7,"column":12,"nodeType":"190","messageId":"191","endLine":7,"endColumn":17},{"ruleId":"188","severity":1,"message":"204","line":7,"column":20,"nodeType":"190","messageId":"191","endLine":7,"endColumn":25},{"ruleId":"188","severity":1,"message":"205","line":8,"column":27,"nodeType":"190","messageId":"191","endLine":8,"endColumn":34},{"ruleId":"188","severity":1,"message":"206","line":106,"column":14,"nodeType":"190","messageId":"191","endLine":106,"endColumn":28},{"ruleId":"188","severity":1,"message":"207","line":110,"column":14,"nodeType":"190","messageId":"191","endLine":110,"endColumn":28},{"ruleId":"188","severity":1,"message":"208","line":114,"column":14,"nodeType":"190","messageId":"191","endLine":114,"endColumn":28},{"ruleId":"188","severity":1,"message":"209","line":118,"column":14,"nodeType":"190","messageId":"191","endLine":118,"endColumn":28},{"ruleId":"188","severity":1,"message":"210","line":5,"column":38,"nodeType":"190","messageId":"191","endLine":5,"endColumn":50},{"ruleId":"188","severity":1,"message":"211","line":7,"column":16,"nodeType":"190","messageId":"191","endLine":7,"endColumn":25},{"ruleId":"188","severity":1,"message":"205","line":7,"column":27,"nodeType":"190","messageId":"191","endLine":7,"endColumn":34},{"ruleId":"188","severity":1,"message":"212","line":13,"column":18,"nodeType":"190","messageId":"191","endLine":13,"endColumn":24},{"ruleId":"188","severity":1,"message":"206","line":270,"column":14,"nodeType":"190","messageId":"191","endLine":270,"endColumn":28},{"ruleId":"188","severity":1,"message":"207","line":274,"column":14,"nodeType":"190","messageId":"191","endLine":274,"endColumn":28},{"ruleId":"188","severity":1,"message":"208","line":278,"column":14,"nodeType":"190","messageId":"191","endLine":278,"endColumn":28},{"ruleId":"188","severity":1,"message":"209","line":282,"column":14,"nodeType":"190","messageId":"191","endLine":282,"endColumn":28},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],["213"],["214"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["215"],"React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["217"],"'config' is assigned a value but never used.","'loading' is assigned a value but never used.",["218"],"'email' is assigned a value but never used.","'Forms' is defined but never used.","'CardImg' is defined but never used.","'step1Validator' is defined but never used.","'step2Validator' is defined but never used.","'step3Validator' is defined but never used.","'step4Validator' is defined but never used.","'FormTextarea' is defined but never used.","'CardTitle' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},"Update the dependencies array to be: [subscriberInfo, error, history]",{"range":"227","text":"228"},"Update the dependencies array to be: [history, error, success, message]",{"range":"229","text":"230"},"Update the dependencies array to be: [history, authorInfo, error]",{"range":"231","text":"232"},"Update the dependencies array to be: [error, message, success]",{"range":"233","text":"234"},[1064,1088],"[subscriberInfo, error, history]",[1308,1335],"[history, error, success, message]",[996,1017],"[history, authorInfo, error]",[1447,1464],"[error, message, success]"]
[{"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/index.js":"1","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/store.js":"2","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/App.js":"3","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/reducers/userReducer.js":"4","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"5","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"6","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"7","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js":"8","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"9","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"10","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"11","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"12","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"13","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"14","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorCourses.js":"15","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js":"16","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Home.js":"17","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"18","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"19","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"20","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Course/UploadCourse.js":"21","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/constants/userConstants.js":"22","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"23","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/CourseCard.js":"24","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Footer.js":"25","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Header.js":"26","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/HomeCarousel.js":"27","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/subscriberActions.js":"28","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/authorActions.js":"29","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"30","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js":"31","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Course/CourseHome.js":"32","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Course/CreateCourse.js":"33"},{"size":471,"mtime":1609939041948,"results":"34","hashOfConfig":"35"},{"size":910,"mtime":1609912452717,"results":"36","hashOfConfig":"35"},{"size":3644,"mtime":1610865051964,"results":"37","hashOfConfig":"35"},{"size":3182,"mtime":1609921415695,"results":"38","hashOfConfig":"35"},{"size":5829,"mtime":1610451164359,"results":"39","hashOfConfig":"35"},{"size":1115,"mtime":1610451164363,"results":"40","hashOfConfig":"35"},{"size":3193,"mtime":1610865051968,"results":"41","hashOfConfig":"35"},{"size":1519,"mtime":1610451164359,"results":"42","hashOfConfig":"35"},{"size":760,"mtime":1610451164359,"results":"43","hashOfConfig":"35"},{"size":1847,"mtime":1610865051968,"results":"44","hashOfConfig":"35"},{"size":4679,"mtime":1610451164359,"results":"45","hashOfConfig":"35"},{"size":1861,"mtime":1609912452717,"results":"46","hashOfConfig":"35"},{"size":4498,"mtime":1610451164359,"results":"47","hashOfConfig":"35"},{"size":3109,"mtime":1610451164359,"results":"48","hashOfConfig":"35"},{"size":335,"mtime":1610451164359,"results":"49","hashOfConfig":"35"},{"size":1500,"mtime":1610451164359,"results":"50","hashOfConfig":"35"},{"size":1769,"mtime":1610865051968,"results":"51","hashOfConfig":"35"},{"size":1845,"mtime":1609912452717,"results":"52","hashOfConfig":"35"},{"size":7523,"mtime":1610451164359,"results":"53","hashOfConfig":"35"},{"size":1853,"mtime":1610865187500,"results":"54","hashOfConfig":"35"},{"size":7872,"mtime":1610892099125,"results":"55","hashOfConfig":"35"},{"size":1841,"mtime":1610877361805,"results":"56","hashOfConfig":"35"},{"size":2862,"mtime":1610451164359,"results":"57","hashOfConfig":"35"},{"size":780,"mtime":1610865051968,"results":"58","hashOfConfig":"35"},{"size":2572,"mtime":1610451164363,"results":"59","hashOfConfig":"35"},{"size":2236,"mtime":1610865051968,"results":"60","hashOfConfig":"35"},{"size":1550,"mtime":1610451164363,"results":"61","hashOfConfig":"35"},{"size":2780,"mtime":1610130334484,"results":"62","hashOfConfig":"35"},{"size":2871,"mtime":1610877606784,"results":"63","hashOfConfig":"35"},{"size":2657,"mtime":1610543741078,"results":"64","hashOfConfig":"35"},{"size":943,"mtime":1610451164363,"results":"65","hashOfConfig":"35"},{"size":253,"mtime":1610865051964,"results":"66","hashOfConfig":"35"},{"size":21784,"mtime":1610973486831,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1gv0bxi",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/index.js",[],["147","148"],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/store.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/App.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/reducers/userReducer.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",["149"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport login from \"../../actions/subscriberActions\"\nimport Swal from 'sweetalert2'\n\n\nfunction SubscriberLogin({history}) {\n     const [email, setEmail] = useState('');\n\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberLogin = useSelector(state => state.subscriberLogin);\n    const {  error, subscriberInfo } = subscriberLogin;\n\n    useEffect(() => {\n        if (subscriberInfo) {\n            console.log(\"Loged In\")\n            history.push('/subscriber/dashboard')\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [subscriberInfo , error]);   \n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n       \n    };\n\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/author/login\">Are you an Author?</a>\n                    <br />\n                    <a href=\"/subscriber/forgetpassword\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberLogin\n\n\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js",["150"],"import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\n\nexport default function SubscriberForgetPassword() {\n\n    const [email, setEmail] = useState('');\n\n    \n\n    return (\n        <div>\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Forget Password</CardTitle>\n                    <Form >\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >\n                            Submit\n                        </Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/login/\">Log in</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorVerify.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",["151","152"],"import React, { useEffect, useState } from 'react';\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\n//import { register } from '../../actions/userActions';\nimport {register} from '../../actions/subscriberActions'\nimport { Card,  CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\nimport '../styles/UserSignUp.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from \"sweetalert2\"\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\n\nfunction SubscriberSignup() {\n     const [name, setName] = useState('');\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberRegister = useSelector(state => state.subscriberRegister);\n    const { loading, error ,success , message } = subscriberRegister;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n    useEffect(() => {\n     \n\n          if(error){\n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`    \n               })\n               console.log(\"Error : \" , error)\n          }\n\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               })\n          }\n    }, [error ,success ]);\n\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            // console.log(\"matched\")\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup\">Are you an Author?</a><br />\n                    <a href=\"/subscriber/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberSignup\n\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSignup.js",["153"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/authorActions';\nimport { Card, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\nimport Swal from \"sweetalert2\"\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\n function AuthorSignup({ history }) {\n\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorRegister = useSelector(state => state.authorRegister);\n    const {  error ,success , message } = authorRegister;\n\n\n\n    useEffect(() => {\n          if(error){     \n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`\n               })\n          }\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               }).then(res => {\n                    history.push('/author/login')\n               })\n          }\n        \n    }, [history, error , success ]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n    };\n}\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup\">Are you a Subscriber?</a><br />\n\n                    <a href=\"/author/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n\n}\n\nexport default AuthorSignup\n\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorLogin.js",["154"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/authorActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from 'sweetalert2'\n\nfunction AuthorLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorLogin = useSelector(state => state.authorLogin);\n    const {  error, authorInfo } = authorLogin;\n\n    useEffect(() => {\n        if (authorInfo) {\n            history.push('/author/dashboard');\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [history, authorInfo]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        \n    };\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/subscriber/login\">Are you a Subscriber?</a>\n                    <br />\n                    <a href=\"/author/forgetpassword\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default AuthorLogin;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorCourses.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js",["155"],"import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\nexport default function AuthorForgetPassword() {\n\n    const [email, setEmail] = useState('');\n\n    return (\n        <div>\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Forget Password</CardTitle>\n                    <Form >\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >\n                            Submit\n                        </Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/login/\">Log in</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Home.js",["156"],"import React, { useEffect } from 'react';\nimport { Header } from './Header';\nimport CourseCard from './CourseCard';\nimport HomeCarousel from './HomeCarousel';\nimport Footer1 from './Footer';\nimport { Container, Row, Col } from 'shards-react';\n\n\nexport default function Home({ history }) {\n    return (\n        <div className=\"home\">\n            <div className=\"header\">\n                <Header />\n            </div>\n            <HomeCarousel />\n\n            <div className=\"main\">\n                <Container className=\"dr-example-container\">\n                    <Row>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <div className=\"main\">\n                <Container className=\"dr-example-container\">\n                    <Row>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                        <Col>\n                            <CourseCard />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <Footer1 />\n        </div>\n    );\n}\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSettings.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorProfile.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",["157","158"],"import React, { useState, useEffect } from 'react';\nimport CourseCard from '../Utils/CourseCard';\nimport AuthorHeader from './AuthorHeader';\nimport { Container, Row, Col } from 'shards-react';\nimport '../styles/UserDashboard.css';\nimport Axios from 'axios';\n\nexport default function AuthorDashboard() {\n    const cardTitles = ['title1', 'title5', 'title4', 'title3', 'title2'];\n\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        // Axios.post('/author/profile').then(res => {\n        //     console.log('Project : ', res.data.message);\n        //     setName(res.data.message.firstName);\n        // });\n    }, []);\n\n    return (\n        <div>\n            <AuthorHeader />\n            <div className=\"all\">\n                <h1>Welcome {name}!</h1>\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\n                <div className=\"main\">\n                    {cardTitles.map(title => (\n                        <Container className=\"cc\">\n                            <Row>\n                                <Col>\n                                    <CourseCard title={title} />\n                                </Col>\n                                {/* <Col>\n                            <CourseCard title=\"title2\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title3\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title4\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title5\"/>\n                        </Col> */}\n                            </Row>\n                        </Container>\n                    ))}\n                    ;\n                </div>\n            </div>\n        </div>\n    );\n}\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Course/UploadCourse.js",["159","160","161","162","163","164"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/UploadCourse.css';\nimport { Dropdown, Forms } from 'react-bootstrap';\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\nimport axios from 'axios';\n\nexport default function UploadCourse() {\n\n    const [title, setTitle] = useState('Course Name') \n    const [description, setDescription] = useState('') \n    const [category , setCategory] = useState('') \n    const [suitableFor, setSuitableFor] = useState('') \n    const [platform , setPlatform] = useState('')\n    const [prerequisite, setPrerequisite] = useState('') \n    // setup the step content\n    let history = useHistory();\n    const step1Content = (\n        <div> \n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <CardTitle className=\"institle\">Instructions</CardTitle>\n                    <p>Instructions will be entered here</p>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"name\">\n                                    What would you like to name your course?\n                                </label>\n\n                                <FormInput type=\"text\" id=\"title\"  onChange = {(e) => setTitle(e.target.value)} placeholder=\"Enter Something..\" ></FormInput>\n                            </FormGroup>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"desc\">\n                                    Give a short Description about your course!\n                                </label>\n                                <FormTextarea rows=\"5\" type=\"text\" id=\"desc\" onChange = {(e) => setDescription(e.target.value)} placeholder=\"Enter Something..\" />\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n    \n    const step3Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step3\">\n                        <label className=\"labelstep3\" htmlFor=\"dropdown\">\n                            Where would you categorize your course?\n                        </label>\n                        <Dropdown className=\"createdropdown\"\n                            \n                        >\n                            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\n                                Choose\n                            </Dropdown.Toggle>\n                            <input type = \"text\" onChange = {(e) => setCategory(e.target.value)}/>\n                            <Dropdown.Menu\n                            \n                            >\n                                <Dropdown.Item href=\"#Development\">Development</Dropdown.Item>\n                                <Dropdown.Item href=\"#Business\">Business</Dropdown.Item>\n                                <Dropdown.Item href=\"#Finance&Accounting\">Finance & Accounting</Dropdown.Item>\n                                <Dropdown.Item href=\"#IT&Software\">IT & Software</Dropdown.Item>\n                                <Dropdown.Item href=\"#Marketing\">Marketing</Dropdown.Item>\n                                <Dropdown.Item href=\"Photography\">Photography</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n            <CardBody>\n                <div className=\"step4\">\n                    <Form>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"suit\">\n                                For whom this course will be suitable for?\n                            </label>\n                            <FormInput type=\"suit\" id=\"suit\" \n                             onChange = {(e) => {setSuitableFor(e.target.value)}}\n                            placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"platform\">\n                                Platform?\n                            </label>\n                            <FormInput type=\"text\" id=\"platform\" \n                            onChange = {(e) => {setPlatform(e.target.value)}}\n                            placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"prerequisites\">\n                                Any prerequisites?\n                            </label>\n                            <FormInput type=\"suit\" id=\"prerequisites\" \n                            onChange = {(e) => {setPrerequisite(e.target.value)}}\n                            placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                    </Form>\n                </div>\n            </CardBody>\n        </Card>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n\n        axios.post('/author/create-course' ,{title , description , category , suitableFor , platform ,   prerequisite}).then(res => {\n            console.log(res.data.courseId)\n            history.push(\n                {\n                    pathname: '/course/create',\n                    state: { id: res.data.courseId}\n                }\n            );\n        })\n        \n       //\n    }\n\n    \n    \n\n    return (\n        <div>\n            <div className=\"createheading\">Get Started With Your Course</div>\n            <Button className=\"buttonexit\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                Exit\n            </Button>\n            <StepProgressBar\n                className=\"stepbar\"\n                startingStep={0}\n                onSubmit={onFormSubmit}\n                steps={[\n                    {\n                        label: 'Step 1',\n                        name: 'step 1',\n                        content: step1Content\n                        // validator: step1Validator\n                    },\n                    {\n                        label: 'Step 2',\n                        name: 'step 2',\n                        content: step2Content\n                        // validator: step2Validator\n                    },\n                    {\n                        label: 'Step 3',\n                        name: 'step 3',\n                        content: step3Content\n                        // validator: step3Validator\n                    },\n                    {\n                        label: 'Step 4',\n                        name: 'step 4',\n                        content: step4Content\n                        // validator: step4Validator\n                    }\n                ]}\n            />\n            ;\n        </div>\n    );\n}\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/constants/userConstants.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["165"],"import React from 'react';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\nimport CategoriesDropdown from \"../Utils/CategoriesDropdown\"\n\n// import { useDispatch } from 'react-redux';\n// import { logout } from '../../actions/subscriberActions';\n\n export const SubscriberHeader = () => {\n    return (\n        <div className=\"subscriberheader\">\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo}  width='90' heigh='90' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>\n                            <CategoriesDropdown />\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar>\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\">\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n            </Collapse>\n            <div className=\"right\">\n                <Collapse navbar>\n                <div>\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <Dropdown >\n                    <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                        <BsPersonSquare size=\"30\" />\n                    </Dropdown.Toggle>\n\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Button className=\"logoutbutton\" theme=\"outline-danger\" href=\"/\">Logout</Button>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                <div className=\"right\"></div>\n            </Collapse>\n            </div>\n\n        </Navbar>\n        </div>\n    );\n};\n\nexport default SubscriberHeader;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Footer.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Header.js",["166"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport CategoriesDropdown from './CategoriesDropdown';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport var type = \"\";\n\nexport const Header = () => {\n    const history = useHistory();\n\n    function loginHandleClick() {\n        history.push('/subscriber/login');\n    }\n    const signupHandleClick = () => {\n        history.push('/subscriber/signup');\n    };\n   \n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} width='60' heigh='40' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink><CategoriesDropdown /></NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar >\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\" >\n                        <InputGroupAddon  type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                \n                \n            </Collapse>\n            <div className=\"right\">\n                    \n                    <Button outline theme=\"danger\" onClick={loginHandleClick}>\n                        LogIn\n                    </Button>\n                    <Button outline theme=\"danger\" onClick={signupHandleClick}>\n                        SignUp\n                    </Button>\n                </div>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/HomeCarousel.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/subscriberActions.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/authorActions.js",["167","168"],"import axios from 'axios'\nimport {\n  \n  AUTHOR_LOGIN_FAIL,\n  AUTHOR_LOGIN_REQUEST,\n  AUTHOR_LOGIN_SUCCESS,\n  AUTHOR_LOGOUT,\n\n  AUTHOR_REGISTER_FAIL,\n  AUTHOR_REGISTER_REQUEST,\n  AUTHOR_REGISTER_SUCCESS,\n  \n  AUTHOR_VERIFY_REQUEST,\n  AUTHOR_VERIFY_SUCCESS,\n  AUTHOR_VERIFY_FAIL,\n  SET_COURSE_ID,\n\n} from '../constants/userConstants'\n\n\nexport const register = (username, email, password , confirm_password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_REGISTER_REQUEST,\n       })\n   \n       await axios.post(\n         '/author/register',\n         { username, email, password , confirm_password },\n       ).then(res => {\n            dispatch({\n                 type : AUTHOR_REGISTER_SUCCESS ,\n                 payload : \"An Email has been sent to you.\"\n            })\n       })\n       \n     } catch (error) {\n       dispatch({\n         type: AUTHOR_REGISTER_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export const logout = () => (dispatch) => {\n     localStorage.removeItem('isAuthor')\n     dispatch({\n       type : AUTHOR_LOGOUT\n     })\n   }\n\n   export const verifyAuthor = (token) => async (dispatch) => {\n     try {\n       dispatch({\n         type:AUTHOR_VERIFY_REQUEST,\n       })\n   \n\n       const config = {\n         headers : {\n          'Content-Type': 'application/json',\n           'Authorization' : `Bearer ${token}`\n         }\n       }\n\n       await axios.post(\n         '/author/verify',\n         {token} ,\n         {\n          headers : {\n           'Content-Type': 'application/json',\n            'Authorization' : `Bearer ${token}`\n          }\n        }\n \n       )\n       dispatch({\n         type:AUTHOR_VERIFY_SUCCESS,\n       })\n  \n       \n     } catch (error) {\n       dispatch({\n         type:AUTHOR_VERIFY_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n\n   const login = (email, password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_LOGIN_REQUEST,\n       })\n   \n       const config = {\n         headers: {\n\n           'Content-Type': 'application/json',\n         },\n       }\n   \n       const { data } = await axios.post(\n         '/author/login',\n         { email, password },\n         config\n       )\n   \n       dispatch({\n         type: AUTHOR_LOGIN_SUCCESS,\n         payload: data,\n       })\n   \n     //  localStorage.setItem('isAuthor', true)\n     } catch (error) {\n       dispatch({\n         type: AUTHOR_LOGIN_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export default login \n\n   \n\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorHeader.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Course/CourseHome.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Course/CreateCourse.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":35,"column":8,"nodeType":"193","endLine":35,"endColumn":32,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":8,"column":12,"nodeType":"197","messageId":"198","endLine":8,"endColumn":17},{"ruleId":"195","severity":1,"message":"199","line":28,"column":13,"nodeType":"197","messageId":"198","endLine":28,"endColumn":20},{"ruleId":"191","severity":1,"message":"200","line":50,"column":8,"nodeType":"193","endLine":50,"endColumn":25,"suggestions":"201"},{"ruleId":"191","severity":1,"message":"200","line":44,"column":8,"nodeType":"193","endLine":44,"endColumn":35,"suggestions":"202"},{"ruleId":"191","severity":1,"message":"203","line":30,"column":8,"nodeType":"193","endLine":30,"endColumn":29,"suggestions":"204"},{"ruleId":"195","severity":1,"message":"196","line":7,"column":12,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"195","severity":1,"message":"205","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"206","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":13},{"ruleId":"195","severity":1,"message":"207","line":11,"column":18,"nodeType":"197","messageId":"198","endLine":11,"endColumn":25},{"ruleId":"195","severity":1,"message":"208","line":7,"column":20,"nodeType":"197","messageId":"198","endLine":7,"endColumn":25},{"ruleId":"195","severity":1,"message":"209","line":8,"column":27,"nodeType":"197","messageId":"198","endLine":8,"endColumn":34},{"ruleId":"195","severity":1,"message":"210","line":126,"column":14,"nodeType":"197","messageId":"198","endLine":126,"endColumn":28},{"ruleId":"195","severity":1,"message":"211","line":130,"column":14,"nodeType":"197","messageId":"198","endLine":130,"endColumn":28},{"ruleId":"195","severity":1,"message":"212","line":134,"column":14,"nodeType":"197","messageId":"198","endLine":134,"endColumn":28},{"ruleId":"195","severity":1,"message":"213","line":138,"column":14,"nodeType":"197","messageId":"198","endLine":138,"endColumn":28},{"ruleId":"214","severity":1,"message":"215","line":34,"column":17,"nodeType":"216","endLine":34,"endColumn":58},{"ruleId":"214","severity":1,"message":"215","line":39,"column":17,"nodeType":"216","endLine":39,"endColumn":57},{"ruleId":"195","severity":1,"message":"217","line":16,"column":3,"nodeType":"197","messageId":"198","endLine":16,"endColumn":16},{"ruleId":"195","severity":1,"message":"218","line":62,"column":14,"nodeType":"197","messageId":"198","endLine":62,"endColumn":20},{"ruleId":"195","severity":1,"message":"219","line":5,"column":38,"nodeType":"197","messageId":"198","endLine":5,"endColumn":50},{"ruleId":"195","severity":1,"message":"220","line":7,"column":16,"nodeType":"197","messageId":"198","endLine":7,"endColumn":25},{"ruleId":"195","severity":1,"message":"209","line":7,"column":27,"nodeType":"197","messageId":"198","endLine":7,"endColumn":34},{"ruleId":"195","severity":1,"message":"221","line":13,"column":18,"nodeType":"197","messageId":"198","endLine":13,"endColumn":24},{"ruleId":"195","severity":1,"message":"222","line":104,"column":14,"nodeType":"197","messageId":"198","endLine":104,"endColumn":19},{"ruleId":"195","severity":1,"message":"223","line":105,"column":26,"nodeType":"197","messageId":"198","endLine":105,"endColumn":36},{"ruleId":"195","severity":1,"message":"224","line":163,"column":16,"nodeType":"197","messageId":"198","endLine":163,"endColumn":20},{"ruleId":"195","severity":1,"message":"225","line":163,"column":23,"nodeType":"197","messageId":"198","endLine":163,"endColumn":30},{"ruleId":"195","severity":1,"message":"226","line":165,"column":18,"nodeType":"197","messageId":"198","endLine":165,"endColumn":30},{"ruleId":"195","severity":1,"message":"227","line":215,"column":17,"nodeType":"197","messageId":"198","endLine":215,"endColumn":24},{"ruleId":"195","severity":1,"message":"228","line":215,"column":27,"nodeType":"197","messageId":"198","endLine":215,"endColumn":40},{"ruleId":"195","severity":1,"message":"229","line":216,"column":17,"nodeType":"197","messageId":"198","endLine":216,"endColumn":28},{"ruleId":"195","severity":1,"message":"230","line":216,"column":31,"nodeType":"197","messageId":"198","endLine":216,"endColumn":45},{"ruleId":"195","severity":1,"message":"231","line":229,"column":18,"nodeType":"197","messageId":"198","endLine":229,"endColumn":30},{"ruleId":"195","severity":1,"message":"210","line":527,"column":14,"nodeType":"197","messageId":"198","endLine":527,"endColumn":28},{"ruleId":"195","severity":1,"message":"211","line":531,"column":14,"nodeType":"197","messageId":"198","endLine":531,"endColumn":28},{"ruleId":"195","severity":1,"message":"212","line":535,"column":14,"nodeType":"197","messageId":"198","endLine":535,"endColumn":28},{"ruleId":"195","severity":1,"message":"213","line":539,"column":14,"nodeType":"197","messageId":"198","endLine":539,"endColumn":28},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["234"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["235"],["236"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["237"],"'useEffect' is defined but never used.","'Axios' is defined but never used.","'setName' is assigned a value but never used.","'Forms' is defined but never used.","'CardImg' is defined but never used.","'step1Validator' is defined but never used.","'step2Validator' is defined but never used.","'step3Validator' is defined but never used.","'step4Validator' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SET_COURSE_ID' is defined but never used.","'config' is assigned a value but never used.","'FormTextarea' is defined but never used.","'CardTitle' is defined but never used.","'Switch' is defined but never used.","'SecIp' is defined but never used.","'setSecName' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'handleChange' is defined but never used.","'section' is assigned a value but never used.","'createSection' is assigned a value but never used.","'sectionName' is assigned a value but never used.","'setSectionName' is assigned a value but never used.","'handleRemove' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [subscriberInfo, error, history]",{"range":"246","text":"247"},"Update the dependencies array to be: [error, message, success]",{"range":"248","text":"249"},"Update the dependencies array to be: [history, error, success, message]",{"range":"250","text":"251"},"Update the dependencies array to be: [history, authorInfo, error]",{"range":"252","text":"253"},[1066,1090],"[subscriberInfo, error, history]",[1447,1464],"[error, message, success]",[1308,1335],"[history, error, success, message]",[996,1017],"[history, authorInfo, error]"]
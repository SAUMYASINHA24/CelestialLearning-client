[{"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/index.js":"1","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/App.js":"2","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/store.js":"3","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/reducers/userReducer.js":"4","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"5","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"6","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"7","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"8","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"9","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"10","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"11","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"12","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"13","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"14","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Home.js":"15","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"16","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"17","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"18","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/CourseCard.js":"19","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"20","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/constants/userConstants.js":"21","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Header.js":"22","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/subscriberActions.js":"23","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/authorActions.js":"24"},{"size":471,"mtime":1609939041948,"results":"25","hashOfConfig":"26"},{"size":2693,"mtime":1609941131699,"results":"27","hashOfConfig":"26"},{"size":910,"mtime":1609912452717,"results":"28","hashOfConfig":"26"},{"size":3182,"mtime":1609921415695,"results":"29","hashOfConfig":"26"},{"size":1123,"mtime":1609921459590,"results":"30","hashOfConfig":"26"},{"size":1861,"mtime":1609912452717,"results":"31","hashOfConfig":"26"},{"size":3199,"mtime":1610116301330,"results":"32","hashOfConfig":"26"},{"size":775,"mtime":1609912452717,"results":"33","hashOfConfig":"26"},{"size":781,"mtime":1610128649524,"results":"34","hashOfConfig":"26"},{"size":5866,"mtime":1610133924261,"results":"35","hashOfConfig":"26"},{"size":709,"mtime":1609912452717,"results":"36","hashOfConfig":"26"},{"size":4574,"mtime":1609912452717,"results":"37","hashOfConfig":"26"},{"size":3117,"mtime":1610113101762,"results":"38","hashOfConfig":"26"},{"size":4699,"mtime":1609912452717,"results":"39","hashOfConfig":"26"},{"size":672,"mtime":1610133553404,"results":"40","hashOfConfig":"26"},{"size":1845,"mtime":1609912452717,"results":"41","hashOfConfig":"26"},{"size":7561,"mtime":1610132936818,"results":"42","hashOfConfig":"26"},{"size":2542,"mtime":1610128667860,"results":"43","hashOfConfig":"26"},{"size":535,"mtime":1609912452717,"results":"44","hashOfConfig":"26"},{"size":2475,"mtime":1609912452717,"results":"45","hashOfConfig":"26"},{"size":1795,"mtime":1609912452717,"results":"46","hashOfConfig":"26"},{"size":2763,"mtime":1609912452717,"results":"47","hashOfConfig":"26"},{"size":2780,"mtime":1610130334484,"results":"48","hashOfConfig":"26"},{"size":2847,"mtime":1610113739959,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1gv0bxi",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/index.js",[],["111","112"],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/App.js",["113","114"],"import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SubscriberLogin from './Components/Subscriber/SubscriberLogin';\n\nimport SubscriberSignup from './Components/Subscriber/SubscriberSignup';\nimport SubscriberVerify from './Components/Subscriber/SubscriberVerify';\nimport SubscriberProfile from \"./Components/Subscriber/SubscriberProfile\"\nimport SubscriberDashboard from \"./Components/Subscriber/SubscriberDashboard\"\nimport SubscriberSettings from \"./Components/Subscriber/SubscriberSettings\"\n\nimport AuthorLogin from './Components/Author/AuthorLogin';\nimport AuthorSignup from './Components/Author/AuthorSignup';\nimport AuthorVerify from \"./Components/Author/AuthorVerify\"\nimport AuthorProfile from \"./Components/Author/AuthorProfile\"\nimport AuthorDashboard from \"./Components/Author/AuthorDashboard\"\nimport AuthorSettings from \"./Components/Author/AuthorSettings\"\n\nimport Home from './Components/Utils/Home';\nimport { useEffect } from 'react';\n\nfunction App() {\n\n    const isSubscriber = localStorage.getItem('isSubscriber')\n  //  const history1 = useHistory()\n\n    // useEffect(() => {\n    //     if(isSubscriber){\n    //         history.push('/subscriber/dashboard')\n    //     }\n    // } , [])\n    return (\n        <div className=\"app\">\n            <Router>\n                <Router>\n                    <Switch>\n\n\n                        <Route path=\"/\" exact component={Home} />\n\n                        <Route path=\"/subscriber/login\" exact component={SubscriberLogin} />\n                        <Route path=\"/subscriber/signup/\" exact component={SubscriberSignup} />\n                        <Route path=\"/subscriber/dashboard/\" exact component={SubscriberDashboard} />\n                        <Route path=\"/subscriber/profile/\" exact component={SubscriberProfile} />\n                        <Route path=\"/subscriber/settings/\" exact component={SubscriberSettings} />\n                        <Route path=\"/subscriber/verify/:token\" exact component={SubscriberVerify} />\n\n                        <Route path=\"/author/login\" exact component={AuthorLogin} />\n                        <Route path=\"/author/signup\" exact component={AuthorSignup} />\n                        <Route path=\"/author/dashboard/\" exact component={AuthorDashboard} />\n                        <Route path=\"/author/profile/\" exact component={AuthorProfile} />\n                        <Route path=\"/author/settings/\" exact component={AuthorSettings} />\n                        <Route path=\"/author/verify/:token\" exact component={AuthorVerify} />\n\n\n                    </Switch>\n                </Router>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/store.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/reducers/userReducer.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",["115"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Swal  from \"sweetalert2\"\nimport { verifySubscriber } from '../../actions/subscriberActions';\n\n\n\nfunction SubscriberVerify({match}) {\n     const dispatch = useDispatch();\n     const history = useHistory()\n \n     const subscriberVerify = useSelector(state => state.subscriberVerify);\n     const { loading, error, verify } = subscriberVerify;\n \n     let token = match.params.token;\n \n     useEffect(() => {\n         if(error){\n              Swal.fire({\n                   icon : 'error' ,\n                   text : `${error}`\n              })\n         }\n         if(verify){\n            console.log(\"True\")\n            history.push('/subscriber/login')\n         }\n     }, [ history , verify , error ]);\n \n     const submitHandler = e => {\n         e.preventDefault();\n         dispatch(verifySubscriber(token));\n     };\n \n     return (\n         <form onSubmit={submitHandler}>\n             <button>Submit</button>\n         </form>\n     );\n}\n\nexport default SubscriberVerify\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",["116","117","118"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport login from \"../../actions/subscriberActions\"\nimport Swal from 'sweetalert2'\n\n\nfunction SubscriberLogin({history}) {\n     const [email, setEmail] = useState('');\n\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberLogin = useSelector(state => state.subscriberLogin);\n    const { loading, error, subscriberInfo } = subscriberLogin;\n\n    useEffect(() => {\n        if (subscriberInfo) {\n            console.log(\"Loged In\")\n            history.push('/subscriber/dashboard')\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [subscriberInfo , error]);   \n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n       \n    };\n\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/author/login\">Are you an Author?</a>\n                    <br />\n                    <a href=\"/path_to_page\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberLogin\n\n\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorVerify.js",["119","120"],"import React, { useEffect } from 'react';\nimport {verifyAuthor} from \"../../actions/authorActions\"\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nfunction AuthorVerify({ match, history }) {\n    const dispatch = useDispatch();\n\n    const authorVerify = useSelector(state => state.authorVerify);\n    const { loading, error, verify } = authorVerify;\n\n\n    let token = match.params.token;\n\n    useEffect(() => {\n        if (verify) {\n            history.push('/author/login');\n        }\n    }, [verify, history]);\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(verifyAuthor(token));\n\n    };\n\n    return (\n        <form onSubmit={submitHandler}>\n            <button>Submit</button>\n        </form>\n    );\n}\n\nexport default AuthorVerify;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",["121"],"import React, { useEffect } from 'react';\nimport CourseCard from '../Utils/CourseCard';\nimport SubscriberHeader from './SubscriberHeader';\nimport '../styles/UserDashboard.css';\n\nexport default function SubscriberDashboard( {history} ) {\n\n\n    return (\n        <div>\n            <SubscriberHeader history = {history} />\n            <div className=\"all\">\n                <h1>Welcome Subscriber!</h1>\n                    Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\n                <div className=\"main\">\n                    <CourseCard />\n                    <CourseCard />\n                    <CourseCard />\n                    <CourseCard />\n                    <CourseCard />\n\n                </div>\n            </div>\n        </div>\n    );\n}\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",["122"],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSignup.js",["123","124","125","126","127"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/authorActions';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\nimport Swal from \"sweetalert2\"\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\n function AuthorSignup({ history }) {\n\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorRegister = useSelector(state => state.authorRegister);\n    const { loading, error ,success , message } = authorRegister;\n\n\n\n    useEffect(() => {\n          if(error){     \n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`\n               })\n          }\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               }).then(res => {\n                    history.push('/author/login')\n               })\n          }\n        \n    }, [history, error , success ]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n    };\n}\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup\">Are you a Subscriber?</a><br />\n\n                    <a href=\"/author/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n\n}\n\nexport default AuthorSignup\n\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorLogin.js",["128","129","130"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/authorActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from 'sweetalert2'\n\nfunction AuthorLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorLogin = useSelector(state => state.authorLogin);\n    const { loading, error, authorInfo } = authorLogin;\n\n    useEffect(() => {\n        if (authorInfo) {\n            history.push('/author/dashboard');\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [history, authorInfo]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        \n    };\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/subscriber/login\">Are you a Subscriber?</a>\n                    <br />\n                    <a href=\"/path_to_page\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default AuthorLogin;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",["131","132","133","134"],"import React, { useEffect, useState } from 'react';\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\n//import { register } from '../../actions/userActions';\nimport {register} from '../../actions/subscriberActions'\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\n\nimport '../styles/UserSignUp.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from \"sweetalert2\"\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\n\nfunction SubscriberSignup() {\n     const [name, setName] = useState('');\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberRegister = useSelector(state => state.subscriberRegister);\n    const { loading, error ,success , message } = subscriberRegister;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n    useEffect(() => {\n     \n\n          if(error){\n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`    \n               })\n               console.log(\"Error : \" , error)\n          }\n\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               })\n          }\n    }, [error ,success ]);\n\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            // console.log(\"matched\")\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup\">Are you an Author?</a><br />\n                    <a href=\"/subscriber/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberSignup\n\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Home.js",["135","136","137","138"],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorSettings.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorProfile.js",["139"],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["140","141"],"import React, { useEffect } from 'react';\n\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/logo2.svg';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n// import { useDispatch } from 'react-redux';\n// import { logout } from '../../actions/subscriberActions';\n\n export const Header_auth = () => {\n\n   \n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>Categories</NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar className=\"ml-auto\">\n                    <InputGroup size=\"sm\" seamless>\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                <div className=\"carticon\">\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <div className=\"right\">\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                            <BsPersonSquare size=\"30\" />\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Button >Logout</Button>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div className=\"right\"></div>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header_auth;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Author/AuthorHeader.js",["142","143","144"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/logo2.svg';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport const Header_auth = () => {\n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>Categories</NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar className=\"ml-auto\">\n                    <InputGroup size=\"sm\" seamless>\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                <div className=\"carticon\">\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <div className=\"right\">\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                            <BsPersonSquare size=\"30\" />\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/author/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/author/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Item href=\"/\">Log Out</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div className=\"right\"></div>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header_auth;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/constants/userConstants.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/Components/Utils/Header.js",["145"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/logo2.svg';\nimport { Button } from 'shards-react';\n\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport var type = \"\";\n\nexport const Header = () => {\n    const history = useHistory();\n\n    function loginHandleClick() {\n        history.push('/subscriber/login');\n    }\n    const signupHandleClick = () => {\n        history.push('/subscriber/signup');\n    };\n    const subDashboard = () => {\n        history.push('/subscriber/dashboard');\n    };\n    const autDashboard = () => {\n        history.push('/author/dashboard');\n    };\n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>Categories</NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar className=\"ml-auto\">\n                    <InputGroup size=\"sm\" seamless>\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                <div className=\"carticon\">\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <div className=\"right\">\n                    <Button outline theme=\"danger\" onClick={subDashboard}>\n                        Subscriber Dashboard\n                    </Button>\n                    <Button outline theme=\"danger\" onClick={autDashboard}>\n                        Author Dashboard\n                    </Button>\n                    <Button outline theme=\"danger\" onClick={loginHandleClick}>\n                        LogIn\n                    </Button>\n                    <Button outline theme=\"danger\" onClick={signupHandleClick}>\n                        SignUp\n                    </Button>\n                </div>\n                <div className=\"right\"></div>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/subscriberActions.js",[],"/home/siddharth/Documents/ReactProjects/Project/CelestialLearning-client/src/actions/authorActions.js",["146"],"import axios from 'axios'\nimport {\n  \n  AUTHOR_LOGIN_FAIL,\n  AUTHOR_LOGIN_REQUEST,\n  AUTHOR_LOGIN_SUCCESS,\n  AUTHOR_LOGOUT,\n\n  AUTHOR_REGISTER_FAIL,\n  AUTHOR_REGISTER_REQUEST,\n  AUTHOR_REGISTER_SUCCESS,\n  \n  AUTHOR_VERIFY_REQUEST,\n  AUTHOR_VERIFY_SUCCESS,\n  AUTHOR_VERIFY_FAIL,\n\n} from '../constants/userConstants'\n\n\nexport const register = (username, email, password , confirm_password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_REGISTER_REQUEST,\n       })\n   \n       await axios.post(\n         '/author/register',\n         { username, email, password , confirm_password },\n       ).then(res => {\n            dispatch({\n                 type : AUTHOR_REGISTER_SUCCESS ,\n                 payload : \"An Email has been sent to you.\"\n            })\n       })\n       \n     } catch (error) {\n       dispatch({\n         type: AUTHOR_REGISTER_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export const logout = () => (dispatch) => {\n     localStorage.removeItem('isAuthor')\n     dispatch({\n       type : AUTHOR_LOGOUT\n     })\n   }\n\n   export const verifyAuthor = (token) => async (dispatch) => {\n     try {\n       dispatch({\n         type:AUTHOR_VERIFY_REQUEST,\n       })\n   \n\n       const config = {\n         headers : {\n          'Content-Type': 'application/json',\n           'Authorization' : `Bearer ${token}`\n         }\n       }\n\n       await axios.post(\n         '/author/verify',\n         {token} ,\n         {\n          headers : {\n           'Content-Type': 'application/json',\n            'Authorization' : `Bearer ${token}`\n          }\n        }\n \n       )\n       dispatch({\n         type:AUTHOR_VERIFY_SUCCESS,\n       })\n  \n       \n     } catch (error) {\n       dispatch({\n         type:AUTHOR_VERIFY_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n\n   const login = (email, password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_LOGIN_REQUEST,\n       })\n   \n       const config = {\n         headers: {\n\n           'Content-Type': 'application/json',\n         },\n       }\n   \n       const { data } = await axios.post(\n         '/author/login',\n         { email, password },\n         config\n       )\n   \n       dispatch({\n         type: AUTHOR_LOGIN_SUCCESS,\n         payload: data,\n       })\n   \n     //  localStorage.setItem('isAuthor', true)\n     } catch (error) {\n       dispatch({\n         type: AUTHOR_LOGIN_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export default login ",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":19,"column":10,"nodeType":"153","messageId":"154","endLine":19,"endColumn":19},{"ruleId":"151","severity":1,"message":"155","line":23,"column":11,"nodeType":"153","messageId":"154","endLine":23,"endColumn":23},{"ruleId":"151","severity":1,"message":"156","line":14,"column":14,"nodeType":"153","messageId":"154","endLine":14,"endColumn":21},{"ruleId":"151","severity":1,"message":"157","line":6,"column":39,"nodeType":"153","messageId":"154","endLine":6,"endColumn":46},{"ruleId":"151","severity":1,"message":"156","line":22,"column":13,"nodeType":"153","messageId":"154","endLine":22,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":35,"column":8,"nodeType":"160","endLine":35,"endColumn":32,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"156","line":10,"column":13,"nodeType":"153","messageId":"154","endLine":10,"endColumn":20},{"ruleId":"151","severity":1,"message":"162","line":10,"column":22,"nodeType":"153","messageId":"154","endLine":10,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"163","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":12},{"ruleId":"151","severity":1,"message":"164","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":20},{"ruleId":"151","severity":1,"message":"165","line":6,"column":16,"nodeType":"153","messageId":"154","endLine":6,"endColumn":26},{"ruleId":"151","severity":1,"message":"157","line":6,"column":39,"nodeType":"153","messageId":"154","endLine":6,"endColumn":46},{"ruleId":"151","severity":1,"message":"156","line":25,"column":13,"nodeType":"153","messageId":"154","endLine":25,"endColumn":20},{"ruleId":"158","severity":1,"message":"166","line":45,"column":8,"nodeType":"160","endLine":45,"endColumn":35,"suggestions":"167"},{"ruleId":"151","severity":1,"message":"157","line":5,"column":39,"nodeType":"153","messageId":"154","endLine":5,"endColumn":46},{"ruleId":"151","severity":1,"message":"156","line":18,"column":13,"nodeType":"153","messageId":"154","endLine":18,"endColumn":20},{"ruleId":"158","severity":1,"message":"168","line":30,"column":8,"nodeType":"160","endLine":30,"endColumn":29,"suggestions":"169"},{"ruleId":"151","severity":1,"message":"165","line":6,"column":16,"nodeType":"153","messageId":"154","endLine":6,"endColumn":26},{"ruleId":"151","severity":1,"message":"157","line":6,"column":39,"nodeType":"153","messageId":"154","endLine":6,"endColumn":46},{"ruleId":"151","severity":1,"message":"156","line":28,"column":13,"nodeType":"153","messageId":"154","endLine":28,"endColumn":20},{"ruleId":"158","severity":1,"message":"166","line":50,"column":8,"nodeType":"160","endLine":50,"endColumn":25,"suggestions":"170"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"171","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"151","severity":1,"message":"172","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":15},{"ruleId":"151","severity":1,"message":"173","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":25},{"ruleId":"151","severity":1,"message":"163","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":34,"column":17,"nodeType":"176","endLine":34,"endColumn":35},{"ruleId":"151","severity":1,"message":"164","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":20},{"ruleId":"151","severity":1,"message":"177","line":9,"column":10,"nodeType":"153","messageId":"154","endLine":9,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":30,"column":17,"nodeType":"176","endLine":30,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":45,"column":17,"nodeType":"176","endLine":45,"endColumn":35},{"ruleId":"151","severity":1,"message":"178","line":61,"column":14,"nodeType":"153","messageId":"154","endLine":61,"endColumn":20},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isSubscriber' is assigned a value but never used.","'loading' is assigned a value but never used.","'CardImg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'error' is assigned a value but never used.","'logo' is defined but never used.","'useHistory' is defined but never used.","'CardHeader' is defined but never used.","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["183"],["184"],"'useCookies' is defined but never used.","'Cookies' is defined but never used.","'CookiesProvider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'config' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [subscriberInfo, error, history]",{"range":"193","text":"194"},"Update the dependencies array to be: [history, error, success, message]",{"range":"195","text":"196"},"Update the dependencies array to be: [history, authorInfo, error]",{"range":"197","text":"198"},"Update the dependencies array to be: [error, message, success]",{"range":"199","text":"200"},[1083,1107],"[subscriberInfo, error, history]",[1384,1411],"[history, error, success, message]",[1013,1034],"[history, authorInfo, error]",[1467,1484],"[error, message, success]"]
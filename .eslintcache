<<<<<<< HEAD
[{"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\index.js":"1","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\App.js":"2","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberProfile.js":"3","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberSignup.js":"4","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberVerify.js":"5","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberSettings.js":"6","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberEmailVerify.js":"7","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberNewPassword.js":"8","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberDashboard.js":"9","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorProfile.js":"10","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorSignup.js":"11","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberForgetVerify.js":"12","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorVerify.js":"13","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberForgetPassword.js":"14","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorSettings.js":"15","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorDashboard.js":"16","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\CourseView.js":"17","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorLogin.js":"18","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorForgetVerify.js":"19","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorNewPassword.js":"20","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorEmailVerify.js":"21","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorForgetPassword.js":"22","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\CourseHome.js":"23","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\UploadCourse.js":"24","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\CreateCourse.js":"25","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Home.js":"26","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberLogin.js":"27","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberHeader.js":"28","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\CourseCard.js":"29","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\verify.js":"30","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorHeader.js":"31","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorCourseCarousel.js":"32","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\HLSSource.js":"33","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Carousel.js":"34","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Footer.js":"35","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Header.js":"36","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\HomeCarousel.js":"37","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\CategoriesDropdown.js":"38"},{"size":241,"mtime":1613312874449,"results":"39","hashOfConfig":"40"},{"size":4697,"mtime":1613312902603,"results":"41","hashOfConfig":"40"},{"size":14641,"mtime":1612954030715,"results":"42","hashOfConfig":"40"},{"size":4420,"mtime":1612847631771,"results":"43","hashOfConfig":"40"},{"size":566,"mtime":1612847631772,"results":"44","hashOfConfig":"40"},{"size":5626,"mtime":1612847631771,"results":"45","hashOfConfig":"40"},{"size":541,"mtime":1612847631769,"results":"46","hashOfConfig":"40"},{"size":3263,"mtime":1612847631770,"results":"47","hashOfConfig":"40"},{"size":2268,"mtime":1612954030700,"results":"48","hashOfConfig":"40"},{"size":16064,"mtime":1612954030699,"results":"49","hashOfConfig":"40"},{"size":4417,"mtime":1612847631766,"results":"50","hashOfConfig":"40"},{"size":598,"mtime":1612847631769,"results":"51","hashOfConfig":"40"},{"size":510,"mtime":1612847631767,"results":"52","hashOfConfig":"40"},{"size":2160,"mtime":1612847631769,"results":"53","hashOfConfig":"40"},{"size":5644,"mtime":1612847631766,"results":"54","hashOfConfig":"40"},{"size":2301,"mtime":1612954030698,"results":"55","hashOfConfig":"40"},{"size":3550,"mtime":1612956670797,"results":"56","hashOfConfig":"40"},{"size":2959,"mtime":1612847631765,"results":"57","hashOfConfig":"40"},{"size":606,"mtime":1612847631765,"results":"58","hashOfConfig":"40"},{"size":3239,"mtime":1612847631765,"results":"59","hashOfConfig":"40"},{"size":551,"mtime":1612847631764,"results":"60","hashOfConfig":"40"},{"size":2169,"mtime":1612847631764,"results":"61","hashOfConfig":"40"},{"size":9760,"mtime":1613150934676,"results":"62","hashOfConfig":"40"},{"size":9298,"mtime":1612954030699,"results":"63","hashOfConfig":"40"},{"size":19664,"mtime":1612850129411,"results":"64","hashOfConfig":"40"},{"size":1275,"mtime":1612720936483,"results":"65","hashOfConfig":"40"},{"size":3455,"mtime":1613320099460,"results":"66","hashOfConfig":"40"},{"size":3225,"mtime":1612847631770,"results":"67","hashOfConfig":"40"},{"size":881,"mtime":1612276244010,"results":"68","hashOfConfig":"40"},{"size":763,"mtime":1612720936483,"results":"69","hashOfConfig":"40"},{"size":3122,"mtime":1612847631765,"results":"70","hashOfConfig":"40"},{"size":3594,"mtime":1612954030697,"results":"71","hashOfConfig":"40"},{"size":1045,"mtime":1611827872226,"results":"72","hashOfConfig":"40"},{"size":4177,"mtime":1612720936482,"results":"73","hashOfConfig":"40"},{"size":2653,"mtime":1610885402739,"results":"74","hashOfConfig":"40"},{"size":2314,"mtime":1612720936483,"results":"75","hashOfConfig":"40"},{"size":1154,"mtime":1611981509319,"results":"76","hashOfConfig":"40"},{"size":967,"mtime":1610316148477,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1y1evg4",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\index.js",[],["170","171"],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\App.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberProfile.js",["172","173","174","175","176","177","178","179","180","181","182","183","184"],"import React, { useState, useEffect } from 'react';\r\nimport SubscriberHeader from './SubscriberHeader';\r\nimport '../styles/UserProfile.css';\r\nimport { Form, FormInput, FormGroup } from 'shards-react';\r\nimport { Button } from 'shards-react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport { Upload, message } from 'antd';\r\nimport Avatar from 'react-avatar';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nexport default function SubscriberProfile({ history }) {\r\n    const [url, setUrl] = useState('');\r\n    const [imgStatus, setStatus] = useState('Upload Image');\r\n    const [firstName, setfirstName] = useState('First Name');\r\n    const [middleName, setmiddleName] = useState('Middle Name');\r\n    const [lastName, setlastName] = useState('Last Name');\r\n    const [phNum, setphNum] = useState('Phone Number');\r\n    const [linkedInURL, setlinkedInURL] = useState('LinkedIn URL');\r\n    const [twitterURL, settwitterURL] = useState('Twitter URL');\r\n    const [higherEducation, sethigherEducation] = useState('Higher Education');\r\n    const [areaOfInterest, setareaOfInterest] = useState('Area Of Interest');\r\n\r\n    const ImageUpload = () => {\r\n        const [file, setFile] = useState('');\r\n        const [imagePreviewUrl, setImagePreview] = useState('');\r\n\r\n        useEffect(() => {\r\n            axios\r\n                .post('/subscriber/profileImageView')\r\n                .then(res => {\r\n                    const ext = res.data.url.slice(-2);\r\n                    if (ext == 'NA') {\r\n                        setStatus('Upload Image');\r\n                    } else {\r\n                        setStatus('Update Image');\r\n                    }\r\n                    setImagePreview(res.data.url);\r\n\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.data.message == 'Unauthorised.') {\r\n                        history.push('/subscriber/login');\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            text: `${error.response.data.message}`\r\n                        });\r\n                    }\r\n                });\r\n        }, []);\r\n\r\n        const _handleSubmit = e => {\r\n            e.preventDefault();\r\n            // TODO: do something with -> this.state.file\r\n            console.log('handle uploading-', file);\r\n            const formData = new FormData();\r\n            formData.append('image', file);\r\n            axios({\r\n                method: 'post',\r\n                url: '/subscriber/profileImageUpdate',\r\n                data: formData\r\n            })\r\n                .then(res => {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        text: `${res.data.message}`\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.data.message == 'Unauthorised.') {\r\n                        history.push('/subscriber/login');\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            text: `${error.response.data.message}`\r\n                        });\r\n                    }\r\n                });\r\n        };\r\n\r\n        const _handleImageChange = e => {\r\n            e.preventDefault();\r\n\r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n\r\n            reader.onloadend = () => {\r\n                setFile(file);\r\n                setImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={e => _handleSubmit(e)}>\r\n                    <input className=\"ProfileImageInputButton\" type=\"file\" onChange={e => _handleImageChange(e)} />\r\n                    <Button className=\"ProfileImageSubmitButton\" type=\"submit\" onClick={e => _handleSubmit(e)}>\r\n                        {imgStatus}\r\n                    </Button>\r\n                </form>\r\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\r\n                    {imagePreviewUrl ? (\r\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\r\n                    ) : (\r\n                        <div>Please select an Image for Preview</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.post('/subscriber/profile')\r\n            .then(res => {\r\n                console.log('Response Invalid: ', res);\r\n                setUrl(res.data.url);\r\n                console.log('Project : ', res.data);\r\n                const {\r\n                    firstName,\r\n                    middleName,\r\n                    lastName,\r\n                    phNum,\r\n                    linkedInURL,\r\n                    twitterURL,\r\n                    higherEducation,\r\n                    areaOfInterest\r\n                } = res.data.profiledata;\r\n\r\n                setfirstName(firstName);\r\n                setmiddleName(middleName);\r\n                setlastName(lastName);\r\n                setphNum(phNum);\r\n                setlinkedInURL(linkedInURL);\r\n                settwitterURL(twitterURL);\r\n                sethigherEducation(higherEducation);\r\n                setareaOfInterest(areaOfInterest);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.message == 'Unauthorised.') {\r\n                    history.push('/subscriber/login');\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: `${error.response.data.message}`\r\n                    });\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <SubscriberHeader history={history} />\r\n            <div>\r\n                <Tabs id=\"profileTab\" className=\"profiletab\">\r\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\r\n                        <div className=\"ProfilePic\">\r\n                            <ImageUpload />\r\n                        </div>\r\n                        <Form className=\"subform\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#firstName\">First Name</label>\r\n                                <FormInput id=\"#firstName\" value={firstName} onChange={e => setfirstName(e.target.value)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#middleName\">Middle Name</label>\r\n                                <FormInput id=\"#middleName\" value={middleName} onChange={e => setmiddleName(e.target.value)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#lastName\">Last Name</label>\r\n                                <FormInput id=\"#lastName\" value={lastName} onChange={e => setlastName(e.target.value)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#phNum\">Phone Number</label>\r\n                                <FormInput id=\"#phNum\" value={phNum} onChange={e => setphNum(e.target.value)} />\r\n                            </FormGroup>\r\n                            <Button\r\n                                theme=\"info\"\r\n                                onClick={() => {\r\n                                    Axios.post('/subscriber/update', {\r\n                                        firstName,\r\n                                        middleName,\r\n                                        lastName,\r\n                                        phNum,\r\n                                        linkedInURL,\r\n                                        twitterURL,\r\n                                        higherEducation,\r\n                                        areaOfInterest\r\n                                    })\r\n                                        .then(res => {\r\n                                            Swal.fire({\r\n                                                icon: 'success',\r\n                                                text: `${res.data.message}`\r\n                                            });\r\n                                        })\r\n                                        .catch(error => {\r\n                                            if (error.response.data.message == 'Unauthorised.') {\r\n                                                history.push('/subscriber/login');\r\n                                            } else {\r\n                                                Swal.fire({\r\n                                                    icon: 'error',\r\n                                                    text: `${error.response.data.message}`\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                }}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\r\n                        <Form className=\"subform\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\r\n                                <FormInput id=\"#linkedInURL\" value={linkedInURL} onChange={e => setlinkedInURL(e.target.value)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\r\n                                <FormInput id=\"#twitterURL\" value={twitterURL} onChange={e => settwitterURL(e.target.value)} />\r\n                            </FormGroup>\r\n                            <Button\r\n                                theme=\"info\"\r\n                                onClick={() => {\r\n                                    Axios.post('/subscriber/update', {\r\n                                        firstName,\r\n                                        middleName,\r\n                                        lastName,\r\n                                        phNum,\r\n                                        linkedInURL,\r\n                                        twitterURL,\r\n                                        higherEducation,\r\n                                        areaOfInterest\r\n                                    }).then(res => {\r\n                                        Swal.fire({\r\n                                        icon : 'success' ,\r\n                                        text : `${res.data.message}`\r\n                                        })\r\n                                    }).catch(error => {\r\n                                        if(error.response.data.message == \"Unauthorised.\"){\r\n                                            history.push('/subscriber/login');\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            Swal.fire({\r\n                                                icon : 'error' ,\r\n                                                text : `${error.response.data.message}`\r\n                                            })\r\n                                        }\r\n                                    });;\r\n                                }}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"education\" title=\"Education\">\r\n                        <Form className=\"subform\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#higherEducation\">Higher Education</label>\r\n                                <FormInput\r\n                                    id=\"#higherEducation\"\r\n                                    value={higherEducation}\r\n                                    onChange={e => sethigherEducation(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\r\n                                <FormInput id=\"#areaOfInterest\" value={areaOfInterest} onChange={e => setareaOfInterest(e.target.value)} />\r\n                            </FormGroup>\r\n                            <Button\r\n                                theme=\"info\"\r\n                                onClick={() => {\r\n                                    Axios.post('/subscriber/update', {\r\n                                        firstName,\r\n                                        middleName,\r\n                                        lastName,\r\n                                        phNum,\r\n                                        linkedInURL,\r\n                                        twitterURL,\r\n                                        higherEducation,\r\n                                        areaOfInterest\r\n                                    }).then(res => {\r\n                                        Swal.fire({\r\n                                            icon : 'success' ,\r\n                                            text : `${res.data.message}`\r\n                                        })\r\n                                    }).catch(error => {\r\n                                        if(error.response.data.message == \"Unauthorised.\"){\r\n                                            history.push('/subscriber/login');\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            Swal.fire({\r\n                                                icon : 'error' ,\r\n                                                text : `${error.response.data.message}`\r\n                                            })\r\n                                        }\r\n                                    });;\r\n                                }}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberSignup.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberVerify.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberSettings.js",["185","186","187"],"import React, { useState } from 'react'\r\nimport SubscriberHeader from \"./SubscriberHeader\"\r\nimport {Tabs,Tab } from \"react-bootstrap\"\r\nimport { Form, FormInput, FormGroup } from 'shards-react';\r\nimport { Button } from 'shards-react';\r\nimport Axios from 'axios';\r\nimport Swal from \"sweetalert2\"\r\n\r\nexport default function SubscriberSettings({history}) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [oldPassword,setOldPassword] = useState('')\r\n    const [newPassword,setNewPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        //dispatch(login(email, password));\r\n        Axios.post(\"/subscriber/emailchange\",{\r\n            new_email: email,\r\n            password: oldPassword\r\n        }).then(res=>{\r\n            \r\n            Swal.fire({\r\n                icon : 'success' ,\r\n                text : `${res.data.message}`\r\n           })\r\n        }).catch(error=>{\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/subscriber/login');\r\n            }\r\n            else if(error.response.data.message==\"Current email address entered.\")\r\n            {\r\n                Swal.fire({\r\n                    icon : 'info' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        })\r\n       \r\n    };\r\n\r\n    const submitPasswordUpdateHandler = e => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        if(newPassword!==confirmPassword)\r\n        {\r\n            Swal.fire({\r\n                icon : 'info' ,\r\n                text : `Passwords do not match.`\r\n           })\r\n        }\r\n        else\r\n        {\r\n            Axios.post(\"/subscriber/passwordchange\",{\r\n                new_password: newPassword,\r\n                old_password: oldPassword\r\n            }).then(res=>{\r\n                \r\n                Swal.fire({\r\n                    icon : 'success' ,\r\n                    text : `${res.data.message}`\r\n               })\r\n            }).catch(error=>{\r\n                if(error.response.data.message == \"Unauthorised.\"){\r\n                    history.push('/subscriber/login');\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        icon : 'error' ,\r\n                        text : `${error.response.data.message}`\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <SubscriberHeader history={history}/>\r\n            <div className=\"profiletab\">\r\n                <Tabs  id=\"settingtab\">\r\n                    <Tab eventKey=\"personal\" title=\"Email\">\r\n                        <Form className=\"subform\" onSubmit={submitHandler}>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#email\">Email</label>\r\n                                <FormInput id=\"#email\"  \r\n                                    onChange={event => {\r\n                                        setEmail(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#password\">Old Password</label>\r\n                                <FormInput id=\"#password\" \r\n                                    type = \"password\"\r\n                                    onChange={event => {\r\n                                        setOldPassword(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button theme=\"info\">Update</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"social\" title=\"Password\">\r\n                        <Form className=\"subform\" onSubmit={submitPasswordUpdateHandler}>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#oldopassword\">Old Password</label>\r\n                                <FormInput id=\"#oldopassword\" \r\n                                    type = \"password\"\r\n                                    onChange={e => setOldPassword(e.target.value)} \r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#newpassword\">New Password</label>\r\n                                <FormInput id=\"#newpassword\" \r\n                                    type = \"password\" \r\n                                    onChange={e => setNewPassword(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#confirmnewpasword\">Confirm New Password</label>\r\n                                <FormInput id=\"#confirmnewpasword\" \r\n                                    type = \"password\" \r\n                                    onChange={e => setConfirmPassword(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button theme=\"info\">Update</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberEmailVerify.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberNewPassword.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberDashboard.js",["188","189","190"],"import React, { useState, useEffect } from 'react';\r\nimport CourseCard from '../Utils/CourseCard';\r\nimport SubscriberHeader from './SubscriberHeader';\r\nimport { Container, Row, Col } from 'shards-react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n\r\nimport '../styles/UserDashboard.css';\r\n\r\nexport default function SubscriberDashboard({ history }) {\r\n    \r\n    const [courses, setCourses] = useState([]);\r\n    const [status,setCourseStatus] = useState('')\r\n    const [name, setName] = useState('');\r\n\r\n    useEffect(() => {\r\n        Axios.post('/subscriber/profile').then(res => {\r\n            setName(res.data.profiledata.firstName);\r\n        }).catch(error => {\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/subscriber/login');\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        });\r\n\r\n        Axios.get('/subscriber/myCourses').then(res => {\r\n            console.log('Result : ', res.data.courseData);\r\n            setCourses(res.data.courseData);\r\n        }).catch(error => {\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/subscriber/login');\r\n            }\r\n            else\r\n            {\r\n                setCourseStatus(\"No Courses\")\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <SubscriberHeader history={history} />\r\n            <div className=\"all\">\r\n                <h1>Welcome {name}</h1>\r\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\r\n                {status}\r\n                <div className=\"main\">\r\n                    {courses.map(course => (\r\n                        <Container className=\"cc\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <CourseCard course={course} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    ))}\r\n                    ;\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorProfile.js",["191","192","193","194","195","196","197","198","199"],"import React, { useState, useEffect } from 'react';\r\nimport AuthorHeader from './AuthorHeader';\r\nimport '../styles/UserProfile.css';\r\nimport { Form, FormInput, FormGroup } from 'shards-react';\r\nimport { Button } from 'shards-react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function AuthorProfile({history}) {\r\n    const [imgStatus, setStatus] = useState('Upload Image');\r\n\r\n    const [firstName, setfirstName] = useState('First Name');\r\n    const [middleName, setmiddleName] = useState('Middle Name');\r\n    const [lastName, setlastName] = useState('Last Name');\r\n    const [phNum, setphNum] = useState('Phone Number');\r\n    const [linkedInURL, setlinkedInURL] = useState('LinkedIn URL');\r\n    const [twitterURL, settwitterURL] = useState('Twitter URL');\r\n    const [qualification, setqualification] = useState('Qaulification');\r\n    const [biography, setBiography] = useState('Biography ');\r\n\r\n    useEffect(() => {\r\n        axios.post('/author/profile').then(res => {\r\n            \r\n            setfirstName(res.data.profiledata.firstName);\r\n            setmiddleName(res.data.profiledata.middleName);\r\n            setlastName(res.data.profiledata.lastName);\r\n            setphNum(res.data.profiledata.phNum);\r\n            setlinkedInURL(res.data.profiledata.linkedInURL);\r\n            settwitterURL(res.data.profiledata.twitterURL);\r\n            setqualification(res.data.profiledata.qualification);\r\n            setBiography(res.data.profiledata.biography);\r\n        }).catch(error => {\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/author/login');\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const ImageUpload = () => {\r\n        const [file, setFile] = useState('');\r\n        const [imagePreviewUrl, setImagePreview] = useState('');\r\n\r\n        useEffect(() => {\r\n            axios.post('/author/profileImageView').then(res => {\r\n                const ext = res.data.url.slice(-2);\r\n                if (ext == 'NA') {\r\n                    setStatus('Upload Image');\r\n                } else {\r\n                    setStatus('Update Image');\r\n                }\r\n                setImagePreview(res.data.url);\r\n            }).catch(error => {\r\n                if(error.response.data.message == \"Unauthorised.\"){\r\n                    history.push('/author/login');\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        icon : 'error' ,\r\n                        text : `${error.response.data.message}`\r\n                    })\r\n                }\r\n            });\r\n        }, []);\r\n\r\n        const _handleSubmit = e => {\r\n            e.preventDefault();\r\n            // TODO: do something with -> this.state.file\r\n            console.log('handle uploading-', file);\r\n            const formData = new FormData();\r\n            formData.append('image', file);\r\n            axios({\r\n                method: 'post',\r\n                url: '/author/profileImageUpdate',\r\n                data: formData\r\n            }).then(res=>{\r\n                Swal.fire({\r\n                    icon : 'success' ,\r\n                    text : `${res.data.message}`\r\n                })\r\n            }).catch(error=>{\r\n\r\n                if(error.response.data.message == \"Unauthorised.\"){\r\n                    history.push('/author/login');\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        icon : 'error' ,\r\n                        text : `${error.response.data.message}`\r\n                    })\r\n                }\r\n            });\r\n        };\r\n\r\n        const _handleImageChange = e => {\r\n            e.preventDefault();\r\n\r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n\r\n            reader.onloadend = () => {\r\n                setFile(file);\r\n                setImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={e => _handleSubmit(e)}>\r\n                    <input className=\"ProfileImageInputButton\" type=\"file\" onChange={e => _handleImageChange(e)} />\r\n                    <Button className=\"ProfileImageSubmitButton\" type=\"submit\" onClick={e => _handleSubmit(e)}>\r\n                        {imgStatus}\r\n                    </Button>\r\n                </form>\r\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\r\n                    {imagePreviewUrl ? (\r\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\r\n                    ) : (\r\n                        <div>Please select an Image for Preview</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthorHeader history={history}/>\r\n            <div className=\"profiletab\">\r\n                <Tabs id=\"profileTab\">\r\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\r\n                        <div className=\"ProfilePic\">\r\n                            <ImageUpload />\r\n                        </div>\r\n                        <Form className=\"subform\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#firstName\">First Name</label>\r\n                                <FormInput\r\n                                    id=\"#firstName\"\r\n                                    value={firstName}\r\n                                    onChange={event => {\r\n                                        setfirstName(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#middleName\">Middle Name</label>\r\n                                <FormInput\r\n                                    id=\"#middleName\"\r\n                                    value={middleName}\r\n                                    onChange={event => {\r\n                                        setmiddleName(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#lastName\">Last Name</label>\r\n                                <FormInput\r\n                                    id=\"#lastName\"\r\n                                    value={lastName}\r\n                                    onChange={event => {\r\n                                        setlastName(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#phNum\">Phone Number</label>\r\n                                <FormInput\r\n                                    id=\"#phNum\"\r\n                                    value={phNum}\r\n                                    onChange={event => {\r\n                                        setphNum(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button\r\n                                theme=\"info\"\r\n                                onClick={() => {\r\n                                    axios\r\n                                        .post('/author/update', {\r\n                                            firstName,\r\n                                            middleName,\r\n                                            lastName,\r\n                                            phNum,\r\n                                            linkedInURL,\r\n                                            twitterURL,\r\n                                            qualification,\r\n                                            biography\r\n                                        })\r\n                                        .then(res => {\r\n                                            Swal.fire({\r\n                                                icon : 'success' ,\r\n                                                text : `${res.data.message}`\r\n                                            })\r\n                                        }).catch(error => {\r\n                                            if(error.response.data.message == \"Unauthorised.\"){\r\n                                                history.push('/author/login');\r\n                                            }\r\n                                            else\r\n                                            {\r\n                                                Swal.fire({\r\n                                                    icon : 'error' ,\r\n                                                    text : `${error.response.data.message}`\r\n                                                })\r\n                                            }\r\n                                        });\r\n                                }}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\r\n                        <Form className=\"subform\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\r\n                                <FormInput\r\n                                    id=\"#linkedInURL\"\r\n                                    value={linkedInURL}\r\n                                    onChange={event => {\r\n                                        setlinkedInURL(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\r\n                                <FormInput\r\n                                    id=\"#twitterURL\"\r\n                                    value={twitterURL}\r\n                                    onChange={event => {\r\n                                        settwitterURL(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button\r\n                                theme=\"info\"\r\n                                onClick={() => {\r\n                                    axios\r\n                                        .post('/author/update', {\r\n                                            firstName,\r\n                                            middleName,\r\n                                            lastName,\r\n                                            phNum,\r\n                                            linkedInURL,\r\n                                            twitterURL,\r\n                                            qualification,\r\n                                            biography\r\n                                        })\r\n                                        .then(res => {\r\n                                            Swal.fire({\r\n                                                icon : 'success' ,\r\n                                                text : `${res.data.message}`\r\n                                            })\r\n                                        }).catch(error => {\r\n                                            if(error.response.data.message == \"Unauthorised.\"){\r\n                                                history.push('/author/login');\r\n                                            }\r\n                                            else\r\n                                            {\r\n                                                Swal.fire({\r\n                                                    icon : 'error' ,\r\n                                                    text : `${error.response.data.message}`\r\n                                                })\r\n                                            }\r\n                                        });\r\n                                }}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"education\" title=\"Education\">\r\n                        <Form className=\"subform\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#qualification\">Qualification</label>\r\n                                <FormInput\r\n                                    id=\"#qualification\"\r\n                                    value={qualification}\r\n                                    onChange={event => {\r\n                                        setqualification(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\r\n                                <FormInput\r\n                                    id=\"#areaOfInterest\"\r\n                                    value={biography}\r\n                                    onChange={event => {\r\n                                        setBiography(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button\r\n                                theme=\"info\"\r\n                                onClick={() => {\r\n                                    axios\r\n                                        .post('/author/update', {\r\n                                            firstName,\r\n                                            middleName,\r\n                                            lastName,\r\n                                            phNum,\r\n                                            linkedInURL,\r\n                                            twitterURL,\r\n                                            qualification,\r\n                                            biography\r\n                                        })\r\n                                        .then(res => {\r\n                                            Swal.fire({\r\n                                                icon : 'success' ,\r\n                                                text : `${res.data.message}`\r\n                                            })\r\n                                        }).catch(error => {\r\n                                            if(error.response.data.message == \"Unauthorised.\"){\r\n                                                history.push('/author/login');\r\n                                            }\r\n                                            else\r\n                                            {\r\n                                                Swal.fire({\r\n                                                    icon : 'error' ,\r\n                                                    text : `${error.response.data.message}`\r\n                                                })\r\n                                            }\r\n                                        });;\r\n                                }}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorSignup.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberForgetVerify.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorVerify.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberForgetPassword.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorSettings.js",["200","201","202"],"import React,{useState} from 'react'\r\nimport AuthorHeader from \"./AuthorHeader\"\r\nimport {Tabs,Tab } from \"react-bootstrap\"\r\nimport { Form, FormInput, FormGroup } from 'shards-react';\r\nimport { Button } from 'shards-react';\r\nimport Axios from 'axios';\r\nimport Swal from \"sweetalert2\"\r\n\r\nexport default function AuthorSettings({history}) {\r\n    const [email, setEmail] = useState('');\r\n    const [oldPassword,setOldPassword] = useState('')\r\n    const [newPassword,setNewPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n       \r\n        Axios.post(\"/author/emailchange\",{\r\n            new_email: email,\r\n            password: oldPassword\r\n        }).then(res=>{\r\n            \r\n            Swal.fire({\r\n                icon : 'success' ,\r\n                text : `${res.data.message}`\r\n           })\r\n        }).catch(error=>{\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/author/login');\r\n            }\r\n            else if(error.response.data.message==\"Current email address entered.\")\r\n            {\r\n                Swal.fire({\r\n                    icon : 'info' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        })\r\n       \r\n    };\r\n\r\n    const submitPasswordUpdateHandler = e => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        if(newPassword!==confirmPassword)\r\n        {\r\n            Swal.fire({\r\n                icon : 'info' ,\r\n                text : `Passwords do not match.`\r\n           })\r\n        }\r\n        else\r\n        {\r\n            Axios.post(\"/author/passwordchange\",{\r\n                new_password: newPassword,\r\n                old_password: oldPassword\r\n            }).then(res=>{\r\n                \r\n                Swal.fire({\r\n                    icon : 'success' ,\r\n                    text : `${res.data.message}`\r\n               })\r\n            }).catch(error=>{\r\n                if(error.response.data.message == \"Unauthorised.\"){\r\n                    history.push('/author/login');\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        icon : 'error' ,\r\n                        text : `${error.response.data.message}`\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthorHeader history={history} />\r\n            <div className=\"profiletab\">\r\n                <Tabs  id=\"settingtab\">\r\n                    <Tab eventKey=\"personal\" title=\"Email\">\r\n                        <Form className=\"subform\" onSubmit={submitHandler}>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#email\">Email</label>\r\n                                <FormInput id=\"#email\" \r\n                                    onChange={event => {\r\n                                        setEmail(event.target.value);\r\n                                    }} \r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#password\">Old Password</label>\r\n                                <FormInput id=\"#password\" \r\n                                    type = \"password\"\r\n                                    onChange={event => {\r\n                                        setOldPassword(event.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button theme=\"info\">Update</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"social\" title=\"Password\">\r\n                        <Form className=\"subform\" onSubmit={submitPasswordUpdateHandler}>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#oldopassword\">Old Password</label>\r\n                                <FormInput id=\"#oldopassword\" \r\n                                    type=\"password\"\r\n                                    onChange={event => {\r\n                                        setOldPassword(event.target.value);\r\n                                    }} \r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#newpassword\">New Password</label>\r\n                                <FormInput id=\"#newpassword\" \r\n                                    type = \"password\" \r\n                                    onChange={e => setNewPassword(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"#confirmnewpasword\">Confirm New Password</label>\r\n                                <FormInput id=\"#confirmnewpasword\"  \r\n                                    type = \"password\" \r\n                                    onChange={e => setConfirmPassword(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <Button theme=\"info\">Update</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorDashboard.js",["203","204","205","206","207","208","209","210"],"import React, { useState, useEffect } from 'react';\r\nimport CourseCard from '../Utils/CourseCard';\r\nimport AuthorHeader from './AuthorHeader';\r\nimport { Container, Row, Col } from 'shards-react';\r\nimport '../styles/UserDashboard.css';\r\nimport Axios from 'axios';\r\nimport AuthorCourseCarousel from \"./AuthorCourseCarousel\"\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function AuthorDashboard({history}) {\r\n    \r\n    const [courses, setCourses] = useState([]);\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    useEffect(() => {\r\n        Axios.post('/author/profile').then(res => {\r\n            setName(res.data.profiledata.firstName);\r\n        }).catch(error => {\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/author/login');\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        });\r\n\r\n        Axios.get('/author/courses').then(res => {\r\n            console.log('Result : ', res.data.courseData);\r\n            setCourses(res.data.courseData);\r\n        }).catch(error => {\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/author/login');\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <AuthorHeader history={history}/>\r\n            <div className=\"all\">\r\n                <h1>Welcome {name}!</h1>\r\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\r\n                <AuthorCourseCarousel />\r\n                    {/* {courses.map(course => (\r\n                        <Container className=\"cc\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <CourseCard course={course} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    ))}\r\n                    ; */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\CourseView.js",["211","212","213","214"],"import React, { useEffect, useState } from 'react';\r\nimport SubscriberHeader from '../Subscriber/SubscriberHeader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/CourseView.css';\r\nimport '../styles/video-react.css'; // import css\r\nimport HLSSource from '../Utils/HLSSource';\r\nimport { Player, ControlBar, ForwardControl, ReplayControl } from 'video-react';\r\nimport { Button } from 'shards-react';\r\nimport { Collapse } from 'antd';\r\nimport { Scrollbars } from 'rc-scrollbars';\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nexport default function CourseView() {\r\n    let history = useHistory();\r\n    const [sections , setSections] = useState([])\r\n    const [playerUrl , setUrl] = useState('')\r\n    \r\n    useEffect(() => {\r\n        axios.post('/author/course/sections' , {\r\n            courseId : history.location.state.id\r\n\r\n        }).then(res => {\r\n            res.data.sections.forEach((value , index) => {\r\n                setSections(oldArray => [...oldArray, {sectionName : value.sectionName , sectionVedios : value.video}])\r\n            })\r\n        }).catch(error=>{\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/author/login');\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        })\r\n    } , [])\r\n\r\n    const Section = ({section}) => {\r\n        const { Panel } = Collapse;\r\n\r\n        return(\r\n            \r\n            <Collapse>\r\n                 <Panel header = {section.sectionName} >\r\n                {\r\n                    section.sectionVedios.map(vedio => \r\n                    <button key = {vedio.videoName} onClick = {() => {\r\n                        setUrl(`${vedio.videoURL}`)\r\n                        console.log(\"url : \" , playerUrl)\r\n                        }}>\r\n                        {vedio.videoName}\r\n                    </button>\r\n                    \r\n                    )\r\n                }\r\n                </Panel>\r\n            </Collapse>\r\n        )\r\n    }   \r\n    return (\r\n        <div>\r\n            <SubscriberHeader history={history} />\r\n            <div className=\"vidPlayerdiv\">\r\n                <h1 className=\"crvTitle\">Title</h1>\r\n\r\n                {/* If you want to use MP4 file, give a src prop to Player tag and remove HLSSoure tag || If you want to play m3u8 file, keep the HLSSource tag just change the url */}\r\n                <Player className=\"vidPlayer\"\r\n                    src = {playerUrl}\r\n                >\r\n                    {/* <HLSSource\r\n                        isVideoChild\r\n                        src=\"https://multiplatform-f.akamaihd.net/i/multi/will/bunny/big_buck_bunny_,640x360_400,640x360_700,640x360_1000,950x540_1500,.f4v.csmil/master.m3u8\"\r\n                    /> */}\r\n                    <ControlBar className=\"ctrlbar\" autoHide={true}>\r\n                        <ReplayControl seconds={10} order={2.2} />\r\n                        <ForwardControl seconds={10} order={3.2} />\r\n                    </ControlBar>\r\n                </Player>\r\n            </div>\r\n            <div  className=\"crvCollapse\"> \r\n                <Scrollbars style={{ width: 525, height: 630 }}>\r\n                    {\r\n                        sections.map(section => <Section section = {section} key={section.sectionName}/>) \r\n                    } \r\n                    \r\n                </Scrollbars>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorLogin.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorForgetVerify.js",["215"],"import React, { useEffect } from 'react';\r\nimport verify from '../Utils/verify';\r\n\r\n\r\nfunction AuthorForgetVerify({match,history}) {\r\n    \r\n \r\n     let token = match.params.token;\r\n    console.log(token);\r\n    \r\n \r\n     const submitHandler = e => {\r\n         e.preventDefault();\r\n        \r\n        if(token)\r\n        {\r\n            verify('/author/forgetpasswordverify', '/author/forgetpasswordupdate', token, history);\r\n        }\r\n     };\r\n \r\n     return (\r\n         <form onSubmit={submitHandler}>\r\n             <button>Submit</button>\r\n         </form>\r\n     );\r\n}\r\n\r\nexport default AuthorForgetVerify\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorNewPassword.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorEmailVerify.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorForgetPassword.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\CourseHome.js",["216","217","218","219","220","221","222","223","224"],"import React, { useState,useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/CourseHome.css';\r\nimport { useParams } from 'react-router';\r\nimport Header from '../Utils/Header';\r\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, CardImg, Button, Container, Row, Col } from 'shards-react';\r\nimport razorpayLogo from '../assets/razorpay.png'\r\nimport Footer1 from '../Utils/Footer';\r\nimport { Collapse } from 'antd';\r\nimport { Divider } from 'semantic-ui-react';\r\nimport HLSSource from '../Utils/HLSSource';\r\nimport Axios from 'axios';\r\nimport { Scrollbars } from 'rc-scrollbars';\r\nimport { Player, ControlBar, ForwardControl, ReplayControl } from 'video-react';\r\nimport Swal from 'sweetalert2'\r\n\r\nfunction loadScript(src) {\r\n\treturn new Promise((resolve) => {\r\n\t\tconst script = document.createElement('script')\r\n\t\tscript.src = src\r\n\t\tscript.onload = () => {\r\n\t\t\tresolve(true)\r\n\t\t}\r\n\t\tscript.onerror = () => {\r\n\t\t\tresolve(false)\r\n\t\t}\r\n\t\tdocument.body.appendChild(script)\r\n\t})\r\n}\r\nconst __DEV__ = document.domain === 'localhost'\r\nexport default function CourseHome({history}) {\r\n    \r\n    const [title,setTitle] = useState('');\r\n    const [price,setPrice] = useState(0);\r\n    const [suitableFor,setSuitableFor] = useState('');\r\n    const [description,setDescription] = useState('');\r\n    const [prerequisite,setPrerequisite] = useState([]);\r\n    const [authorName,setAuthorName] = useState('');\r\n    const [category,setCategory] = useState('');\r\n    const [courseThumbnail,setCourseThumbnail] = useState('');\r\n    const [coursePreview,setCoursePreview] = useState('');\r\n    const [sectionData , setSections] = useState([])        \r\n\r\n    let { courseTitle } = useParams();\r\n \r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n\r\n\r\n        Axios.post('/subscriber/courseHome',\r\n        {\r\n            courseTitle: courseTitle\r\n        }).then(res => {\r\n            \r\n            setTitle(res.data.title);\r\n            setPrice(res.data.price);\r\n            setSuitableFor(res.data.suitableFor);\r\n            setDescription(res.data.description);\r\n            setPrerequisite(res.data.prerequisite);\r\n            setAuthorName(res.data.authorName);\r\n            setCategory(res.data.category);\r\n            setCourseThumbnail(res.data.courseThumbnail);\r\n            setCoursePreview(res.data.coursePreview);\r\n            res.data.sectionData.forEach((value , index) => {\r\n                setSections(oldArray => [...oldArray, {sectionName : value.sectionName , sectionNumber : value.sectionNumber}])\r\n            })\r\n        }); \r\n    }, []);\r\n    \r\n    const { Panel } = Collapse;\r\n    let itemList = [];\r\n    \r\n    prerequisite.map((item,index)=>{\r\n        itemList.push( <li key={index}>{item}</li>)\r\n      })\r\n    \r\n    const Section = ({section}) => {\r\n        const { Panel } = Collapse;\r\n\r\n        return(\r\n            \r\n            <Collapse>\r\n                 <Panel header = {section.sectionName} key = {section.sectionNumber} >\r\n                {   \r\n                }\r\n                </Panel>\r\n            </Collapse>\r\n        )\r\n    } \r\n    async function DisplayRazorpay() {\r\n\t\tconst res = await loadScript('https://checkout.razorpay.com/v1/checkout.js')\r\n\r\n\t\tif (!res) {\r\n\t\t\talert('Razorpay SDK failed to load. Are you online?')\r\n\t\t\treturn\r\n\t\t}\r\n        \r\n        \r\n        Axios.post('/subscriber/payment',{\r\n            price,\r\n            courseTitle,\r\n        }).then(res=>{\r\n\r\n            \r\n            console.log(res.data);\r\n                const options = {\r\n                    key: __DEV__ ? 'rzp_test_3LqDzu8J6aTI9F' : 'PRODUCTION_KEY',\r\n                    currency: res.data.currency,//data.currency,\r\n                    amount: res.data.price,\r\n                    order_id: res.data.id,//data.id,\r\n                    name: 'Payment for course ${title}',\r\n                    description: `Course buy`,\r\n                    image: razorpayLogo,\r\n                    \r\n                    // handler: function (response) {\r\n                    //     alert(response.razorpay_payment_id)\r\n                    //     alert(response.razorpay_order_id)\r\n                    //     alert(response.razorpay_signature)\r\n                    // },\r\n                    // prefill: {\r\n                    //     name : res.data.name,\r\n                    //     email: res.data.email,\r\n                    //     contact: res.data.contact\r\n                    // }\r\n                }\r\n                const paymentObject = new window.Razorpay(options)\r\n                paymentObject.open()\r\n            \r\n            \r\n        }).catch(error=>{\r\n       \r\n            \r\n        if(error.response.data.message==\"Unauthorised.\")\r\n        {\r\n            Swal.fire({\r\n                icon : 'error' ,\r\n                text : `Your session has been expired. Kindly login again to continue.`\r\n            })\r\n            history.push(\"/subscriber/login\");\r\n        }\r\n    })}\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"topCard\">\r\n                <Card className=\"tpCard\" style={{ maxWidth: '1800px' }}>\r\n                    <CardImg className=\"crdImg\" src={courseThumbnail} />\r\n                    <CardBody>\r\n                        <CardTitle className=\"crhmCT\">{title}</CardTitle>\r\n                        <div className=\"SmallDesc\">\r\n                            <p><h6>Price: {price}</h6></p>\r\n                            <p>Author: {authorName}</p>\r\n                            <p>Category: {category}</p>\r\n                            <p>Language: English</p>\r\n                        </div>\r\n                        <Button className=\"crhmBT\" >\r\n                            View\r\n                        </Button>\r\n                        <Button className=\"WishlistButton\" onClick = {DisplayRazorpay}>Buy Now</Button>\r\n                        <Button className=\"ShareButton\">Share</Button>\r\n                    </CardBody>\r\n                </Card>\r\n                <div>\r\n                    <Card className=\"tpCard1\" style={{ maxWidth: '1800px' }}>\r\n                        <CardBody>\r\n                            <div className=\"TextDescription\">\r\n                                <h2>Description:</h2>\r\n                                {description}\r\n                                <div className=\"TextSuitableFor\">\r\n                                    <h3>Suitable For:</h3>\r\n                                    {suitableFor}\r\n                                </div>\r\n                            </div>\r\n                            <h2 className=\"H2Heading\">Course Preview:</h2>\r\n                            <div className=\"CRHMVidPlayerDiv\">\r\n                                <Player className=\"CRHMvidPlayer\"\r\n                                \r\n                                    src = {coursePreview}\r\n                                >\r\n                                    {/* <HLSSource\r\n                                        isVideoChild\r\n                                        src=\"https://multiplatform-f.akamaihd.net/i/multi/will/bunny/big_buck_bunny_,640x360_400,640x360_700,640x360_1000,950x540_1500,.f4v.csmil/master.m3u8\"\r\n                                    /> */}\r\n                                    <ControlBar className=\"ctrlbar\" autoHide={true}>\r\n                                        <ReplayControl seconds={10} order={2.2} />\r\n                                        <ForwardControl seconds={10} order={3.2} />\r\n                                    </ControlBar>\r\n                                </Player>\r\n                            </div>\r\n                            <h2 className=\"H2Heading\">What You'll Learn:</h2>\r\n\r\n                            <div className=\"TextWhatLearn\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <ul>\r\n                                                <li>Spf/Dmarc</li>\r\n                                                <li>Cookie Issues</li>\r\n                                                <li>XSS</li>\r\n                                                <li>SQLi</li>\r\n                                            </ul>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <ul>\r\n                                                <li>IDOR</li>\r\n                                                <li>Authentication Bypass</li>\r\n                                                <li>Rate Limiting</li>\r\n                                                <li>RCE</li>\r\n                                            </ul>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </div>\r\n                            <h2 className=\"H2Heading\">PreRequisites:</h2>\r\n                            <div className=\"PrereqText\">\r\n                                {itemList}\r\n                            </div>\r\n                        </CardBody>\r\n                        <CardFooter></CardFooter>\r\n                    </Card>\r\n                </div>\r\n                <h3 className=\"ContentsHeading\">Contents</h3>\r\n                 <Collapse className=\"CoHoCollaps\">\r\n                    <Scrollbars style={{ width: 525, height: 630 }}>\r\n                        {\r\n                            sectionData.map(section => <Section section = {section} key={section.sectionName}/>) \r\n                        }     \r\n                    </Scrollbars>\r\n                </Collapse>\r\n            </div>\r\n\r\n            <div>\r\n                <Footer1 />\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\UploadCourse.js",["225","226","227","228","229","230","231"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport StepProgressBar from 'react-step-progress';\r\nimport 'react-step-progress/dist/index.css';\r\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\r\nimport '../styles/UploadCourse.css';\r\nimport { Dropdown, Forms } from 'react-bootstrap';\r\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function UploadCourse() {\r\n    const [title, setTitle] = useState('Course Name');\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [suitableFor, setSuitableFor] = useState('');\r\n    const [platform, setPlatform] = useState('');\r\n    const [prerequisite, setPrerequisite] = useState('');\r\n\r\n    // setup the step content\r\n    let history = useHistory();\r\n    const step1Content = (\r\n        <div>\r\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\r\n                <CardBody>\r\n                    <CardTitle className=\"institle\">Instructions</CardTitle>\r\n                    <p>Instructions will be entered here</p>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    const step2Content = (\r\n        <div>\r\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\r\n                <CardBody>\r\n                    <div className=\"step2\">\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <label className=\"labelstep2\" htmlFor=\"name\">\r\n                                    What would you like to name your course?\r\n                                </label>\r\n\r\n                                <FormInput\r\n                                    type=\"text\"\r\n                                    id=\"title\"\r\n                                    onChange={e => setTitle(e.target.value)}\r\n                                    placeholder=\"Enter Something..\"\r\n                                ></FormInput>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label className=\"labelstep2\" htmlFor=\"desc\">\r\n                                    Give a short Description about your course!\r\n                                </label>\r\n                                <FormTextarea\r\n                                    rows=\"5\"\r\n                                    type=\"text\"\r\n                                    id=\"desc\"\r\n                                    onChange={e => setDescription(e.target.value)}\r\n                                    placeholder=\"Enter Something..\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    const step3Content = (\r\n        <div>\r\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\r\n                <CardBody>\r\n                    <div className=\"step3\">\r\n                        <label className=\"labelstep3\" htmlFor=\"dropdown\">\r\n                            Where would you categorize your course?\r\n                        </label>\r\n                        <Dropdown className=\"createdropdown\">\r\n                            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\r\n                                Choose\r\n                            </Dropdown.Toggle>\r\n                            {/* <input type=\"text\" onChange={e => setCategory(e.target.value)} /> */}\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item onClick={e=>setCategory('dev')}>Development</Dropdown.Item>\r\n                                <Dropdown.Item onClick={e=>setCategory(\"Business\")}>Business</Dropdown.Item>\r\n                                <Dropdown.Item onClick={e=>setCategory(\"Finance&Accounting\")}>Finance & Accounting</Dropdown.Item>\r\n                                <Dropdown.Item onClick={e=>setCategory(\"IT&Software\")}>IT & Software</Dropdown.Item>\r\n                                <Dropdown.Item onClick={e=>setCategory(\"Marketing\")}>Marketing</Dropdown.Item>\r\n                                <Dropdown.Item onClick={e=>setCategory(\"Photography\")}>Photography</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    const step4Content = (\r\n        <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\r\n            <CardBody>\r\n                <div className=\"step4\">\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <label className=\"labelstep4\" htmlFor=\"suit\">\r\n                                For whom this course will be suitable for?\r\n                            </label>\r\n                            <FormInput\r\n                                type=\"suit\"\r\n                                id=\"suit\"\r\n                                onChange={e => {\r\n                                    setSuitableFor(e.target.value);\r\n                                }}\r\n                                placeholder=\"Enter Something..\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label className=\"labelstep4\" htmlFor=\"platform\">\r\n                                Platform?\r\n                            </label>\r\n                            <FormInput\r\n                                type=\"text\"\r\n                                id=\"platform\"\r\n                                onChange={e => {\r\n                                    setPlatform(e.target.value);\r\n                                }}\r\n                                placeholder=\"Enter Something..\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label className=\"labelstep4\" htmlFor=\"prerequisites\">\r\n                                Any prerequisites?\r\n                            </label>\r\n                            <FormInput\r\n                                type=\"suit\"\r\n                                id=\"prerequisites\"\r\n                                onChange={e => {\r\n                                    setPrerequisite(e.target.value);\r\n                                }}\r\n                                placeholder=\"Enter Something..\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n\r\n    // setup step validators, will be called before proceeding to the next step\r\n    function step1Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function step2Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function step3Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function step4Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function onFormSubmit() {\r\n        console.log(category)\r\n        axios.post('/author/create-course', { title, description, category, suitableFor, platform, prerequisite }).then(res => {\r\n            console.log(res.data.courseId);\r\n            history.push({\r\n                pathname: '/course/create',\r\n                state: { id: res.data.courseId }\r\n            });\r\n        }).catch(error=>{\r\n            if(error.response.data.message == \"Unauthorised.\"){\r\n                history.push('/author/login');\r\n            }\r\n            else\r\n            {\r\n                Swal.fire({\r\n                    icon : 'error' ,\r\n                    text : `${error.response.data.message}`\r\n                })\r\n            }\r\n        });\r\n\r\n        //\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"createheading\">Get Started With Your Course</div>\r\n            <Button className=\"buttonexit\" theme=\"outline-danger\" href=\"/author/dashboard\">\r\n                Exit\r\n            </Button>\r\n            <StepProgressBar\r\n                className=\"stepbar\"\r\n                startingStep={0}\r\n                onSubmit={onFormSubmit}\r\n                steps={[\r\n                    {\r\n                        label: 'Step 1',\r\n                        name: 'step 1',\r\n                        content: step1Content\r\n                        // validator: step1Validator\r\n                    },\r\n                    {\r\n                        label: 'Step 2',\r\n                        name: 'step 2',\r\n                        content: step2Content\r\n                        // validator: step2Validator\r\n                    },\r\n                    {\r\n                        label: 'Step 3',\r\n                        name: 'step 3',\r\n                        content: step3Content\r\n                        // validator: step3Validator\r\n                    },\r\n                    {\r\n                        label: 'Step 4',\r\n                        name: 'step 4',\r\n                        content: step4Content\r\n                        // validator: step4Validator\r\n                    }\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Course\\CreateCourse.js",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport StepProgressBar from 'react-step-progress';\r\nimport 'react-step-progress/dist/index.css';\r\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\r\nimport '../styles/CreateCourse.css';\r\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\r\nimport { Image } from 'react-bootstrap';\r\nimport 'antd/dist/antd.css';\r\nimport { message } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { Slider } from 'antd';\r\nimport axios from 'axios';\r\nimport { Upload } from 'antd';\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function CreateCourse() {\r\n    let history = useHistory();\r\n    const [courseId, setCourseId] = useState('');\r\n    \r\n    useEffect(() => {});\r\n\r\n\r\n    const PreviewVedioUpload = () => {\r\n        const [vedioFile, setVedioFile] = useState(null);\r\n        function handelFileChange(e) {\r\n            setVedioFile(e.target.files[0]);\r\n        }\r\n        function handleSubmit() {\r\n            const formData = new FormData();\r\n            formData.append('image', vedioFile);\r\n\r\n            formData.append('courseId', history.location.state.id); //Inserting course ID maunually    \r\n            axios({\r\n                method: 'post',\r\n                url: '/author/uploadPreview',\r\n\r\n                data: formData \r\n            }).then(res=>{\r\n                Swal.fire({\r\n                    icon : 'success' ,\r\n                    text : `${res.data.message}`\r\n                })\r\n            }).catch(error=>{\r\n                if(error.response.data.message == \"Unauthorised.\"){\r\n                    history.push('/author/login');\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        icon : 'error' ,\r\n                        text : `${error.response.data.message}`\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={e => handelFileChange(e)} />\r\n                <br />\r\n                <button onClick={handleSubmit}>Upload</button>\r\n            </div>\r\n        );\r\n    };\r\n    \r\n\r\n    const ImageUpload = () => {\r\n        const [file, setFile] = useState('');\r\n        const [imagePreviewUrl, setImagePreview] = useState('');\r\n        const _handleSubmit = e => {\r\n            e.preventDefault();\r\n            console.log('handle uploading-', file);\r\n            const formData = new FormData();\r\n            formData.append('image', file);\r\n\r\n\r\n            formData.append('courseId' , history.location.state.id ) // Inserting course Id manually \r\n            axios({\r\n                method: 'post',\r\n                url: '/author/uploadThumbnail',\r\n\r\n                data: formData \r\n            }).then(res=>{\r\n                Swal.fire({\r\n                    icon : 'success' ,\r\n                    text : `${res.data.message}`\r\n                })\r\n            }).catch(error=>{\r\n                if(error.response.data.message == \"Unauthorised.\"){\r\n                    history.push('/author/login');\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        icon : 'error' ,\r\n                        text : `${error.response.data.message}`\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        const _handleImageChange = e => {\r\n            e.preventDefault();\r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n            reader.onloadend = () => {\r\n                setFile(file);\r\n                setImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        };\r\n        return (\r\n            <div>\r\n                <form onSubmit={e => _handleSubmit(e)}>\r\n                    <input type=\"file\" onChange={e => _handleImageChange(e)} />\r\n                    <button type=\"submit\" onClick={e => _handleSubmit(e)}>\r\n                        Upload Image\r\n                    </button>\r\n                </form>\r\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\r\n                    {imagePreviewUrl ? (\r\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\r\n                    ) : (\r\n                        <div>Please select an Image for Preview</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Course Thumbnail\r\n    const CourseThumbnail = () => {\r\n        const [fileList, setFileList] = useState([]);\r\n\r\n        const onChange = ({ fileList: newFileList }) => {\r\n            setFileList(newFileList);\r\n        };\r\n\r\n        const onPreview = async file => {\r\n            let src = file.url;\r\n            if (!src) {\r\n                src = await new Promise(resolve => {\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(file.originFileObj);\r\n                    reader.onload = () => resolve(reader.result);\r\n                });\r\n            }\r\n            const image = new Image();\r\n            image.src = src;\r\n            const imgWindow = window.open(src);\r\n            imgWindow.document.write(image.outerHTML);\r\n        };\r\n\r\n        return (\r\n            <ImgCrop rotate>\r\n                <Upload\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onChange={onChange}\r\n                    onPreview={onPreview}\r\n                >\r\n                    {fileList.length < 1 && '+ Upload'}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    };\r\n\r\n    // Preview Video\r\n    const previewprops = {\r\n        name: 'file',\r\n        action: 'author/uploadThumbnailPreview',\r\n        headers: {\r\n            authorization: 'authorization-text'\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n            } else if (info.file.status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n                console.log('error ; ', info);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Price Slider\r\n    class PriceSlider extends React.Component {\r\n        state = {\r\n            disabled: false\r\n        };\r\n\r\n        handleDisabledChange = disabled => {\r\n            this.setState({ disabled });\r\n        };\r\n\r\n        render() {\r\n            const { disabled } = this.state;\r\n            return (\r\n                <>\r\n                    <Slider min={500} max={5000} range defaultValue={[700, 1500]} disabled={disabled} />\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    function Section({ sectionId }) {\r\n        const [section, createSection] = useState(true);\r\n        const [sectionName, setSectionName] = useState('');\r\n\r\n        console.log('$$$$$$$$$$$$ Secid : ', sectionId);\r\n\r\n        const [fields, setFields] = useState([{ lectureName: '', lectureFile: null }]);\r\n\r\n        function handleAdd() {\r\n            const values = [...fields];\r\n            values.push({ lectureName: '', lectureFile: null });\r\n            setFields(values);\r\n        }\r\n\r\n        function handleRemove(i) {\r\n            const values = [...fields];\r\n            values.splice(i, 1);\r\n            setFields(values);\r\n        }\r\n\r\n        function handleNameChange(i, event) {\r\n            const values = [...fields];\r\n            values[i].lectureName = event.target.value;\r\n            setFields(values);\r\n        }\r\n        function handleFileChange(i, event) {\r\n            const values = [...fields];\r\n            values[i].lectureFile = event.target.files[0];\r\n            setFields(values);\r\n        }\r\n\r\n        function saveLecture(i) {\r\n            const values = [...fields];\r\n            const formData = new FormData();\r\n            formData.append('image', values[i].lectureFile);\r\n            formData.append('vedioName', `${values[i].lectureName}`);\r\n            formData.append('sectionId', `${sectionId}`);\r\n            axios({\r\n                method: 'post',\r\n                url: '/author/add-video',\r\n                data: formData\r\n            }).then(res=>{\r\n                Swal.fire({\r\n                    icon : 'success' ,\r\n                    text : `${res.data.message}`\r\n                })\r\n            }).catch(error=>{\r\n                if(error.response.data.message == \"Unauthorised.\"){\r\n                    history.push('/author/login');\r\n                }\r\n                else\r\n                {\r\n                    Swal.fire({\r\n                        icon : 'error' ,\r\n                        text : `${error.response.data.message}`\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Card className=\"CrCoCard\">\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            <h4>Section Name here</h4>\r\n                        </CardTitle>\r\n                        {fields.map((field, idx) => {\r\n                            return (\r\n                                <div key={`${field}-${idx}`}>\r\n                                    <FormInput\r\n                                        className=\"videoIp\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Lecture Name and attach file\"\r\n                                        value={field.lectureName || ''}\r\n                                        onChange={e => handleNameChange(idx, e)}\r\n                                    />\r\n                                    <FormInput\r\n                                        className=\"videoIp\"\r\n                                        type=\"file\"\r\n                                        placeholder=\"Upload File\"\r\n                                        onChange={e => handleFileChange(idx, e)}\r\n                                    />\r\n                                    <Button theme=\"success\" className=\"CrCoSaveLectureBut\" type=\"button\" onClick={() => saveLecture(idx)}>\r\n                                        Save Lecture\r\n                                    </Button>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        <Button theme=\"success\" className=\"CrCoAddLectureBut\" type=\"button\" onClick={() => handleAdd()}>\r\n                            Add Lecture\r\n                        </Button>\r\n                        <Button\r\n                            theme=\"success\"\r\n                            className=\"CrCoShowStateBut\"\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                console.log('Feilds : ', fields);\r\n                            }}\r\n                        >\r\n                            Show State\r\n                        </Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function SectionContainer() {\r\n        //  const courseId = '60040cd8ca5848206b593c67'\r\n        const [sections, setSections] = useState([{ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' }]);\r\n        const [sectionCount, setSectionCount] = useState(0);\r\n        const [name, setName] = useState('');\r\n\r\n        const saveSection = i => {\r\n            setSectionCount(sectionCount + 1);\r\n            axios\r\n                .post('/author/create-section', {\r\n                    number: sectionCount,\r\n                    sectionName: name,\r\n                    courseId: `${history.location.state.id}`\r\n                    //courseId: '6006db170db0231310bd4728'\r\n                })\r\n                .then(res => {\r\n                    const values = [...sections];\r\n                    values[i].sectionNumber = sectionCount;\r\n                    values[i].sectionSaved = true;\r\n                    values[i].sectionName = name;\r\n                    values[i].sectionId = `${res.data.sectionId}`;\r\n                    setSections(values);\r\n                })\r\n                .catch(error => {\r\n                    if(error.response.data.message == \"Unauthorised.\"){\r\n                        history.push('/author/login');\r\n                    }\r\n                    else\r\n                    {\r\n                        Swal.fire({\r\n                            icon : 'error' ,\r\n                            text : `${error.response.data.message}`\r\n                        })\r\n                    }\r\n                });\r\n        };\r\n        const addSection = () => {\r\n            setName('');\r\n            const values = [...sections];\r\n            values.push({ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' });\r\n            setSections(values);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {sections.map((section, idx) => {\r\n                    return !section.sectionSaved ? (\r\n                        <div>\r\n                            <FormInput\r\n                                className=\"videoIp\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Section Name\"\r\n                                value={name || ''}\r\n                                onChange={e => setName(e.target.value)}\r\n                            />\r\n\r\n                            <Button theme=\"success\" className=\"CrCoSaveSecBut\" type=\"button\" onClick={() => saveSection(idx)}>\r\n                                Save Section\r\n                            </Button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Section sectionId={section.sectionId} />\r\n                        </div>\r\n                    );\r\n                })}\r\n                <Button className=\"CrCoAddSectionBtn\" theme=\"success\" type=\"button\" onClick={addSection}>\r\n                    Add Section\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const step1Content = (\r\n        <div>\r\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\r\n                <CardBody>\r\n                    <div className=\"step2\">\r\n                        <Form>\r\n                            <label className=\"labelstep2\" htmlFor=\"name\">\r\n                                Section Name:\r\n                            </label>\r\n                        </Form>\r\n                    </div>\r\n                    <SectionContainer />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    const step2Content = (\r\n        <div>\r\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\r\n                <CardBody>\r\n                    <div className=\"step2\">\r\n                        Add a thumbnail and preview\r\n                        <div className=\"thumbnailUpload\">\r\n                            <h4>Thumbnail</h4>\r\n                            <ImageUpload />\r\n                        </div>\r\n                        <div className=\"previewUpload\">\r\n                            <h4>Preview</h4>\r\n\r\n                            <PreviewVedioUpload />\r\n                        </div>\r\n                        <Form>\r\n                            <FormGroup></FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    const step3Content = (\r\n        <div>\r\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\r\n                <CardBody>\r\n                    <div className=\"priceRange\">\r\n                        What price range would to like to set for your course\r\n                        <PriceSlider />\r\n                    </div>\r\n                    <Form>\r\n                        <label className=\"labelstep2\" htmlFor=\"name\">\r\n                            Would you like to add any coupons?:\r\n                        </label>\r\n                        <FormGroup>\r\n                            <FormInput type=\"text\"></FormInput>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    const step4Content = (\r\n        <div>\r\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\r\n                <CardBody>\r\n                    <div className=\"previewCourse\">Please Confirm all the data before submitting your course for preview</div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    // setup step validators, will be called before proceeding to the next step\r\n    function step1Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function step2Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function step3Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function step4Validator() {\r\n        // return a boolean\r\n    }\r\n\r\n    function onFormSubmit() {\r\n        // handle the submit logic here\r\n        // This function will be executed at the last step\r\n        // when the submit button (next button in the previous steps) is pressed\r\n        history.push('/course/create');\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {/* <AuthorHeader /> */}\r\n            <div className=\"createheader\">\r\n                <Button className=\"buttonexitc\" theme=\"outline-danger\" href=\"/author/dashboard\">\r\n                    Exit\r\n                </Button>\r\n                <div className=\"createheading\">Let's Set-up your Course!</div>\r\n                <Button className=\"buttonbackc\" theme=\"outline-danger\" href=\"/author/uploadcourse\">\r\n                    Back\r\n                </Button>\r\n            </div>\r\n            <div className=\"ui divider\"></div>\r\n            <div className=\"stepbar\">\r\n                <StepProgressBar\r\n                    startingStep={0}\r\n                    onSubmit={onFormSubmit}\r\n                    steps={[\r\n                        {\r\n                            label: 'Step 1',\r\n                            name: 'step 1',\r\n                            subtitle: 'Course Curiculam and Content',\r\n                            content: step1Content\r\n                            // validator: step1Validator\r\n                        },\r\n                        {\r\n                            label: 'Step 2',\r\n                            name: 'step 2',\r\n                            subtitle: 'Course Preview and Thumbnail',\r\n                            content: step2Content\r\n                            // validator: step2Validator\r\n                        },\r\n                        {\r\n                            label: 'Step 3',\r\n                            name: 'step 3',\r\n                            subtitle: 'Pricing and Coupons',\r\n                            content: step3Content\r\n                            // validator: step3Validator\r\n                        },\r\n                        {\r\n                            label: 'Step 4',\r\n                            name: 'step 4',\r\n                            subtitle: 'Submit for Preview',\r\n                            content: step4Content\r\n                            // validator: step4Validator\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Home.js",["252","253","254","255","256"],"import React, { useEffect, useState } from 'react';\r\nimport { Header } from './Header';\r\nimport CourseCard from './CourseCard';\r\nimport HomeCarousel from './HomeCarousel';\r\nimport Footer1 from './Footer';\r\nimport { Container, Row, Col } from 'shards-react';\r\nimport axios from 'axios';\r\nimport CarouselDemo from \"../Utils/Carousel\"\r\n\r\nexport default function Home({ history }) {\r\n\r\n    const [courses , setCourses] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get('/homePage').then(res => {\r\n           \r\n            setCourses(res.data.courseData)\r\n\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"header\">\r\n                <Header />\r\n            </div>\r\n            <HomeCarousel />\r\n\r\n            {/* <div className=\"main\">\r\n                {courses.map(course => (\r\n                    <Container className=\"cc\">\r\n                        <Row>\r\n                            <Col>\r\n                                <CourseCard course={course} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                ))}\r\n                \r\n            </div> */}\r\n            \r\n            <CarouselDemo />\r\n            <Footer1 />\r\n        </div>\r\n    );\r\n}\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberLogin.js",["257","258"],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Subscriber\\SubscriberHeader.js",["259"],"import React from 'react';\r\nimport '../styles/Header.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'shards-ui/dist/css/shards.min.css';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport logo from '../assets/CL.png';\r\nimport { Button } from 'shards-react';\r\nimport { BsPersonSquare } from 'react-icons/bs';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport {\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    FormInput,\r\n    Collapse\r\n} from 'shards-react';\r\nimport CategoriesDropdown from \"../Utils/CategoriesDropdown\"\r\nimport axios from 'axios';\r\n\r\n\r\n export default function SubscriberHeader({ history }){\r\n    return (\r\n        <div className=\"subscriberheader\">\r\n        <Navbar className=\"nav\" expand=\"md\">\r\n            <NavbarBrand>\r\n                <img src={logo}  width='90' heigh='90' />\r\n            </NavbarBrand>\r\n            <NavbarToggler />\r\n\r\n            <Collapse navbar>\r\n                <Nav navbar>\r\n                    <NavItem>\r\n                        <NavLink>\r\n                            <CategoriesDropdown />\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <Nav navbar>\r\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\">\r\n                        <InputGroupAddon type=\"prepend\">\r\n                            <InputGroupText>\r\n                                <SearchIcon />\r\n                            </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\r\n                    </InputGroup>\r\n                </Nav>\r\n            </Collapse>\r\n            <div className=\"right\">\r\n                <Collapse navbar>\r\n                <div>\r\n                    <ShoppingCartIcon fontSize=\"large\"/>\r\n                </div>\r\n                <Dropdown >\r\n                    <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\r\n                        <BsPersonSquare size=\"30\" />\r\n                    </Dropdown.Toggle>\r\n\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\r\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Button className=\"logoutbutton\" theme=\"outline-danger\" onClick={ () => {\r\n                                axios.post('/logout').then(res => {\r\n                                    console.log(res.data.message);\r\n                                    history.push('/');\r\n                                }).catch(error => {\r\n                                    console.log(error);\r\n                                });\r\n                            } }>Logout</Button>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                <div className=\"right\"></div>\r\n            </Collapse>\r\n            </div>\r\n\r\n        </Navbar>\r\n        </div>\r\n    );\r\n};\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\CourseCard.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\verify.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorHeader.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Author\\AuthorCourseCarousel.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\HLSSource.js",["260"],"import React, { Component } from 'react';\r\nimport Hls from 'hls.js';\r\nimport { BsReverseLayoutSidebarInsetReverse } from 'react-icons/bs';\r\n\r\nexport default class HLSSource extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.hls = new Hls();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // `src` is the property get from this component\r\n    // `video` is the property insert from `Video` component\r\n    // `video` is the html5 video element\r\n    const { src, video } = this.props;\r\n    // load hls video source base on hls.js\r\n    if (Hls.isSupported()) {\r\n      this.hls.loadSource(src);\r\n      this.hls.attachMedia(video);\r\n      this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n        video.play();\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    // destroy hls video source\r\n    if (this.hls) {\r\n      this.hls.destroy();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <source\r\n        src={this.props.src}\r\n        type={this.props.type || 'application/x-mpegURL'}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Carousel.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Footer.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\Header.js",["261"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/Header.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'shards-ui/dist/css/shards.min.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport logo from '../assets/CL.png';\r\nimport { Button } from 'shards-react';\r\nimport CategoriesDropdown from './CategoriesDropdown';\r\nimport {\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    FormInput,\r\n    Collapse\r\n} from 'shards-react';\r\n\r\nexport var type = \"\";\r\n\r\nexport const Header = () => {\r\n    const history = useHistory();\r\n\r\n    function loginHandleClick() {\r\n        history.push('/subscriber/login');\r\n    }\r\n    const signupHandleClick = () => {\r\n        history.push('/subscriber/signup');\r\n    };\r\n   \r\n    return (\r\n        <Navbar className=\"nav\" expand=\"md\">\r\n            <NavbarBrand>\r\n                <img src={logo} width='60' heigh='40' />\r\n            </NavbarBrand>\r\n            <NavbarToggler />\r\n\r\n            <Collapse navbar>\r\n                <Nav navbar>\r\n                    <NavItem>\r\n                        <NavLink><CategoriesDropdown /></NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n\r\n                <Nav navbar >\r\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\" >\r\n                        <InputGroupAddon  type=\"prepend\">\r\n                            <InputGroupText>\r\n                                <SearchIcon />\r\n                            </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\r\n                    </InputGroup>\r\n                </Nav>\r\n\r\n                \r\n                \r\n            </Collapse>\r\n            <div className=\"right\">\r\n                    <Button outline theme=\"info\" onClick={loginHandleClick}>\r\n                        LogIn\r\n                       \r\n\r\n                    </Button>\r\n                    <Button className=\"signupButton\" outline theme=\"info\" onClick={signupHandleClick}>\r\n                        SignUp\r\n                    </Button>\r\n                </div>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\HomeCarousel.js",[],"D:\\College\\Projects\\Celestial-learning\\CelestialLearning-client\\src\\Components\\Utils\\CategoriesDropdown.js",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":8,"column":10,"nodeType":"268","messageId":"269","endLine":8,"endColumn":16},{"ruleId":"266","severity":1,"message":"270","line":8,"column":18,"nodeType":"268","messageId":"269","endLine":8,"endColumn":25},{"ruleId":"266","severity":1,"message":"271","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":14},{"ruleId":"266","severity":1,"message":"272","line":14,"column":12,"nodeType":"268","messageId":"269","endLine":14,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":34,"column":29,"nodeType":"275","messageId":"276","endLine":34,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":43,"column":53,"nodeType":"275","messageId":"276","endLine":43,"endColumn":55},{"ruleId":"273","severity":1,"message":"274","line":72,"column":53,"nodeType":"275","messageId":"276","endLine":72,"endColumn":55},{"ruleId":"277","severity":1,"message":"278","line":106,"column":25,"nodeType":"279","endLine":106,"endColumn":96},{"ruleId":"273","severity":1,"message":"274","line":142,"column":49,"nodeType":"275","messageId":"276","endLine":142,"endColumn":51},{"ruleId":"280","severity":1,"message":"281","line":151,"column":8,"nodeType":"282","endLine":151,"endColumn":10,"suggestions":"283"},{"ruleId":"273","severity":1,"message":"274","line":199,"column":77,"nodeType":"275","messageId":"276","endLine":199,"endColumn":79},{"ruleId":"273","severity":1,"message":"274","line":242,"column":72,"nodeType":"275","messageId":"276","endLine":242,"endColumn":74},{"ruleId":"273","severity":1,"message":"274","line":291,"column":72,"nodeType":"275","messageId":"276","endLine":291,"endColumn":74},{"ruleId":"273","severity":1,"message":"274","line":28,"column":44,"nodeType":"275","messageId":"276","endLine":28,"endColumn":46},{"ruleId":"273","severity":1,"message":"274","line":31,"column":48,"nodeType":"275","messageId":"276","endLine":31,"endColumn":50},{"ruleId":"273","severity":1,"message":"274","line":72,"column":48,"nodeType":"275","messageId":"276","endLine":72,"endColumn":50},{"ruleId":"273","severity":1,"message":"274","line":20,"column":44,"nodeType":"275","messageId":"276","endLine":20,"endColumn":46},{"ruleId":"273","severity":1,"message":"274","line":36,"column":44,"nodeType":"275","messageId":"276","endLine":36,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":44,"column":8,"nodeType":"282","endLine":44,"endColumn":10,"suggestions":"284"},{"ruleId":"273","severity":1,"message":"274","line":34,"column":44,"nodeType":"275","messageId":"276","endLine":34,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":45,"column":8,"nodeType":"282","endLine":45,"endColumn":10,"suggestions":"285"},{"ruleId":"273","severity":1,"message":"274","line":54,"column":25,"nodeType":"275","messageId":"276","endLine":54,"endColumn":27},{"ruleId":"273","severity":1,"message":"274","line":61,"column":48,"nodeType":"275","messageId":"276","endLine":61,"endColumn":50},{"ruleId":"273","severity":1,"message":"274","line":91,"column":48,"nodeType":"275","messageId":"276","endLine":91,"endColumn":50},{"ruleId":"277","severity":1,"message":"278","line":127,"column":25,"nodeType":"279","endLine":127,"endColumn":96},{"ruleId":"273","severity":1,"message":"274","line":206,"column":76,"nodeType":"275","messageId":"276","endLine":206,"endColumn":78},{"ruleId":"273","severity":1,"message":"274","line":265,"column":76,"nodeType":"275","messageId":"276","endLine":265,"endColumn":78},{"ruleId":"273","severity":1,"message":"274","line":324,"column":76,"nodeType":"275","messageId":"276","endLine":324,"endColumn":78},{"ruleId":"273","severity":1,"message":"274","line":28,"column":44,"nodeType":"275","messageId":"276","endLine":28,"endColumn":46},{"ruleId":"273","severity":1,"message":"274","line":31,"column":48,"nodeType":"275","messageId":"276","endLine":31,"endColumn":50},{"ruleId":"273","severity":1,"message":"274","line":72,"column":48,"nodeType":"275","messageId":"276","endLine":72,"endColumn":50},{"ruleId":"266","severity":1,"message":"286","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":18},{"ruleId":"266","severity":1,"message":"287","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":19},{"ruleId":"266","severity":1,"message":"288","line":4,"column":21,"nodeType":"268","messageId":"269","endLine":4,"endColumn":24},{"ruleId":"266","severity":1,"message":"289","line":4,"column":26,"nodeType":"268","messageId":"269","endLine":4,"endColumn":29},{"ruleId":"266","severity":1,"message":"290","line":12,"column":12,"nodeType":"268","messageId":"269","endLine":12,"endColumn":19},{"ruleId":"273","severity":1,"message":"274","line":20,"column":44,"nodeType":"275","messageId":"276","endLine":20,"endColumn":46},{"ruleId":"273","severity":1,"message":"274","line":36,"column":44,"nodeType":"275","messageId":"276","endLine":36,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":47,"column":8,"nodeType":"282","endLine":47,"endColumn":10,"suggestions":"291"},{"ruleId":"266","severity":1,"message":"292","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":17},{"ruleId":"266","severity":1,"message":"293","line":8,"column":10,"nodeType":"268","messageId":"269","endLine":8,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":27,"column":44,"nodeType":"275","messageId":"276","endLine":27,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":38,"column":9,"nodeType":"282","endLine":38,"endColumn":11,"suggestions":"294"},{"ruleId":"266","severity":1,"message":"295","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"266","severity":1,"message":"296","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":20},{"ruleId":"266","severity":1,"message":"297","line":6,"column":16,"nodeType":"268","messageId":"269","endLine":6,"endColumn":26},{"ruleId":"266","severity":1,"message":"298","line":10,"column":10,"nodeType":"268","messageId":"269","endLine":10,"endColumn":17},{"ruleId":"266","severity":1,"message":"292","line":11,"column":8,"nodeType":"268","messageId":"269","endLine":11,"endColumn":17},{"ruleId":"280","severity":1,"message":"299","line":68,"column":8,"nodeType":"282","endLine":68,"endColumn":10,"suggestions":"300"},{"ruleId":"266","severity":1,"message":"301","line":70,"column":13,"nodeType":"268","messageId":"269","endLine":70,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":73,"column":34,"nodeType":"304","messageId":"305","endLine":73,"endColumn":36},{"ruleId":"306","severity":1,"message":"307","line":111,"column":27,"nodeType":"308","messageId":"309","endLine":111,"endColumn":56},{"ruleId":"273","severity":1,"message":"274","line":133,"column":39,"nodeType":"275","messageId":"276","endLine":133,"endColumn":41},{"ruleId":"266","severity":1,"message":"310","line":7,"column":20,"nodeType":"268","messageId":"269","endLine":7,"endColumn":25},{"ruleId":"266","severity":1,"message":"311","line":8,"column":27,"nodeType":"268","messageId":"269","endLine":8,"endColumn":34},{"ruleId":"266","severity":1,"message":"312","line":149,"column":14,"nodeType":"268","messageId":"269","endLine":149,"endColumn":28},{"ruleId":"266","severity":1,"message":"313","line":153,"column":14,"nodeType":"268","messageId":"269","endLine":153,"endColumn":28},{"ruleId":"266","severity":1,"message":"314","line":157,"column":14,"nodeType":"268","messageId":"269","endLine":157,"endColumn":28},{"ruleId":"266","severity":1,"message":"315","line":161,"column":14,"nodeType":"268","messageId":"269","endLine":161,"endColumn":28},{"ruleId":"273","severity":1,"message":"274","line":174,"column":44,"nodeType":"275","messageId":"276","endLine":174,"endColumn":46},{"ruleId":"266","severity":1,"message":"316","line":5,"column":38,"nodeType":"268","messageId":"269","endLine":5,"endColumn":50},{"ruleId":"266","severity":1,"message":"311","line":7,"column":27,"nodeType":"268","messageId":"269","endLine":7,"endColumn":34},{"ruleId":"266","severity":1,"message":"317","line":20,"column":12,"nodeType":"268","messageId":"269","endLine":20,"endColumn":20},{"ruleId":"266","severity":1,"message":"318","line":20,"column":22,"nodeType":"268","messageId":"269","endLine":20,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":46,"column":48,"nodeType":"275","messageId":"276","endLine":46,"endColumn":50},{"ruleId":"273","severity":1,"message":"274","line":90,"column":48,"nodeType":"275","messageId":"276","endLine":90,"endColumn":50},{"ruleId":"277","severity":1,"message":"278","line":124,"column":25,"nodeType":"279","endLine":124,"endColumn":96},{"ruleId":"266","severity":1,"message":"319","line":134,"column":11,"nodeType":"268","messageId":"269","endLine":134,"endColumn":26},{"ruleId":"266","severity":1,"message":"320","line":172,"column":11,"nodeType":"268","messageId":"269","endLine":172,"endColumn":23},{"ruleId":"266","severity":1,"message":"321","line":212,"column":16,"nodeType":"268","messageId":"269","endLine":212,"endColumn":23},{"ruleId":"266","severity":1,"message":"322","line":212,"column":25,"nodeType":"268","messageId":"269","endLine":212,"endColumn":38},{"ruleId":"266","severity":1,"message":"323","line":213,"column":16,"nodeType":"268","messageId":"269","endLine":213,"endColumn":27},{"ruleId":"266","severity":1,"message":"324","line":213,"column":29,"nodeType":"268","messageId":"269","endLine":213,"endColumn":43},{"ruleId":"266","severity":1,"message":"325","line":225,"column":18,"nodeType":"268","messageId":"269","endLine":225,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":258,"column":48,"nodeType":"275","messageId":"276","endLine":258,"endColumn":50},{"ruleId":"273","severity":1,"message":"274","line":343,"column":52,"nodeType":"275","messageId":"276","endLine":343,"endColumn":54},{"ruleId":"266","severity":1,"message":"312","line":465,"column":14,"nodeType":"268","messageId":"269","endLine":465,"endColumn":28},{"ruleId":"266","severity":1,"message":"313","line":469,"column":14,"nodeType":"268","messageId":"269","endLine":469,"endColumn":28},{"ruleId":"266","severity":1,"message":"314","line":473,"column":14,"nodeType":"268","messageId":"269","endLine":473,"endColumn":28},{"ruleId":"266","severity":1,"message":"315","line":477,"column":14,"nodeType":"268","messageId":"269","endLine":477,"endColumn":28},{"ruleId":"266","severity":1,"message":"286","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":18},{"ruleId":"266","severity":1,"message":"287","line":6,"column":10,"nodeType":"268","messageId":"269","endLine":6,"endColumn":19},{"ruleId":"266","severity":1,"message":"288","line":6,"column":21,"nodeType":"268","messageId":"269","endLine":6,"endColumn":24},{"ruleId":"266","severity":1,"message":"289","line":6,"column":26,"nodeType":"268","messageId":"269","endLine":6,"endColumn":29},{"ruleId":"266","severity":1,"message":"290","line":12,"column":12,"nodeType":"268","messageId":"269","endLine":12,"endColumn":19},{"ruleId":"326","severity":1,"message":"327","line":81,"column":17,"nodeType":"279","endLine":81,"endColumn":38},{"ruleId":"328","severity":1,"message":"329","line":81,"column":17,"nodeType":"279","endLine":81,"endColumn":38},{"ruleId":"277","severity":1,"message":"278","line":33,"column":17,"nodeType":"279","endLine":33,"endColumn":58},{"ruleId":"266","severity":1,"message":"330","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":44},{"ruleId":"277","severity":1,"message":"278","line":39,"column":17,"nodeType":"279","endLine":39,"endColumn":57},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"no-unused-vars","'Upload' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'Avatar' is defined but never used.","'url' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["333"],["334"],["335"],"'CourseCard' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'courses' is assigned a value but never used.",["336"],"'HLSSource' is defined but never used.","'Button' is defined but never used.",["337"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'courseTitle'. Either include it or remove the dependency array.",["338"],"'Panel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Forms' is defined but never used.","'CardImg' is defined but never used.","'step1Validator' is defined but never used.","'step2Validator' is defined but never used.","'step3Validator' is defined but never used.","'step4Validator' is defined but never used.","'FormTextarea' is defined but never used.","'courseId' is assigned a value but never used.","'setCourseId' is assigned a value but never used.","'CourseThumbnail' is assigned a value but never used.","'previewprops' is assigned a value but never used.","'section' is assigned a value but never used.","'createSection' is assigned a value but never used.","'sectionName' is assigned a value but never used.","'setSectionName' is assigned a value but never used.","'handleRemove' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'BsReverseLayoutSidebarInsetReverse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"339","fix":"341"},{"desc":"339","fix":"342"},{"desc":"339","fix":"343"},{"desc":"339","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [history]",{"range":"347","text":"348"},{"range":"349","text":"348"},{"range":"350","text":"348"},{"range":"351","text":"348"},{"range":"352","text":"348"},"Update the dependencies array to be: [courseTitle]",{"range":"353","text":"354"},[5840,5842],"[history]",[1465,1467],[1919,1921],[1542,1544],[1453,1455],[2585,2587],"[courseTitle]"]
=======
[{"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js":"1","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js":"2","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"3","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"4","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"5","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"6","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"7","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"8","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"9","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js":"10","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"11","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"12","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"13","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"14","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js":"15","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourses.js":"16","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"17","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js":"18","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/UploadCourse.js":"19","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseHome.js":"20","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseView.js":"21","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CreateCourse.js":"22","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"23","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js":"24","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HLSSource.js":"25","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Footer.js":"26","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js":"27","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HomeCarousel.js":"28","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"29","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Carousel.js":"30","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js":"31","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/plugin.js":"32","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberNewPassword.js":"33","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetVerify.js":"34","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberEmailVerify.js":"35","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/verify.js":"36","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourseCarousel.js":"37","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorNewPassword.js":"38","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorEmailVerify.js":"39","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetVerify.js":"40","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberCourseCarousel.js":"41"},{"size":230,"mtime":1612945895749,"results":"42","hashOfConfig":"43"},{"size":4619,"mtime":1612945895717,"results":"44","hashOfConfig":"43"},{"size":540,"mtime":1612945895749,"results":"45","hashOfConfig":"43"},{"size":14329,"mtime":1612945895749,"results":"46","hashOfConfig":"43"},{"size":4306,"mtime":1612945895749,"results":"47","hashOfConfig":"43"},{"size":2970,"mtime":1612945895749,"results":"48","hashOfConfig":"43"},{"size":1878,"mtime":1613026182088,"results":"49","hashOfConfig":"43"},{"size":5480,"mtime":1612945895749,"results":"50","hashOfConfig":"43"},{"size":2884,"mtime":1612945895733,"results":"51","hashOfConfig":"43"},{"size":2098,"mtime":1612945895749,"results":"52","hashOfConfig":"43"},{"size":487,"mtime":1612945895745,"results":"53","hashOfConfig":"43"},{"size":2232,"mtime":1612947163990,"results":"54","hashOfConfig":"43"},{"size":4298,"mtime":1612945895733,"results":"55","hashOfConfig":"43"},{"size":15719,"mtime":1612945903652,"results":"56","hashOfConfig":"43"},{"size":2110,"mtime":1612945895733,"results":"57","hashOfConfig":"43"},{"size":1101,"mtime":1612716352866,"results":"58","hashOfConfig":"43"},{"size":5497,"mtime":1612945895733,"results":"59","hashOfConfig":"43"},{"size":1024,"mtime":1613026449890,"results":"60","hashOfConfig":"43"},{"size":9082,"mtime":1613028300874,"results":"61","hashOfConfig":"43"},{"size":9513,"mtime":1613025943857,"results":"62","hashOfConfig":"43"},{"size":3459,"mtime":1612945895745,"results":"63","hashOfConfig":"43"},{"size":19125,"mtime":1612945895745,"results":"64","hashOfConfig":"43"},{"size":3168,"mtime":1612976785985,"results":"65","hashOfConfig":"43"},{"size":854,"mtime":1612196117438,"results":"66","hashOfConfig":"43"},{"size":1002,"mtime":1611222507451,"results":"67","hashOfConfig":"43"},{"size":2572,"mtime":1610199668202,"results":"68","hashOfConfig":"43"},{"size":2236,"mtime":1612625826548,"results":"69","hashOfConfig":"43"},{"size":1122,"mtime":1611937471335,"results":"70","hashOfConfig":"43"},{"size":3045,"mtime":1613028333768,"results":"71","hashOfConfig":"43"},{"size":3503,"mtime":1613026451718,"results":"72","hashOfConfig":"43"},{"size":943,"mtime":1609913331761,"results":"73","hashOfConfig":"43"},{"size":129,"mtime":1612715287774,"results":"74","hashOfConfig":"43"},{"size":3180,"mtime":1612945895749,"results":"75","hashOfConfig":"43"},{"size":572,"mtime":1612945895749,"results":"76","hashOfConfig":"43"},{"size":516,"mtime":1612945895749,"results":"77","hashOfConfig":"43"},{"size":740,"mtime":1612716352894,"results":"78","hashOfConfig":"43"},{"size":3501,"mtime":1612976358825,"results":"79","hashOfConfig":"43"},{"size":3156,"mtime":1612945895733,"results":"80","hashOfConfig":"43"},{"size":524,"mtime":1612945895725,"results":"81","hashOfConfig":"43"},{"size":578,"mtime":1612945895733,"results":"82","hashOfConfig":"43"},{"size":3497,"mtime":1613026158336,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"pm8yb6",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js",[],["179","180"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",["181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { useState, useEffect } from 'react';\nimport SubscriberHeader from './SubscriberHeader';\nimport '../styles/UserProfile.css';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { Upload, message } from 'antd';\nimport Avatar from 'react-avatar';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\nexport default function SubscriberProfile({ history }) {\n    const [url, setUrl] = useState('');\n    const [imgStatus, setStatus] = useState('Upload Image');\n    const [firstName, setfirstName] = useState('First Name');\n    const [middleName, setmiddleName] = useState('Middle Name');\n    const [lastName, setlastName] = useState('Last Name');\n    const [phNum, setphNum] = useState('Phone Number');\n    const [linkedInURL, setlinkedInURL] = useState('LinkedIn URL');\n    const [twitterURL, settwitterURL] = useState('Twitter URL');\n    const [higherEducation, sethigherEducation] = useState('Higher Education');\n    const [areaOfInterest, setareaOfInterest] = useState('Area Of Interest');\n\n    const ImageUpload = () => {\n        const [file, setFile] = useState('');\n        const [imagePreviewUrl, setImagePreview] = useState('');\n\n        useEffect(() => {\n            axios\n                .post('/subscriber/profileImageView')\n                .then(res => {\n                    const ext = res.data.url.slice(-2);\n                    if (ext == 'NA') {\n                        setStatus('Upload Image');\n                    } else {\n                        setStatus('Update Image');\n                    }\n                    setImagePreview(res.data.url);\n\n                })\n                .catch(error => {\n                    if (error.response.data.message == 'Unauthorised.') {\n                        history.push('/subscriber/login');\n                    } else {\n                        Swal.fire({\n                            icon: 'error',\n                            text: `${error.response.data.message}`\n                        });\n                    }\n                });\n        }, []);\n\n        const _handleSubmit = e => {\n            e.preventDefault();\n            // TODO: do something with -> this.state.file\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n            axios({\n                method: 'post',\n                url: '/subscriber/profileImageUpdate',\n                data: formData\n            })\n                .then(res => {\n                    Swal.fire({\n                        icon: 'success',\n                        text: `${res.data.message}`\n                    });\n                })\n                .catch(error => {\n                    if (error.response.data.message == 'Unauthorised.') {\n                        history.push('/subscriber/login');\n                    } else {\n                        Swal.fire({\n                            icon: 'error',\n                            text: `${error.response.data.message}`\n                        });\n                    }\n                });\n        };\n\n        const _handleImageChange = e => {\n            e.preventDefault();\n\n            let reader = new FileReader();\n            let file = e.target.files[0];\n\n            reader.onloadend = () => {\n                setFile(file);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        };\n\n        return (\n            <div>\n                <form onSubmit={e => _handleSubmit(e)}>\n                    <input className=\"ProfileImageInputButton\" type=\"file\" onChange={e => _handleImageChange(e)} />\n                    <Button className=\"ProfileImageSubmitButton\" type=\"submit\" onClick={e => _handleSubmit(e)}>\n                        {imgStatus}\n                    </Button>\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    useEffect(() => {\n        Axios.post('/subscriber/profile')\n            .then(res => {\n                console.log('Response Invalid: ', res);\n                setUrl(res.data.url);\n                console.log('Project : ', res.data);\n                const {\n                    firstName,\n                    middleName,\n                    lastName,\n                    phNum,\n                    linkedInURL,\n                    twitterURL,\n                    higherEducation,\n                    areaOfInterest\n                } = res.data.profiledata;\n\n                setfirstName(firstName);\n                setmiddleName(middleName);\n                setlastName(lastName);\n                setphNum(phNum);\n                setlinkedInURL(linkedInURL);\n                settwitterURL(twitterURL);\n                sethigherEducation(higherEducation);\n                setareaOfInterest(areaOfInterest);\n            })\n            .catch(error => {\n                if (error.response.data.message == 'Unauthorised.') {\n                    history.push('/subscriber/login');\n                } else {\n                    Swal.fire({\n                        icon: 'error',\n                        text: `${error.response.data.message}`\n                    });\n                }\n            });\n    }, []);\n\n    return (\n        <div>\n            <SubscriberHeader history={history} />\n            <div>\n                <Tabs id=\"profileTab\" className=\"profiletab\">\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\n                        <div className=\"ProfilePic\">\n                            <ImageUpload />\n                        </div>\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#firstName\">First Name</label>\n                                <FormInput id=\"#firstName\" value={firstName} onChange={e => setfirstName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#middleName\">Middle Name</label>\n                                <FormInput id=\"#middleName\" value={middleName} onChange={e => setmiddleName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#lastName\">Last Name</label>\n                                <FormInput id=\"#lastName\" value={lastName} onChange={e => setlastName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#phNum\">Phone Number</label>\n                                <FormInput id=\"#phNum\" value={phNum} onChange={e => setphNum(e.target.value)} />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    Axios.post('/subscriber/update', {\n                                        firstName,\n                                        middleName,\n                                        lastName,\n                                        phNum,\n                                        linkedInURL,\n                                        twitterURL,\n                                        higherEducation,\n                                        areaOfInterest\n                                    })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon: 'success',\n                                                text: `${res.data.message}`\n                                            });\n                                        })\n                                        .catch(error => {\n                                            if (error.response.data.message == 'Unauthorised.') {\n                                                history.push('/subscriber/login');\n                                            } else {\n                                                Swal.fire({\n                                                    icon: 'error',\n                                                    text: `${error.response.data.message}`\n                                                });\n                                            }\n                                        });\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\n                                <FormInput id=\"#linkedInURL\" value={linkedInURL} onChange={e => setlinkedInURL(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\n                                <FormInput id=\"#twitterURL\" value={twitterURL} onChange={e => settwitterURL(e.target.value)} />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    Axios.post('/subscriber/update', {\n                                        firstName,\n                                        middleName,\n                                        lastName,\n                                        phNum,\n                                        linkedInURL,\n                                        twitterURL,\n                                        higherEducation,\n                                        areaOfInterest\n                                    }).then(res => {\n                                        Swal.fire({\n                                        icon : 'success' ,\n                                        text : `${res.data.message}`\n                                        })\n                                    }).catch(error => {\n                                        if(error.response.data.message == \"Unauthorised.\"){\n                                            history.push('/subscriber/login');\n                                        }\n                                        else\n                                        {\n                                            Swal.fire({\n                                                icon : 'error' ,\n                                                text : `${error.response.data.message}`\n                                            })\n                                        }\n                                    });;\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"education\" title=\"Education\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#higherEducation\">Higher Education</label>\n                                <FormInput\n                                    id=\"#higherEducation\"\n                                    value={higherEducation}\n                                    onChange={e => sethigherEducation(e.target.value)}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\n                                <FormInput id=\"#areaOfInterest\" value={areaOfInterest} onChange={e => setareaOfInterest(e.target.value)} />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    Axios.post('/subscriber/update', {\n                                        firstName,\n                                        middleName,\n                                        lastName,\n                                        phNum,\n                                        linkedInURL,\n                                        twitterURL,\n                                        higherEducation,\n                                        areaOfInterest\n                                    }).then(res => {\n                                        Swal.fire({\n                                            icon : 'success' ,\n                                            text : `${res.data.message}`\n                                        })\n                                    }).catch(error => {\n                                        if(error.response.data.message == \"Unauthorised.\"){\n                                            history.push('/subscriber/login');\n                                        }\n                                        else\n                                        {\n                                            Swal.fire({\n                                                icon : 'error' ,\n                                                text : `${error.response.data.message}`\n                                            })\n                                        }\n                                    });;\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",["194","195","196","197","198","199","200","201"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",["202","203","204"],"import React, { useState } from 'react'\nimport SubscriberHeader from \"./SubscriberHeader\"\nimport {Tabs,Tab } from \"react-bootstrap\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport Axios from 'axios';\nimport Swal from \"sweetalert2\"\n\nexport default function SubscriberSettings({history}) {\n\n    const [email, setEmail] = useState('');\n    const [oldPassword,setOldPassword] = useState('')\n    const [newPassword,setNewPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const submitHandler = e => {\n        e.preventDefault();\n        //dispatch(login(email, password));\n        Axios.post(\"/subscriber/emailchange\",{\n            new_email: email,\n            password: oldPassword\n        }).then(res=>{\n            \n            Swal.fire({\n                icon : 'success' ,\n                text : `${res.data.message}`\n           })\n        }).catch(error=>{\n            if(error.response.data.message == \"Unauthorised.\"){\n                history.push('/subscriber/login');\n            }\n            else if(error.response.data.message==\"Current email address entered.\")\n            {\n                Swal.fire({\n                    icon : 'info' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        })\n       \n    };\n\n    const submitPasswordUpdateHandler = e => {\n        e.preventDefault();\n        \n        \n        if(newPassword!==confirmPassword)\n        {\n            Swal.fire({\n                icon : 'info' ,\n                text : `Passwords do not match.`\n           })\n        }\n        else\n        {\n            Axios.post(\"/subscriber/passwordchange\",{\n                new_password: newPassword,\n                old_password: oldPassword\n            }).then(res=>{\n                \n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n               })\n            }).catch(error=>{\n                if(error.response.data.message == \"Unauthorised.\"){\n                    history.push('/subscriber/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            })\n        }\n        \n       \n    }\n\n\n    return (\n        <div>\n            <SubscriberHeader history={history}/>\n            <div className=\"profiletab\">\n                <Tabs  id=\"settingtab\">\n                    <Tab eventKey=\"personal\" title=\"Email\">\n                        <Form className=\"subform\" onSubmit={submitHandler}>\n                            <FormGroup>\n                                <label htmlFor=\"#email\">Email</label>\n                                <FormInput id=\"#email\"  \n                                    onChange={event => {\n                                        setEmail(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#password\">Old Password</label>\n                                <FormInput id=\"#password\" \n                                    type = \"password\"\n                                    onChange={event => {\n                                        setOldPassword(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button theme=\"info\">Update</Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Password\">\n                        <Form className=\"subform\" onSubmit={submitPasswordUpdateHandler}>\n                            <FormGroup>\n                                <label htmlFor=\"#oldopassword\">Old Password</label>\n                                <FormInput id=\"#oldopassword\" \n                                    type = \"password\"\n                                    onChange={e => setOldPassword(e.target.value)} \n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#newpassword\">New Password</label>\n                                <FormInput id=\"#newpassword\" \n                                    type = \"password\" \n                                    onChange={e => setNewPassword(e.target.value)}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#confirmnewpasword\">Confirm New Password</label>\n                                <FormInput id=\"#confirmnewpasword\" \n                                    type = \"password\" \n                                    onChange={e => setConfirmPassword(e.target.value)}\n                                />\n                            </FormGroup>\n                            <Button theme=\"info\">Update</Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    )\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",["205","206","207","208","209","210","211","212"],"import React, { useState, useEffect } from 'react';\nimport CourseCard from '../Utils/CourseCard';\nimport AuthorHeader from './AuthorHeader';\nimport { Container, Row, Col } from 'shards-react';\nimport '../styles/UserDashboard.css';\nimport Axios from 'axios';\nimport AuthorCourseCarousel from \"./AuthorCourseCarousel\"\nimport Swal from 'sweetalert2'\n\nexport default function AuthorDashboard({history}) {\n    \n    const [courses, setCourses] = useState([]);\n\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        Axios.post('/author/profile').then(res => {\n            setName(res.data.profiledata.firstName);\n        }).catch(error => {\n            if(error.response.data.message == \"Unauthorised.\"){\n                history.push('/author/login');\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        });\n\n        Axios.get('/author/courses').then(res => {\n            console.log('Result : ', res.data.courseData);\n            setCourses(res.data.courseData);\n        }).catch(error => {\n            if(error.response.data.message == \"Unauthorised.\"){\n                history.push('/author/login');\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        });\n    }, []);\n\n    return (\n        <div>\n            <AuthorHeader history={history}/>\n            <div className=\"all\">\n                <h1>Welcome {name}!</h1>\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\n                <AuthorCourseCarousel />\n                    {/* {courses.map(course => (\n                        <Container className=\"cc\">\n                            <Row>\n                                <Col>\n                                    <CourseCard course={course} />\n                                </Col>\n                            </Row>\n                        </Container>\n                    ))}\n                    ; */}\n            </div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js",["213","214","215","216","217","218","219","220","221"],"import React, { useState, useEffect } from 'react';\nimport AuthorHeader from './AuthorHeader';\nimport '../styles/UserProfile.css';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'\n\nexport default function AuthorProfile({history}) {\n    const [imgStatus, setStatus] = useState('Upload Image');\n\n    const [firstName, setfirstName] = useState('First Name');\n    const [middleName, setmiddleName] = useState('Middle Name');\n    const [lastName, setlastName] = useState('Last Name');\n    const [phNum, setphNum] = useState('Phone Number');\n    const [linkedInURL, setlinkedInURL] = useState('LinkedIn URL');\n    const [twitterURL, settwitterURL] = useState('Twitter URL');\n    const [qualification, setqualification] = useState('Qaulification');\n    const [biography, setBiography] = useState('Biography ');\n\n    useEffect(() => {\n        axios.post('/author/profile').then(res => {\n            \n            setfirstName(res.data.profiledata.firstName);\n            setmiddleName(res.data.profiledata.middleName);\n            setlastName(res.data.profiledata.lastName);\n            setphNum(res.data.profiledata.phNum);\n            setlinkedInURL(res.data.profiledata.linkedInURL);\n            settwitterURL(res.data.profiledata.twitterURL);\n            setqualification(res.data.profiledata.qualification);\n            setBiography(res.data.profiledata.biography);\n        }).catch(error => {\n            if(error.response.data.message == \"Unauthorised.\"){\n                history.push('/author/login');\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        });\n    }, []);\n\n    const ImageUpload = () => {\n        const [file, setFile] = useState('');\n        const [imagePreviewUrl, setImagePreview] = useState('');\n\n        useEffect(() => {\n            axios.post('/author/profileImageView').then(res => {\n                const ext = res.data.url.slice(-2);\n                if (ext == 'NA') {\n                    setStatus('Upload Image');\n                } else {\n                    setStatus('Update Image');\n                }\n                setImagePreview(res.data.url);\n            }).catch(error => {\n                if(error.response.data.message == \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            });\n        }, []);\n\n        const _handleSubmit = e => {\n            e.preventDefault();\n            // TODO: do something with -> this.state.file\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n            axios({\n                method: 'post',\n                url: '/author/profileImageUpdate',\n                data: formData\n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n\n                if(error.response.data.message == \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            });\n        };\n\n        const _handleImageChange = e => {\n            e.preventDefault();\n\n            let reader = new FileReader();\n            let file = e.target.files[0];\n\n            reader.onloadend = () => {\n                setFile(file);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        };\n\n        return (\n            <div>\n                <form onSubmit={e => _handleSubmit(e)}>\n                    <input className=\"ProfileImageInputButton\" type=\"file\" onChange={e => _handleImageChange(e)} />\n                    <Button className=\"ProfileImageSubmitButton\" type=\"submit\" onClick={e => _handleSubmit(e)}>\n                        {imgStatus}\n                    </Button>\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <AuthorHeader history={history}/>\n            <div className=\"profiletab\">\n                <Tabs id=\"profileTab\">\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\n                        <div className=\"ProfilePic\">\n                            <ImageUpload />\n                        </div>\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#firstName\">First Name</label>\n                                <FormInput\n                                    id=\"#firstName\"\n                                    value={firstName}\n                                    onChange={event => {\n                                        setfirstName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#middleName\">Middle Name</label>\n                                <FormInput\n                                    id=\"#middleName\"\n                                    value={middleName}\n                                    onChange={event => {\n                                        setmiddleName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#lastName\">Last Name</label>\n                                <FormInput\n                                    id=\"#lastName\"\n                                    value={lastName}\n                                    onChange={event => {\n                                        setlastName(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#phNum\">Phone Number</label>\n                                <FormInput\n                                    id=\"#phNum\"\n                                    value={phNum}\n                                    onChange={event => {\n                                        setphNum(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon : 'success' ,\n                                                text : `${res.data.message}`\n                                            })\n                                        }).catch(error => {\n                                            if(error.response.data.message == \"Unauthorised.\"){\n                                                history.push('/author/login');\n                                            }\n                                            else\n                                            {\n                                                Swal.fire({\n                                                    icon : 'error' ,\n                                                    text : `${error.response.data.message}`\n                                                })\n                                            }\n                                        });\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\n                                <FormInput\n                                    id=\"#linkedInURL\"\n                                    value={linkedInURL}\n                                    onChange={event => {\n                                        setlinkedInURL(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\n                                <FormInput\n                                    id=\"#twitterURL\"\n                                    value={twitterURL}\n                                    onChange={event => {\n                                        settwitterURL(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon : 'success' ,\n                                                text : `${res.data.message}`\n                                            })\n                                        }).catch(error => {\n                                            if(error.response.data.message == \"Unauthorised.\"){\n                                                history.push('/author/login');\n                                            }\n                                            else\n                                            {\n                                                Swal.fire({\n                                                    icon : 'error' ,\n                                                    text : `${error.response.data.message}`\n                                                })\n                                            }\n                                        });\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"education\" title=\"Education\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#qualification\">Qualification</label>\n                                <FormInput\n                                    id=\"#qualification\"\n                                    value={qualification}\n                                    onChange={event => {\n                                        setqualification(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\n                                <FormInput\n                                    id=\"#areaOfInterest\"\n                                    value={biography}\n                                    onChange={event => {\n                                        setBiography(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button\n                                theme=\"info\"\n                                onClick={() => {\n                                    axios\n                                        .post('/author/update', {\n                                            firstName,\n                                            middleName,\n                                            lastName,\n                                            phNum,\n                                            linkedInURL,\n                                            twitterURL,\n                                            qualification,\n                                            biography\n                                        })\n                                        .then(res => {\n                                            Swal.fire({\n                                                icon : 'success' ,\n                                                text : `${res.data.message}`\n                                            })\n                                        }).catch(error => {\n                                            if(error.response.data.message == \"Unauthorised.\"){\n                                                history.push('/author/login');\n                                            }\n                                            else\n                                            {\n                                                Swal.fire({\n                                                    icon : 'error' ,\n                                                    text : `${error.response.data.message}`\n                                                })\n                                            }\n                                        });;\n                                }}\n                            >\n                                Update\n                            </Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourses.js",[],["222","223"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js",["224","225","226"],"import React,{useState} from 'react'\nimport AuthorHeader from \"./AuthorHeader\"\nimport {Tabs,Tab } from \"react-bootstrap\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport Axios from 'axios';\nimport Swal from \"sweetalert2\"\n\nexport default function AuthorSettings({history}) {\n    const [email, setEmail] = useState('');\n    const [oldPassword,setOldPassword] = useState('')\n    const [newPassword,setNewPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const submitHandler = e => {\n        e.preventDefault();\n       \n        Axios.post(\"/author/emailchange\",{\n            new_email: email,\n            password: oldPassword\n        }).then(res=>{\n            \n            Swal.fire({\n                icon : 'success' ,\n                text : `${res.data.message}`\n           })\n        }).catch(error=>{\n            if(error.response.data.message == \"Unauthorised.\"){\n                history.push('/author/login');\n            }\n            else if(error.response.data.message==\"Current email address entered.\")\n            {\n                Swal.fire({\n                    icon : 'info' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        })\n       \n    };\n\n    const submitPasswordUpdateHandler = e => {\n        e.preventDefault();\n        \n        \n        if(newPassword!==confirmPassword)\n        {\n            Swal.fire({\n                icon : 'info' ,\n                text : `Passwords do not match.`\n           })\n        }\n        else\n        {\n            Axios.post(\"/author/passwordchange\",{\n                new_password: newPassword,\n                old_password: oldPassword\n            }).then(res=>{\n                \n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n               })\n            }).catch(error=>{\n                if(error.response.data.message == \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            })\n        }\n        \n       \n    }\n\n    return (\n        <div>\n            <AuthorHeader history={history} />\n            <div className=\"profiletab\">\n                <Tabs  id=\"settingtab\">\n                    <Tab eventKey=\"personal\" title=\"Email\">\n                        <Form className=\"subform\" onSubmit={submitHandler}>\n                            <FormGroup>\n                                <label htmlFor=\"#email\">Email</label>\n                                <FormInput id=\"#email\" \n                                    onChange={event => {\n                                        setEmail(event.target.value);\n                                    }} \n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#password\">Old Password</label>\n                                <FormInput id=\"#password\" \n                                    type = \"password\"\n                                    onChange={event => {\n                                        setOldPassword(event.target.value);\n                                    }}\n                                />\n                            </FormGroup>\n                            <Button theme=\"info\">Update</Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Password\">\n                        <Form className=\"subform\" onSubmit={submitPasswordUpdateHandler}>\n                            <FormGroup>\n                                <label htmlFor=\"#oldopassword\">Old Password</label>\n                                <FormInput id=\"#oldopassword\" \n                                    type=\"password\"\n                                    onChange={event => {\n                                        setOldPassword(event.target.value);\n                                    }} \n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#newpassword\">New Password</label>\n                                <FormInput id=\"#newpassword\" \n                                    type = \"password\" \n                                    onChange={e => setNewPassword(e.target.value)}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#confirmnewpasword\">Confirm New Password</label>\n                                <FormInput id=\"#confirmnewpasword\"  \n                                    type = \"password\" \n                                    onChange={e => setConfirmPassword(e.target.value)}\n                                />\n                            </FormGroup>\n                            <Button theme=\"info\">Update</Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    )\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js",["227","228","229","230","231"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/UploadCourse.js",["232","233","234","235","236","237","238"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseHome.js",["239","240","241","242","243","244","245","246","247"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseView.js",["248","249","250","251"],"import React, { useEffect, useState } from 'react';\nimport SubscriberHeader from '../Subscriber/SubscriberHeader';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/CourseView.css';\nimport '../styles/video-react.css'; // import css\nimport HLSSource from '../Utils/HLSSource';\nimport { Player, ControlBar, ForwardControl, ReplayControl } from 'video-react';\nimport { Button } from 'shards-react';\nimport { Collapse } from 'antd';\nimport { Scrollbars } from 'rc-scrollbars';\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\nexport default function CourseView() {\n    let history = useHistory();\n    const [sections , setSections] = useState([])\n    const [playerUrl , setUrl] = useState('')\n    \n    useEffect(() => {\n        axios.post('/author/course/sections' , {\n            courseId : history.location.state.id\n\n        }).then(res => {\n            res.data.sections.forEach((value , index) => {\n                setSections(oldArray => [...oldArray, {sectionName : value.sectionName , sectionVedios : value.video}])\n            })\n        }).catch(error=>{\n            if(error.response.data.message == \"Unauthorised.\"){\n                history.push('/author/login');\n            }\n            else\n            {\n                Swal.fire({\n                    icon : 'error' ,\n                    text : `${error.response.data.message}`\n                })\n            }\n        })\n    } , [])\n\n    const Section = ({section}) => {\n        const { Panel } = Collapse;\n\n        return(\n            \n            <Collapse>\n                 <Panel header = {section.sectionName} >\n                {\n                    section.sectionVedios.map(vedio => \n                    <button key = {vedio.videoName} onClick = {() => {\n                        setUrl(`${vedio.videoURL}`)\n                        console.log(\"url : \" , playerUrl)\n                        }}>\n                        {vedio.videoName}\n                    </button>\n                    \n                    )\n                }\n                </Panel>\n            </Collapse>\n        )\n    }   \n    return (\n        <div>\n            <SubscriberHeader history={history} />\n            <div className=\"vidPlayerdiv\">\n                <h1 className=\"crvTitle\">Title</h1>\n\n                {/* If you want to use MP4 file, give a src prop to Player tag and remove HLSSoure tag || If you want to play m3u8 file, keep the HLSSource tag just change the url */}\n                <Player className=\"vidPlayer\"\n                    src = {playerUrl}\n                >\n                    {/* <HLSSource\n                        isVideoChild\n                        src=\"https://multiplatform-f.akamaihd.net/i/multi/will/bunny/big_buck_bunny_,640x360_400,640x360_700,640x360_1000,950x540_1500,.f4v.csmil/master.m3u8\"\n                    /> */}\n                    <ControlBar className=\"ctrlbar\" autoHide={true}>\n                        <ReplayControl seconds={10} order={2.2} />\n                        <ForwardControl seconds={10} order={3.2} />\n                    </ControlBar>\n                </Player>\n            </div>\n            <div  className=\"crvCollapse\"> \n                <Scrollbars style={{ width: 525, height: 630 }}>\n                    {\n                        sections.map(section => <Section section = {section} key={section.sectionName}/>) \n                    } \n                    \n                </Scrollbars>\n            </div>\n        </div>\n    );\n}","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CreateCourse.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/CreateCourse.css';\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\nimport { Image } from 'react-bootstrap';\nimport 'antd/dist/antd.css';\nimport { message } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport { Slider } from 'antd';\nimport axios from 'axios';\nimport { Upload } from 'antd';\n\nimport Swal from 'sweetalert2'\n\nexport default function CreateCourse() {\n    let history = useHistory();\n    const [courseId, setCourseId] = useState('');\n    \n    useEffect(() => {});\n\n\n    const PreviewVedioUpload = () => {\n        const [vedioFile, setVedioFile] = useState(null);\n        function handelFileChange(e) {\n            setVedioFile(e.target.files[0]);\n        }\n        function handleSubmit() {\n            const formData = new FormData();\n            formData.append('image', vedioFile);\n\n            formData.append('courseId', history.location.state.id); //Inserting course ID maunually    \n            axios({\n                method: 'post',\n                url: '/author/uploadPreview',\n\n                data: formData \n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n                if(error.response.data.message == \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            })\n        }\n        return (\n            <div>\n                <input type=\"file\" onChange={e => handelFileChange(e)} />\n                <br />\n                <button onClick={handleSubmit}>Upload</button>\n            </div>\n        );\n    };\n    \n\n    const ImageUpload = () => {\n        const [file, setFile] = useState('');\n        const [imagePreviewUrl, setImagePreview] = useState('');\n        const _handleSubmit = e => {\n            e.preventDefault();\n            console.log('handle uploading-', file);\n            const formData = new FormData();\n            formData.append('image', file);\n\n\n            formData.append('courseId' , history.location.state.id ) // Inserting course Id manually \n            axios({\n                method: 'post',\n                url: '/author/uploadThumbnail',\n\n                data: formData \n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n                if(error.response.data.message == \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            })\n        }\n\n\n        const _handleImageChange = e => {\n            e.preventDefault();\n            let reader = new FileReader();\n            let file = e.target.files[0];\n            reader.onloadend = () => {\n                setFile(file);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        };\n        return (\n            <div>\n                <form onSubmit={e => _handleSubmit(e)}>\n                    <input type=\"file\" onChange={e => _handleImageChange(e)} />\n                    <button type=\"submit\" onClick={e => _handleSubmit(e)}>\n                        Upload Image\n                    </button>\n                </form>\n                <div style={{ textAlign: 'center', height: '100px', width: '100px', border: '5px solid gray' }}>\n                    {imagePreviewUrl ? (\n                        <img style={{ width: '100%', height: '100%' }} src={imagePreviewUrl} />\n                    ) : (\n                        <div>Please select an Image for Preview</div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    // Course Thumbnail\n    const CourseThumbnail = () => {\n        const [fileList, setFileList] = useState([]);\n\n        const onChange = ({ fileList: newFileList }) => {\n            setFileList(newFileList);\n        };\n\n        const onPreview = async file => {\n            let src = file.url;\n            if (!src) {\n                src = await new Promise(resolve => {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(file.originFileObj);\n                    reader.onload = () => resolve(reader.result);\n                });\n            }\n            const image = new Image();\n            image.src = src;\n            const imgWindow = window.open(src);\n            imgWindow.document.write(image.outerHTML);\n        };\n\n        return (\n            <ImgCrop rotate>\n                <Upload\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    listType=\"picture-card\"\n                    fileList={fileList}\n                    onChange={onChange}\n                    onPreview={onPreview}\n                >\n                    {fileList.length < 1 && '+ Upload'}\n                </Upload>\n            </ImgCrop>\n        );\n    };\n\n    // Preview Video\n    const previewprops = {\n        name: 'file',\n        action: 'author/uploadThumbnailPreview',\n        headers: {\n            authorization: 'authorization-text'\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n                console.log('error ; ', info);\n            }\n        }\n    };\n\n    // Price Slider\n    class PriceSlider extends React.Component {\n        state = {\n            disabled: false\n        };\n\n        handleDisabledChange = disabled => {\n            this.setState({ disabled });\n        };\n\n        render() {\n            const { disabled } = this.state;\n            return (\n                <>\n                    <Slider min={500} max={5000} range defaultValue={[700, 1500]} disabled={disabled} />\n                </>\n            );\n        }\n    }\n\n    function Section({ sectionId }) {\n        const [section, createSection] = useState(true);\n        const [sectionName, setSectionName] = useState('');\n\n        console.log('$$$$$$$$$$$$ Secid : ', sectionId);\n\n        const [fields, setFields] = useState([{ lectureName: '', lectureFile: null }]);\n\n        function handleAdd() {\n            const values = [...fields];\n            values.push({ lectureName: '', lectureFile: null });\n            setFields(values);\n        }\n\n        function handleRemove(i) {\n            const values = [...fields];\n            values.splice(i, 1);\n            setFields(values);\n        }\n\n        function handleNameChange(i, event) {\n            const values = [...fields];\n            values[i].lectureName = event.target.value;\n            setFields(values);\n        }\n        function handleFileChange(i, event) {\n            const values = [...fields];\n            values[i].lectureFile = event.target.files[0];\n            setFields(values);\n        }\n\n        function saveLecture(i) {\n            const values = [...fields];\n            const formData = new FormData();\n            formData.append('image', values[i].lectureFile);\n            formData.append('vedioName', `${values[i].lectureName}`);\n            formData.append('sectionId', `${sectionId}`);\n            axios({\n                method: 'post',\n                url: '/author/add-video',\n                data: formData\n            }).then(res=>{\n                Swal.fire({\n                    icon : 'success' ,\n                    text : `${res.data.message}`\n                })\n            }).catch(error=>{\n                if(error.response.data.message == \"Unauthorised.\"){\n                    history.push('/author/login');\n                }\n                else\n                {\n                    Swal.fire({\n                        icon : 'error' ,\n                        text : `${error.response.data.message}`\n                    })\n                }\n            });\n        }\n\n        return (\n            <div>\n                <Card className=\"CrCoCard\">\n                    <CardBody>\n                        <CardTitle>\n                            <h4>Section Name here</h4>\n                        </CardTitle>\n                        {fields.map((field, idx) => {\n                            return (\n                                <div key={`${field}-${idx}`}>\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Lecture Name and attach file\"\n                                        value={field.lectureName || ''}\n                                        onChange={e => handleNameChange(idx, e)}\n                                    />\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"file\"\n                                        placeholder=\"Upload File\"\n                                        onChange={e => handleFileChange(idx, e)}\n                                    />\n                                    <Button theme=\"success\" className=\"CrCoSaveLectureBut\" type=\"button\" onClick={() => saveLecture(idx)}>\n                                        Save Lecture\n                                    </Button>\n                                </div>\n                            );\n                        })}\n                        <Button theme=\"success\" className=\"CrCoAddLectureBut\" type=\"button\" onClick={() => handleAdd()}>\n                            Add Lecture\n                        </Button>\n                        <Button\n                            theme=\"success\"\n                            className=\"CrCoShowStateBut\"\n                            type=\"button\"\n                            onClick={() => {\n                                console.log('Feilds : ', fields);\n                            }}\n                        >\n                            Show State\n                        </Button>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n    function SectionContainer() {\n        //  const courseId = '60040cd8ca5848206b593c67'\n        const [sections, setSections] = useState([{ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' }]);\n        const [sectionCount, setSectionCount] = useState(0);\n        const [name, setName] = useState('');\n\n        const saveSection = i => {\n            setSectionCount(sectionCount + 1);\n            axios\n                .post('/author/create-section', {\n                    number: sectionCount,\n                    sectionName: name,\n                    courseId: `${history.location.state.id}`\n                    //courseId: '6006db170db0231310bd4728'\n                })\n                .then(res => {\n                    const values = [...sections];\n                    values[i].sectionNumber = sectionCount;\n                    values[i].sectionSaved = true;\n                    values[i].sectionName = name;\n                    values[i].sectionId = `${res.data.sectionId}`;\n                    setSections(values);\n                })\n                .catch(error => {\n                    if(error.response.data.message == \"Unauthorised.\"){\n                        history.push('/author/login');\n                    }\n                    else\n                    {\n                        Swal.fire({\n                            icon : 'error' ,\n                            text : `${error.response.data.message}`\n                        })\n                    }\n                });\n        };\n        const addSection = () => {\n            setName('');\n            const values = [...sections];\n            values.push({ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' });\n            setSections(values);\n        };\n\n        return (\n            <div>\n                {sections.map((section, idx) => {\n                    return !section.sectionSaved ? (\n                        <div>\n                            <FormInput\n                                className=\"videoIp\"\n                                type=\"text\"\n                                placeholder=\"Enter Section Name\"\n                                value={name || ''}\n                                onChange={e => setName(e.target.value)}\n                            />\n\n                            <Button theme=\"success\" className=\"CrCoSaveSecBut\" type=\"button\" onClick={() => saveSection(idx)}>\n                                Save Section\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Section sectionId={section.sectionId} />\n                        </div>\n                    );\n                })}\n                <Button className=\"CrCoAddSectionBtn\" theme=\"success\" type=\"button\" onClick={addSection}>\n                    Add Section\n                </Button>\n            </div>\n        );\n    }\n\n    const step1Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <label className=\"labelstep2\" htmlFor=\"name\">\n                                Section Name:\n                            </label>\n                        </Form>\n                    </div>\n                    <SectionContainer />\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        Add a thumbnail and preview\n                        <div className=\"thumbnailUpload\">\n                            <h4>Thumbnail</h4>\n                            <ImageUpload />\n                        </div>\n                        <div className=\"previewUpload\">\n                            <h4>Preview</h4>\n\n                            <PreviewVedioUpload />\n                        </div>\n                        <Form>\n                            <FormGroup></FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step3Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"priceRange\">\n                        What price range would to like to set for your course\n                        <PriceSlider />\n                    </div>\n                    <Form>\n                        <label className=\"labelstep2\" htmlFor=\"name\">\n                            Would you like to add any coupons?:\n                        </label>\n                        <FormGroup>\n                            <FormInput type=\"text\"></FormInput>\n                        </FormGroup>\n                    </Form>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"previewCourse\">Please Confirm all the data before submitting your course for preview</div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n        // handle the submit logic here\n        // This function will be executed at the last step\n        // when the submit button (next button in the previous steps) is pressed\n        history.push('/course/create');\n    }\n    \n    return (\n        <div>\n            {/* <AuthorHeader /> */}\n            <div className=\"createheader\">\n                <Button className=\"buttonexitc\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                    Exit\n                </Button>\n                <div className=\"createheading\">Let's Set-up your Course!</div>\n                <Button className=\"buttonbackc\" theme=\"outline-danger\" href=\"/author/uploadcourse\">\n                    Back\n                </Button>\n            </div>\n            <div className=\"ui divider\"></div>\n            <div className=\"stepbar\">\n                <StepProgressBar\n                    startingStep={0}\n                    onSubmit={onFormSubmit}\n                    steps={[\n                        {\n                            label: 'Step 1',\n                            name: 'step 1',\n                            subtitle: 'Course Curiculam and Content',\n                            content: step1Content\n                            // validator: step1Validator\n                        },\n                        {\n                            label: 'Step 2',\n                            name: 'step 2',\n                            subtitle: 'Course Preview and Thumbnail',\n                            content: step2Content\n                            // validator: step2Validator\n                        },\n                        {\n                            label: 'Step 3',\n                            name: 'step 3',\n                            subtitle: 'Pricing and Coupons',\n                            content: step3Content\n                            // validator: step3Validator\n                        },\n                        {\n                            label: 'Step 4',\n                            name: 'step 4',\n                            subtitle: 'Submit for Preview',\n                            content: step4Content\n                            // validator: step4Validator\n                        }\n                    ]}\n                />\n            </div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["272"],"import React from 'react';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\nimport CategoriesDropdown from \"../Utils/CategoriesDropdown\"\nimport axios from 'axios';\n\n\n export default function SubscriberHeader({ history }){\n    return (\n        <div className=\"subscriberheader\">\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo}  width='90' heigh='90' onClick={()=>history.push('/')}/>\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>\n                            <CategoriesDropdown />\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar>\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\">\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n            </Collapse>\n            <div className=\"right\">\n                <Collapse navbar>\n                <div>\n                    <ShoppingCartIcon fontSize=\"large\"/>\n                </div>\n                <Dropdown >\n                    <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                        <BsPersonSquare size=\"30\" />\n                    </Dropdown.Toggle>\n\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Button className=\"logoutbutton\" theme=\"outline-danger\" onClick={ () => {\n                                axios.post('/logout').then(res => {\n                                    console.log(res.data.message);\n                                    history.push('/');\n                                }).catch(error => {\n                                    console.log(error);\n                                });\n                            } }>Logout</Button>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                <div className=\"right\"></div>\n            </Collapse>\n            </div>\n\n        </Navbar>\n        </div>\n    );\n};\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HLSSource.js",["273"],"import React, { Component } from 'react';\nimport Hls from 'hls.js';\nimport { BsReverseLayoutSidebarInsetReverse } from 'react-icons/bs';\n\nexport default class HLSSource extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.hls = new Hls();\n  }\n\n  componentDidMount() {\n    // `src` is the property get from this component\n    // `video` is the property insert from `Video` component\n    // `video` is the html5 video element\n    const { src, video } = this.props;\n    // load hls video source base on hls.js\n    if (Hls.isSupported()) {\n      this.hls.loadSource(src);\n      this.hls.attachMedia(video);\n      this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        video.play();\n      });\n    }\n  }\n\n\n  componentWillUnmount() {\n    // destroy hls video source\n    if (this.hls) {\n      this.hls.destroy();\n    }\n  }\n\n  render() {\n    return (\n      <source\n        src={this.props.src}\n        type={this.props.type || 'application/x-mpegURL'}\n      />\n    );\n  }\n}\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Footer.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js",["274"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport CategoriesDropdown from './CategoriesDropdown';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport var type = \"\";\n\nexport const Header = () => {\n    const history = useHistory();\n\n    function loginHandleClick() {\n        history.push('/subscriber/login');\n    }\n    const signupHandleClick = () => {\n        history.push('/subscriber/signup');\n    };\n   \n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} width='60' heigh='40' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink><CategoriesDropdown /></NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar >\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\" >\n                        <InputGroupAddon  type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                \n                \n            </Collapse>\n            <div className=\"right\">\n                    <Button outline theme=\"info\" onClick={loginHandleClick}>\n                        LogIn\n                       \n\n                    </Button>\n                    <Button className=\"signupButton\" outline theme=\"info\" onClick={signupHandleClick}>\n                        SignUp\n                    </Button>\n                </div>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HomeCarousel.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Carousel.js",["275"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/plugin.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberNewPassword.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberEmailVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/verify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourseCarousel.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorNewPassword.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorEmailVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetVerify.js",["276"],"import React, { useEffect } from 'react';\nimport verify from '../Utils/verify';\n\n\nfunction AuthorForgetVerify({match,history}) {\n    \n \n     let token = match.params.token;\n    console.log(token);\n    \n \n     const submitHandler = e => {\n         e.preventDefault();\n        \n        if(token)\n        {\n            verify('/author/forgetpasswordverify', '/author/forgetpasswordupdate', token, history);\n        }\n     };\n \n     return (\n         <form onSubmit={submitHandler}>\n             <button>Submit</button>\n         </form>\n     );\n}\n\nexport default AuthorForgetVerify\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberCourseCarousel.js",[],{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":8,"column":10,"nodeType":"283","messageId":"284","endLine":8,"endColumn":16},{"ruleId":"281","severity":1,"message":"285","line":8,"column":18,"nodeType":"283","messageId":"284","endLine":8,"endColumn":25},{"ruleId":"281","severity":1,"message":"286","line":9,"column":8,"nodeType":"283","messageId":"284","endLine":9,"endColumn":14},{"ruleId":"281","severity":1,"message":"287","line":14,"column":12,"nodeType":"283","messageId":"284","endLine":14,"endColumn":15},{"ruleId":"288","severity":1,"message":"289","line":34,"column":29,"nodeType":"290","messageId":"291","endLine":34,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":43,"column":53,"nodeType":"290","messageId":"291","endLine":43,"endColumn":55},{"ruleId":"288","severity":1,"message":"289","line":72,"column":53,"nodeType":"290","messageId":"291","endLine":72,"endColumn":55},{"ruleId":"292","severity":1,"message":"293","line":106,"column":25,"nodeType":"294","endLine":106,"endColumn":96},{"ruleId":"288","severity":1,"message":"289","line":142,"column":49,"nodeType":"290","messageId":"291","endLine":142,"endColumn":51},{"ruleId":"295","severity":1,"message":"296","line":151,"column":8,"nodeType":"297","endLine":151,"endColumn":10,"suggestions":"298"},{"ruleId":"288","severity":1,"message":"289","line":199,"column":77,"nodeType":"290","messageId":"291","endLine":199,"endColumn":79},{"ruleId":"288","severity":1,"message":"289","line":242,"column":72,"nodeType":"290","messageId":"291","endLine":242,"endColumn":74},{"ruleId":"288","severity":1,"message":"289","line":291,"column":72,"nodeType":"290","messageId":"291","endLine":291,"endColumn":74},{"ruleId":"281","severity":1,"message":"299","line":2,"column":8,"nodeType":"283","messageId":"284","endLine":2,"endColumn":18},{"ruleId":"281","severity":1,"message":"300","line":4,"column":10,"nodeType":"283","messageId":"284","endLine":4,"endColumn":19},{"ruleId":"281","severity":1,"message":"301","line":4,"column":21,"nodeType":"283","messageId":"284","endLine":4,"endColumn":24},{"ruleId":"281","severity":1,"message":"302","line":4,"column":26,"nodeType":"283","messageId":"284","endLine":4,"endColumn":29},{"ruleId":"281","severity":1,"message":"303","line":13,"column":12,"nodeType":"283","messageId":"284","endLine":13,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":21,"column":44,"nodeType":"290","messageId":"291","endLine":21,"endColumn":46},{"ruleId":"288","severity":1,"message":"289","line":37,"column":44,"nodeType":"290","messageId":"291","endLine":37,"endColumn":46},{"ruleId":"295","severity":1,"message":"296","line":45,"column":8,"nodeType":"297","endLine":45,"endColumn":10,"suggestions":"304"},{"ruleId":"288","severity":1,"message":"289","line":28,"column":44,"nodeType":"290","messageId":"291","endLine":28,"endColumn":46},{"ruleId":"288","severity":1,"message":"289","line":31,"column":48,"nodeType":"290","messageId":"291","endLine":31,"endColumn":50},{"ruleId":"288","severity":1,"message":"289","line":72,"column":48,"nodeType":"290","messageId":"291","endLine":72,"endColumn":50},{"ruleId":"281","severity":1,"message":"299","line":2,"column":8,"nodeType":"283","messageId":"284","endLine":2,"endColumn":18},{"ruleId":"281","severity":1,"message":"300","line":4,"column":10,"nodeType":"283","messageId":"284","endLine":4,"endColumn":19},{"ruleId":"281","severity":1,"message":"301","line":4,"column":21,"nodeType":"283","messageId":"284","endLine":4,"endColumn":24},{"ruleId":"281","severity":1,"message":"302","line":4,"column":26,"nodeType":"283","messageId":"284","endLine":4,"endColumn":29},{"ruleId":"281","severity":1,"message":"303","line":12,"column":12,"nodeType":"283","messageId":"284","endLine":12,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":20,"column":44,"nodeType":"290","messageId":"291","endLine":20,"endColumn":46},{"ruleId":"288","severity":1,"message":"289","line":36,"column":44,"nodeType":"290","messageId":"291","endLine":36,"endColumn":46},{"ruleId":"295","severity":1,"message":"296","line":47,"column":8,"nodeType":"297","endLine":47,"endColumn":10,"suggestions":"305"},{"ruleId":"288","severity":1,"message":"289","line":34,"column":44,"nodeType":"290","messageId":"291","endLine":34,"endColumn":46},{"ruleId":"295","severity":1,"message":"296","line":45,"column":8,"nodeType":"297","endLine":45,"endColumn":10,"suggestions":"306"},{"ruleId":"288","severity":1,"message":"289","line":54,"column":25,"nodeType":"290","messageId":"291","endLine":54,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":61,"column":48,"nodeType":"290","messageId":"291","endLine":61,"endColumn":50},{"ruleId":"288","severity":1,"message":"289","line":91,"column":48,"nodeType":"290","messageId":"291","endLine":91,"endColumn":50},{"ruleId":"292","severity":1,"message":"293","line":127,"column":25,"nodeType":"294","endLine":127,"endColumn":96},{"ruleId":"288","severity":1,"message":"289","line":206,"column":76,"nodeType":"290","messageId":"291","endLine":206,"endColumn":78},{"ruleId":"288","severity":1,"message":"289","line":265,"column":76,"nodeType":"290","messageId":"291","endLine":265,"endColumn":78},{"ruleId":"288","severity":1,"message":"289","line":324,"column":76,"nodeType":"290","messageId":"291","endLine":324,"endColumn":78},{"ruleId":"277","replacedBy":"307"},{"ruleId":"279","replacedBy":"308"},{"ruleId":"288","severity":1,"message":"289","line":28,"column":44,"nodeType":"290","messageId":"291","endLine":28,"endColumn":46},{"ruleId":"288","severity":1,"message":"289","line":31,"column":48,"nodeType":"290","messageId":"291","endLine":31,"endColumn":50},{"ruleId":"288","severity":1,"message":"289","line":72,"column":48,"nodeType":"290","messageId":"291","endLine":72,"endColumn":50},{"ruleId":"281","severity":1,"message":"299","line":3,"column":8,"nodeType":"283","messageId":"284","endLine":3,"endColumn":18},{"ruleId":"281","severity":1,"message":"300","line":6,"column":10,"nodeType":"283","messageId":"284","endLine":6,"endColumn":19},{"ruleId":"281","severity":1,"message":"301","line":6,"column":21,"nodeType":"283","messageId":"284","endLine":6,"endColumn":24},{"ruleId":"281","severity":1,"message":"302","line":6,"column":26,"nodeType":"283","messageId":"284","endLine":6,"endColumn":29},{"ruleId":"281","severity":1,"message":"303","line":12,"column":12,"nodeType":"283","messageId":"284","endLine":12,"endColumn":19},{"ruleId":"281","severity":1,"message":"309","line":7,"column":20,"nodeType":"283","messageId":"284","endLine":7,"endColumn":25},{"ruleId":"281","severity":1,"message":"310","line":8,"column":27,"nodeType":"283","messageId":"284","endLine":8,"endColumn":34},{"ruleId":"281","severity":1,"message":"311","line":149,"column":14,"nodeType":"283","messageId":"284","endLine":149,"endColumn":28},{"ruleId":"281","severity":1,"message":"312","line":153,"column":14,"nodeType":"283","messageId":"284","endLine":153,"endColumn":28},{"ruleId":"281","severity":1,"message":"313","line":157,"column":14,"nodeType":"283","messageId":"284","endLine":157,"endColumn":28},{"ruleId":"281","severity":1,"message":"314","line":161,"column":14,"nodeType":"283","messageId":"284","endLine":161,"endColumn":28},{"ruleId":"288","severity":1,"message":"289","line":174,"column":44,"nodeType":"290","messageId":"291","endLine":174,"endColumn":46},{"ruleId":"281","severity":1,"message":"315","line":2,"column":10,"nodeType":"283","messageId":"284","endLine":2,"endColumn":20},{"ruleId":"281","severity":1,"message":"316","line":6,"column":16,"nodeType":"283","messageId":"284","endLine":6,"endColumn":26},{"ruleId":"281","severity":1,"message":"317","line":10,"column":10,"nodeType":"283","messageId":"284","endLine":10,"endColumn":17},{"ruleId":"281","severity":1,"message":"318","line":11,"column":8,"nodeType":"283","messageId":"284","endLine":11,"endColumn":17},{"ruleId":"295","severity":1,"message":"319","line":68,"column":8,"nodeType":"297","endLine":68,"endColumn":10,"suggestions":"320"},{"ruleId":"281","severity":1,"message":"321","line":70,"column":13,"nodeType":"283","messageId":"284","endLine":70,"endColumn":18},{"ruleId":"322","severity":1,"message":"323","line":73,"column":34,"nodeType":"324","messageId":"325","endLine":73,"endColumn":36},{"ruleId":"326","severity":1,"message":"327","line":111,"column":27,"nodeType":"328","messageId":"329","endLine":111,"endColumn":56},{"ruleId":"288","severity":1,"message":"289","line":133,"column":39,"nodeType":"290","messageId":"291","endLine":133,"endColumn":41},{"ruleId":"281","severity":1,"message":"318","line":6,"column":8,"nodeType":"283","messageId":"284","endLine":6,"endColumn":17},{"ruleId":"281","severity":1,"message":"330","line":8,"column":10,"nodeType":"283","messageId":"284","endLine":8,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":27,"column":44,"nodeType":"290","messageId":"291","endLine":27,"endColumn":46},{"ruleId":"295","severity":1,"message":"296","line":38,"column":9,"nodeType":"297","endLine":38,"endColumn":11,"suggestions":"331"},{"ruleId":"281","severity":1,"message":"332","line":5,"column":38,"nodeType":"283","messageId":"284","endLine":5,"endColumn":50},{"ruleId":"281","severity":1,"message":"310","line":7,"column":27,"nodeType":"283","messageId":"284","endLine":7,"endColumn":34},{"ruleId":"281","severity":1,"message":"333","line":20,"column":12,"nodeType":"283","messageId":"284","endLine":20,"endColumn":20},{"ruleId":"281","severity":1,"message":"334","line":20,"column":22,"nodeType":"283","messageId":"284","endLine":20,"endColumn":33},{"ruleId":"288","severity":1,"message":"289","line":46,"column":48,"nodeType":"290","messageId":"291","endLine":46,"endColumn":50},{"ruleId":"288","severity":1,"message":"289","line":90,"column":48,"nodeType":"290","messageId":"291","endLine":90,"endColumn":50},{"ruleId":"292","severity":1,"message":"293","line":124,"column":25,"nodeType":"294","endLine":124,"endColumn":96},{"ruleId":"281","severity":1,"message":"335","line":134,"column":11,"nodeType":"283","messageId":"284","endLine":134,"endColumn":26},{"ruleId":"281","severity":1,"message":"336","line":172,"column":11,"nodeType":"283","messageId":"284","endLine":172,"endColumn":23},{"ruleId":"281","severity":1,"message":"337","line":212,"column":16,"nodeType":"283","messageId":"284","endLine":212,"endColumn":23},{"ruleId":"281","severity":1,"message":"338","line":212,"column":25,"nodeType":"283","messageId":"284","endLine":212,"endColumn":38},{"ruleId":"281","severity":1,"message":"339","line":213,"column":16,"nodeType":"283","messageId":"284","endLine":213,"endColumn":27},{"ruleId":"281","severity":1,"message":"340","line":213,"column":29,"nodeType":"283","messageId":"284","endLine":213,"endColumn":43},{"ruleId":"281","severity":1,"message":"341","line":225,"column":18,"nodeType":"283","messageId":"284","endLine":225,"endColumn":30},{"ruleId":"288","severity":1,"message":"289","line":258,"column":48,"nodeType":"290","messageId":"291","endLine":258,"endColumn":50},{"ruleId":"288","severity":1,"message":"289","line":343,"column":52,"nodeType":"290","messageId":"291","endLine":343,"endColumn":54},{"ruleId":"281","severity":1,"message":"311","line":465,"column":14,"nodeType":"283","messageId":"284","endLine":465,"endColumn":28},{"ruleId":"281","severity":1,"message":"312","line":469,"column":14,"nodeType":"283","messageId":"284","endLine":469,"endColumn":28},{"ruleId":"281","severity":1,"message":"313","line":473,"column":14,"nodeType":"283","messageId":"284","endLine":473,"endColumn":28},{"ruleId":"281","severity":1,"message":"314","line":477,"column":14,"nodeType":"283","messageId":"284","endLine":477,"endColumn":28},{"ruleId":"292","severity":1,"message":"293","line":33,"column":17,"nodeType":"294","endLine":33,"endColumn":89},{"ruleId":"281","severity":1,"message":"342","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":44},{"ruleId":"292","severity":1,"message":"293","line":39,"column":17,"nodeType":"294","endLine":39,"endColumn":57},{"ruleId":"295","severity":1,"message":"343","line":23,"column":8,"nodeType":"297","endLine":23,"endColumn":10,"suggestions":"344"},{"ruleId":"281","severity":1,"message":"345","line":1,"column":17,"nodeType":"283","messageId":"284","endLine":1,"endColumn":26},"no-native-reassign",["346"],"no-negated-in-lhs",["347"],"no-unused-vars","'Upload' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'Avatar' is defined but never used.","'url' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["348"],"'CourseCard' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'courses' is assigned a value but never used.",["349"],["350"],["351"],["346"],["347"],"'Forms' is defined but never used.","'CardImg' is defined but never used.","'step1Validator' is defined but never used.","'step2Validator' is defined but never used.","'step3Validator' is defined but never used.","'step4Validator' is defined but never used.","'useHistory' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'HLSSource' is defined but never used.","React Hook useEffect has a missing dependency: 'courseTitle'. Either include it or remove the dependency array.",["352"],"'Panel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Button' is defined but never used.",["353"],"'FormTextarea' is defined but never used.","'courseId' is assigned a value but never used.","'setCourseId' is assigned a value but never used.","'CourseThumbnail' is assigned a value but never used.","'previewprops' is assigned a value but never used.","'section' is assigned a value but never used.","'createSection' is assigned a value but never used.","'sectionName' is assigned a value but never used.","'setSectionName' is assigned a value but never used.","'handleRemove' is defined but never used.","'BsReverseLayoutSidebarInsetReverse' is defined but never used.","React Hook useEffect has a missing dependency: 'cat'. Either include it or remove the dependency array.",["354"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"355","fix":"357"},{"desc":"355","fix":"358"},{"desc":"355","fix":"359"},{"desc":"360","fix":"361"},{"desc":"355","fix":"362"},{"desc":"363","fix":"364"},"Update the dependencies array to be: [history]",{"range":"365","text":"366"},{"range":"367","text":"366"},{"range":"368","text":"366"},{"range":"369","text":"366"},"Update the dependencies array to be: [courseTitle]",{"range":"370","text":"371"},{"range":"372","text":"366"},"Update the dependencies array to be: [cat]",{"range":"373","text":"374"},[5690,5692],"[history]",[1488,1490],[1496,1498],[1875,1877],[2511,2513],"[courseTitle]",[1416,1418],[784,786],"[cat]"]
>>>>>>> ac443f3e990f410f4dd30f214502daaa02012584

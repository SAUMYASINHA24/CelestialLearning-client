[{"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js":"1","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js":"2","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js":"3","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js":"4","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js":"5","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js":"6","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/userActions.js":"7","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js":"8","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js":"9","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"10","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"11","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"12","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"13","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"14","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"15","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"16","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/authorActions.js":"17","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/subscriberActions.js":"18","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"19","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"20","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"21","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"22","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"23","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"24","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"25"},{"size":355,"mtime":1609743407541,"results":"26","hashOfConfig":"27"},{"size":910,"mtime":1609846092755,"results":"28","hashOfConfig":"27"},{"size":2421,"mtime":1609904720608,"results":"29","hashOfConfig":"27"},{"size":3188,"mtime":1609846798378,"results":"30","hashOfConfig":"27"},{"size":535,"mtime":1609732848516,"results":"31","hashOfConfig":"27"},{"size":1795,"mtime":1609846092755,"results":"32","hashOfConfig":"27"},{"size":2145,"mtime":1609846092755,"results":"33","hashOfConfig":"27"},{"size":2763,"mtime":1609908042468,"results":"34","hashOfConfig":"27"},{"size":483,"mtime":1609733165830,"results":"35","hashOfConfig":"27"},{"size":3180,"mtime":1609846092751,"results":"36","hashOfConfig":"27"},{"size":1135,"mtime":1609846092751,"results":"37","hashOfConfig":"27"},{"size":3819,"mtime":1609908142545,"results":"38","hashOfConfig":"27"},{"size":729,"mtime":1609907986739,"results":"39","hashOfConfig":"27"},{"size":1861,"mtime":1609908161981,"results":"40","hashOfConfig":"27"},{"size":4574,"mtime":1609846263396,"results":"41","hashOfConfig":"27"},{"size":3101,"mtime":1609846092751,"results":"42","hashOfConfig":"27"},{"size":2410,"mtime":1609846092751,"results":"43","hashOfConfig":"27"},{"size":2505,"mtime":1609846092755,"results":"44","hashOfConfig":"27"},{"size":4699,"mtime":1609846274713,"results":"45","hashOfConfig":"27"},{"size":775,"mtime":1609846092751,"results":"46","hashOfConfig":"27"},{"size":6015,"mtime":1609908779020,"results":"47","hashOfConfig":"27"},{"size":1845,"mtime":1609908191666,"results":"48","hashOfConfig":"27"},{"size":709,"mtime":1609908028204,"results":"49","hashOfConfig":"27"},{"size":2483,"mtime":1609908244718,"results":"50","hashOfConfig":"27"},{"size":2475,"mtime":1609908236934,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1quvh92",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"54"},"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js",[],["116","117"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/userActions.js",[],["118","119"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js",["120"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/logo2.svg';\nimport { Button } from 'shards-react';\n\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport var type = \"\";\n\nexport const Header = () => {\n    const history = useHistory();\n\n    function loginHandleClick() {\n        history.push('/subscriber/login');\n    }\n    const signupHandleClick = () => {\n        history.push('/subscriber/signup');\n    };\n    const subDashboard = () => {\n        history.push('/subscriber/dashboard');\n    };\n    const autDashboard = () => {\n        history.push('/author/dashboard');\n    };\n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>Categories</NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar className=\"ml-auto\">\n                    <InputGroup size=\"sm\" seamless>\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                <div className=\"carticon\">\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <div className=\"right\">\n                    <Button outline theme=\"danger\" onClick={subDashboard}>\n                        Subscriber Dashboard\n                    </Button>\n                    <Button outline theme=\"danger\" onClick={autDashboard}>\n                        Author Dashboard\n                    </Button>\n                    <Button outline theme=\"danger\" onClick={loginHandleClick}>\n                        LogIn\n                    </Button>\n                    <Button outline theme=\"danger\" onClick={signupHandleClick}>\n                        SignUp\n                    </Button>\n                </div>\n                <div className=\"right\"></div>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",["121","122","123","124"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport login from \"../../actions/subscriberActions\"\nimport Swal from 'sweetalert2'\n\n\nfunction SubscriberLogin({history}) {\n     const [email, setEmail] = useState('');\n\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberLogin = useSelector(state => state.subscriberLogin);\n    const { loading, error, subscriberInfo } = subscriberLogin;\n\n    useEffect(() => {\n        if (subscriberInfo) {\n            console.log(\"Loged In\")\n            history.push('/')\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [ subscriberInfo , error]);   \n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n       \n    };\n\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/author/login\">Are you an Author?</a>\n                    <br />\n                    <a href=\"/path_to_page\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberLogin\n\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",["125","126"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Swal  from \"sweetalert2\"\nimport { verifySubscriber } from '../../actions/subscriberActions';\n\n\n\nfunction SubscriberVerify({match}) {\n     const dispatch = useDispatch();\n     const history = useHistory()\n \n     const subscriberVerify = useSelector(state => state.subscriberVerify);\n     const { loading, error, verify } = subscriberVerify;\n \n     let token = match.params.token;\n \n     useEffect(() => {\n         if(error){\n              Swal.fire({\n                   icon : 'error' ,\n                   text : `${error}`\n              })\n           if(verify){\n                console.log(\"True\")\n                history.push('/subscriber/login')\n           }\n         }\n     }, [ history , verify , error ]);\n \n     const submitHandler = e => {\n         e.preventDefault();\n         dispatch(verifySubscriber(token));\n     };\n \n     return (\n         <form onSubmit={submitHandler}>\n             <button>Submit</button>\n         </form>\n     );\n}\n\nexport default SubscriberVerify\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",["127","128","129","130","131","132","133","134","135","136"],"import React, { useState, useEffect } from 'react';\nimport SubscriberHeader from './SubscriberHeader';\nimport logo from '../assets/logo.png';\nimport '../styles/UserProfile.css';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Button } from 'shards-react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nexport default function SubscriberProfile() {\n    const [firstName, setfirstName] = useState('fname');\n    const [middleName, setmiddleName] = useState('mname');\n    const [lastName, setlastName] = useState('lname');\n    const [phNum, setphNum] = useState('phn');\n    const [linkedInURL, setlinkedInURL] = useState('lurl');\n    const [twitterURL, settwitterURL] = useState('turl');\n    const [higherEducation, sethigherEducation] = useState('he');\n    const [areaOfInterest, setareaOfInterest] = useState('aoi');\n\n    const updateProfile = () => {\n        setfirstName('NEWNAME');\n    };\n\n    return (\n        <div>\n            <SubscriberHeader />\n            <div className=\"profiletab\">\n                <Tabs  id=\"profileTab\">\n                    <Tab eventKey=\"personal\" title=\"Personal Details\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#firstName\">First Name</label>\n                                <FormInput id=\"#firstName\" value={firstName} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#middleName\">Middle Name</label>\n                                <FormInput id=\"#middleName\" value={lastName} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#lastName\">Last Name</label>\n                                <FormInput id=\"#lastName\" value={middleName} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#phNum\">Phone Number</label>\n                                <FormInput id=\"#phNum\" value={phNum} />\n                            </FormGroup>\n                            <Button theme=\"info\">Update</Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"social\" title=\"Social Media Handles\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#linkedInURL\">LinkedIn URL</label>\n                                <FormInput id=\"#linkedInURL\" value={linkedInURL} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#twitterURL\">Twitter URL</label>\n                                <FormInput id=\"#twitterURL\" value={twitterURL} />\n                            </FormGroup>\n                            <Button theme=\"info\">Update</Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"education\" title=\"Education\">\n                        <Form className=\"subform\">\n                            <FormGroup>\n                                <label htmlFor=\"#higherEducation\">Higher Education</label>\n                                <FormInput id=\"#higherEducation\" value={higherEducation} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"#areaOfInterest\">Area of Interest</label>\n                                <FormInput id=\"#areaOfInterest\" value={areaOfInterest} />\n                            </FormGroup>\n                            <Button theme=\"info\">Update</Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    );\n}","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js",["137","138","139","140","141"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/authorActions';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\nimport Swal from \"sweetalert2\"\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\n function AuthorSignup({ history }) {\n\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorRegister = useSelector(state => state.authorRegister);\n    const { loading, error ,success , message } = authorRegister;\n\n\n\n    useEffect(() => {\n          if(error){     \n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`\n               })\n          }\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               }).then(res => {\n                    history.push('/author/login')\n               })\n          }\n        \n    }, [history, error , success ]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n    };\n}\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup\">Are you a Subscriber?</a><br />\n\n                    <a href=\"/author/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n\n}\n\nexport default AuthorSignup\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js",["142","143","144"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/authorActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from 'sweetalert2'\n\nfunction AuthorLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorLogin = useSelector(state => state.authorLogin);\n    const { loading, error, authorInfo } = authorLogin;\n\n    useEffect(() => {\n        if (authorInfo) {\n            history.push('/');\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [history, authorInfo]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        \n    };\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/subscriber/login\">Are you a Subscriber?</a>\n                    <br />\n                    <a href=\"/path_to_page\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default AuthorLogin;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/authorActions.js",["145"],"import axios from 'axios'\nimport {\n  \n  AUTHOR_LOGIN_FAIL,\n  AUTHOR_LOGIN_REQUEST,\n  AUTHOR_LOGIN_SUCCESS,\n  AUTHOR_LOGOUT,\n\n  AUTHOR_REGISTER_FAIL,\n  AUTHOR_REGISTER_REQUEST,\n  AUTHOR_REGISTER_SUCCESS,\n  \n  AUTHOR_VERIFY_REQUEST,\n  AUTHOR_VERIFY_SUCCESS,\n  AUTHOR_VERIFY_FAIL,\n\n} from '../constants/userConstants'\n\n\nexport const register = (username, email, password , confirm_password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_REGISTER_REQUEST,\n       })\n   \n       await axios.post(\n         '/author/register',\n         { username, email, password , confirm_password },\n       ).then(res => {\n            dispatch({\n                 type : AUTHOR_REGISTER_SUCCESS ,\n                 payload : \"An Email has been sent to you.\"\n            })\n       })\n       \n     } catch (error) {\n       dispatch({\n         type: AUTHOR_REGISTER_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export const verifyAuthor = (token) => async (dispatch) => {\n     try {\n       dispatch({\n         type:AUTHOR_VERIFY_REQUEST,\n       })\n   \n       await axios.post(\n         '/author/verify',\n         { token },\n       )\n       dispatch({\n         type:AUTHOR_VERIFY_SUCCESS,\n       })\n       \n       \n     } catch (error) {\n       dispatch({\n         type:AUTHOR_VERIFY_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n\n   const login = (email, password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_LOGIN_REQUEST,\n       })\n   \n       const config = {\n         headers: {\n           'Content-Type': 'application/json',\n         },\n       }\n   \n       const { data } = await axios.post(\n         '/author/login',\n         { email, password },\n         config\n       )\n   \n       dispatch({\n         type: AUTHOR_LOGIN_SUCCESS,\n         payload: data,\n       })\n   \n       localStorage.setItem('authorInfo', JSON.stringify(data))\n     } catch (error) {\n       dispatch({\n         type: AUTHOR_LOGIN_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export default login ","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/subscriberActions.js",["146"],"import axios from 'axios'\nimport {\n  \n  SUBSCRIBER_LOGIN_FAIL,\n  SUBSCRIBER_LOGIN_REQUEST,\n  SUBSCRIBER_LOGIN_SUCCESS,\n  SUBSCRIBER_LOGOUT,\n\n  SUBSCRIBER_REGISTER_FAIL,\n  SUBSCRIBER_REGISTER_REQUEST,\n  SUBSCRIBER_REGISTER_SUCCESS,\n  \n  SUBSCRIBER_VERIFY_REQUEST,\n  SUBSCRIBER_VERIFY_SUCCESS,\n  SUBSCRIBER_VERIFY_FAIL,\n\n} from '../constants/userConstants'\n\nexport const register = (username, email, password , confirm_password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: SUBSCRIBER_REGISTER_REQUEST,\n       })\n   \n       await axios.post(\n         '/subscriber/register',\n         { username, email, password , confirm_password },\n       ).then(res => {\n            dispatch({\n                 type : SUBSCRIBER_REGISTER_SUCCESS ,\n                 payload : \"An Email has been sent to you.\"\n            })\n       })\n       \n     } catch (error) {\n       dispatch({\n         type: SUBSCRIBER_REGISTER_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export const verifySubscriber = (token) => async (dispatch) => {\n     try {\n       dispatch({\n         type:SUBSCRIBER_VERIFY_REQUEST,\n       })\n   \n       await axios.post(\n         '/subscriber/verify',\n         { token },\n       )\n       dispatch({\n         type:SUBSCRIBER_VERIFY_SUCCESS,\n       })\n       \n       \n     } catch (error) {\n       dispatch({\n         type:SUBSCRIBER_VERIFY_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n\n   const login = (email, password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: SUBSCRIBER_LOGIN_REQUEST,\n       })\n   \n       const config = {\n         headers: {\n           'Content-Type': 'application/json',\n         },\n       }\n   \n       const { data } = await axios.post(\n         '/subscriber/login',\n         { email, password },\n         config\n       )\n   \n       dispatch({\n         type: SUBSCRIBER_LOGIN_SUCCESS,\n         payload: data,\n       })\n   \n       localStorage.setItem('subscriberInfo', JSON.stringify(data))\n     } catch (error) {\n       dispatch({\n         type: SUBSCRIBER_LOGIN_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export default login ","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",["147","148","149","150"],"import React, { useEffect, useState } from 'react';\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\n//import { register } from '../../actions/userActions';\nimport {register} from '../../actions/subscriberActions'\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button } from 'shards-react';\n\nimport '../styles/UserSignUp.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from \"sweetalert2\"\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\n\nfunction SubscriberSignup() {\n     const [name, setName] = useState('');\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberRegister = useSelector(state => state.subscriberRegister);\n    const { loading, error ,success , message } = subscriberRegister;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n    useEffect(() => {\n     \n\n          if(error){\n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`    \n               })\n               console.log(\"Error : \" , error)\n          }\n\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               })\n          }\n    }, [error ,success ]);\n\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            // console.log(\"matched\")\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup\">Are you an Author?</a><br />\n                    <a href=\"/subscriber/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberSignup\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js",["151","152"],"import React, { useEffect } from 'react';\nimport {verifyAuthor} from \"../../actions/authorActions\"\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nfunction AuthorVerify({ match, history }) {\n    const dispatch = useDispatch();\n\n    const authorVerify = useSelector(state => state.authorVerify);\n    const { loading, error, verify } = authorVerify;\n\n\n    let token = match.params.token;\n\n    useEffect(() => {\n        if (verify) {\n            history.push('/author/login');\n        }\n    }, [verify, history]);\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(verifyAuthor(token));\n\n    };\n\n    return (\n        <form onSubmit={submitHandler}>\n            <button>Submit</button>\n        </form>\n    );\n}\n\nexport default AuthorVerify;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js",["153","154"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["155","156","157"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/logo2.svg';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport const Header_auth = () => {\n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>Categories</NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar className=\"ml-auto\">\n                    <InputGroup size=\"sm\" seamless>\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                <div className=\"carticon\">\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <div className=\"right\">\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                            <BsPersonSquare size=\"30\" />\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Item href=\"/\">Log Out</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div className=\"right\"></div>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header_auth;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js",["158","159","160"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/logo2.svg';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport const Header_auth = () => {\n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>Categories</NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar className=\"ml-auto\">\n                    <InputGroup size=\"sm\" seamless>\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                <div className=\"carticon\">\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <div className=\"right\">\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                            <BsPersonSquare size=\"30\" />\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/author/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/author/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Item href=\"/\">Log Out</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div className=\"right\"></div>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header_auth;\n",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"161","replacedBy":"165"},{"ruleId":"163","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":45,"column":17,"nodeType":"169","endLine":45,"endColumn":35},{"ruleId":"170","severity":1,"message":"171","line":5,"column":39,"nodeType":"172","messageId":"173","endLine":5,"endColumn":46},{"ruleId":"170","severity":1,"message":"174","line":17,"column":13,"nodeType":"172","messageId":"173","endLine":17,"endColumn":20},{"ruleId":"170","severity":1,"message":"175","line":17,"column":22,"nodeType":"172","messageId":"173","endLine":17,"endColumn":27},{"ruleId":"170","severity":1,"message":"176","line":32,"column":11,"nodeType":"172","messageId":"173","endLine":32,"endColumn":18},{"ruleId":"170","severity":1,"message":"174","line":9,"column":13,"nodeType":"172","messageId":"173","endLine":9,"endColumn":20},{"ruleId":"170","severity":1,"message":"175","line":9,"column":22,"nodeType":"172","messageId":"173","endLine":9,"endColumn":27},{"ruleId":"170","severity":1,"message":"177","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"178","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":12},{"ruleId":"170","severity":1,"message":"179","line":11,"column":24,"nodeType":"172","messageId":"173","endLine":11,"endColumn":37},{"ruleId":"170","severity":1,"message":"180","line":12,"column":22,"nodeType":"172","messageId":"173","endLine":12,"endColumn":33},{"ruleId":"170","severity":1,"message":"181","line":13,"column":19,"nodeType":"172","messageId":"173","endLine":13,"endColumn":27},{"ruleId":"170","severity":1,"message":"182","line":14,"column":25,"nodeType":"172","messageId":"173","endLine":14,"endColumn":39},{"ruleId":"170","severity":1,"message":"183","line":15,"column":24,"nodeType":"172","messageId":"173","endLine":15,"endColumn":37},{"ruleId":"170","severity":1,"message":"184","line":16,"column":29,"nodeType":"172","messageId":"173","endLine":16,"endColumn":47},{"ruleId":"170","severity":1,"message":"185","line":17,"column":28,"nodeType":"172","messageId":"173","endLine":17,"endColumn":45},{"ruleId":"170","severity":1,"message":"186","line":19,"column":11,"nodeType":"172","messageId":"173","endLine":19,"endColumn":24},{"ruleId":"170","severity":1,"message":"187","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":20},{"ruleId":"170","severity":1,"message":"188","line":6,"column":16,"nodeType":"172","messageId":"173","endLine":6,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":6,"column":39,"nodeType":"172","messageId":"173","endLine":6,"endColumn":46},{"ruleId":"170","severity":1,"message":"174","line":25,"column":13,"nodeType":"172","messageId":"173","endLine":25,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":45,"column":8,"nodeType":"191","endLine":45,"endColumn":35,"suggestions":"192"},{"ruleId":"170","severity":1,"message":"171","line":5,"column":39,"nodeType":"172","messageId":"173","endLine":5,"endColumn":46},{"ruleId":"170","severity":1,"message":"174","line":17,"column":13,"nodeType":"172","messageId":"173","endLine":17,"endColumn":20},{"ruleId":"170","severity":1,"message":"175","line":17,"column":22,"nodeType":"172","messageId":"173","endLine":17,"endColumn":27},{"ruleId":"170","severity":1,"message":"193","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":16},{"ruleId":"170","severity":1,"message":"194","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":20},{"ruleId":"170","severity":1,"message":"188","line":6,"column":16,"nodeType":"172","messageId":"173","endLine":6,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":6,"column":39,"nodeType":"172","messageId":"173","endLine":6,"endColumn":46},{"ruleId":"170","severity":1,"message":"174","line":28,"column":13,"nodeType":"172","messageId":"173","endLine":28,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":50,"column":8,"nodeType":"191","endLine":50,"endColumn":25,"suggestions":"195"},{"ruleId":"170","severity":1,"message":"174","line":10,"column":13,"nodeType":"172","messageId":"173","endLine":10,"endColumn":20},{"ruleId":"170","severity":1,"message":"175","line":10,"column":22,"nodeType":"172","messageId":"173","endLine":10,"endColumn":27},{"ruleId":"170","severity":1,"message":"177","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"178","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":12},{"ruleId":"170","severity":1,"message":"187","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":20},{"ruleId":"170","severity":1,"message":"196","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":30,"column":17,"nodeType":"169","endLine":30,"endColumn":35},{"ruleId":"170","severity":1,"message":"187","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":20},{"ruleId":"170","severity":1,"message":"196","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":30,"column":17,"nodeType":"169","endLine":30,"endColumn":35},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],["197"],["198"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'CardImg' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'profile' is assigned a value but never used.","'useEffect' is defined but never used.","'logo' is defined but never used.","'setmiddleName' is assigned a value but never used.","'setlastName' is assigned a value but never used.","'setphNum' is assigned a value but never used.","'setlinkedInURL' is assigned a value but never used.","'settwitterURL' is assigned a value but never used.","'sethigherEducation' is assigned a value but never used.","'setareaOfInterest' is assigned a value but never used.","'updateProfile' is assigned a value but never used.","'useHistory' is defined but never used.","'CardHeader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'AUTHOR_LOGOUT' is defined but never used.","'SUBSCRIBER_LOGOUT' is defined but never used.",["200"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [history, error, success, message]",{"range":"205","text":"206"},"Update the dependencies array to be: [error, message, success]",{"range":"207","text":"208"},[1384,1411],"[history, error, success, message]",[1467,1484],"[error, message, success]"]
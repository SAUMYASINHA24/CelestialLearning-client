[{"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js":"1","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js":"2","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js":"3","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js":"4","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js":"5","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js":"6","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js":"7","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js":"8","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js":"9","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js":"10","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js":"11","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js":"12","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js":"13","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js":"14","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js":"15","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js":"16","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js":"17","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js":"18","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseHome.js":"19","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourses.js":"20","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js":"21","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/UploadCourse.js":"22","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CreateCourse.js":"23","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js":"24","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HomeCarousel.js":"25","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Footer.js":"26","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js":"27","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js":"28","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js":"29","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/subscriberActions.js":"30","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js":"31","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/authorActions.js":"32","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js":"33","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseView.js":"34","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HLSSource.js":"35"},{"size":471,"mtime":1610175777192,"results":"36","hashOfConfig":"37"},{"size":910,"mtime":1609846092755,"results":"38","hashOfConfig":"37"},{"size":3791,"mtime":1611073479270,"results":"39","hashOfConfig":"37"},{"size":3182,"mtime":1610175777192,"results":"40","hashOfConfig":"37"},{"size":1861,"mtime":1609908161981,"results":"41","hashOfConfig":"37"},{"size":4679,"mtime":1610199599112,"results":"42","hashOfConfig":"37"},{"size":3109,"mtime":1610199406486,"results":"43","hashOfConfig":"37"},{"size":4498,"mtime":1610199429193,"results":"44","hashOfConfig":"37"},{"size":760,"mtime":1610199442421,"results":"45","hashOfConfig":"37"},{"size":7523,"mtime":1610199564189,"results":"46","hashOfConfig":"37"},{"size":5829,"mtime":1610442724973,"results":"47","hashOfConfig":"37"},{"size":1115,"mtime":1610199542793,"results":"48","hashOfConfig":"37"},{"size":1500,"mtime":1610199344785,"results":"49","hashOfConfig":"37"},{"size":3193,"mtime":1610704977606,"results":"50","hashOfConfig":"37"},{"size":1519,"mtime":1610199555949,"results":"51","hashOfConfig":"37"},{"size":1818,"mtime":1611072758977,"results":"52","hashOfConfig":"37"},{"size":1845,"mtime":1609908191666,"results":"53","hashOfConfig":"37"},{"size":1847,"mtime":1610641671313,"results":"54","hashOfConfig":"37"},{"size":5320,"mtime":1611160425548,"results":"55","hashOfConfig":"37"},{"size":335,"mtime":1610440434986,"results":"56","hashOfConfig":"37"},{"size":1853,"mtime":1610978459781,"results":"57","hashOfConfig":"37"},{"size":7872,"mtime":1610978459781,"results":"58","hashOfConfig":"37"},{"size":22024,"mtime":1611150305411,"results":"59","hashOfConfig":"37"},{"size":1841,"mtime":1610978459781,"results":"60","hashOfConfig":"37"},{"size":1550,"mtime":1610617470246,"results":"61","hashOfConfig":"37"},{"size":2572,"mtime":1610199668202,"results":"62","hashOfConfig":"37"},{"size":2657,"mtime":1610462655543,"results":"63","hashOfConfig":"37"},{"size":2862,"mtime":1610199490475,"results":"64","hashOfConfig":"37"},{"size":2236,"mtime":1610811305891,"results":"65","hashOfConfig":"37"},{"size":2780,"mtime":1610175777192,"results":"66","hashOfConfig":"37"},{"size":780,"mtime":1610641588295,"results":"67","hashOfConfig":"37"},{"size":2871,"mtime":1610978459781,"results":"68","hashOfConfig":"37"},{"size":943,"mtime":1609913331761,"results":"69","hashOfConfig":"37"},{"size":3975,"mtime":1611076559496,"results":"70","hashOfConfig":"37"},{"size":931,"mtime":1610985933230,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"pm8yb6",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/index.js",[],["159","160"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/store.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/App.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/reducers/userReducer.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSettings.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberSignup.js",["161","162"],"import React, { useEffect, useState } from 'react';\n\nimport { Form, FormInput, FormGroup } from 'shards-react';\n//import { register } from '../../actions/userActions';\nimport {register} from '../../actions/subscriberActions'\nimport { Card,  CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\nimport '../styles/UserSignUp.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from \"sweetalert2\"\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\n\nfunction SubscriberSignup() {\n     const [name, setName] = useState('');\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberRegister = useSelector(state => state.subscriberRegister);\n    const { loading, error ,success , message } = subscriberRegister;\n\n//     const userLogin = useSelector(state => state.userLogin);\n//     const { userInfo } = userLogin;\n\n    useEffect(() => {\n     \n\n          if(error){\n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`    \n               })\n               console.log(\"Error : \" , error)\n          }\n\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               })\n          }\n    }, [error ,success ]);\n\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            // console.log(\"matched\")\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup\">Are you an Author?</a><br />\n                    <a href=\"/subscriber/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberSignup\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorLogin.js",["163"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport login from \"../../actions/authorActions\"\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport Swal from 'sweetalert2'\n\nfunction AuthorLogin({ history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorLogin = useSelector(state => state.authorLogin);\n    const {  error, authorInfo } = authorLogin;\n\n    useEffect(() => {\n        if (authorInfo) {\n            history.push('/author/dashboard');\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [history, authorInfo]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n        \n    };\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/subscriber/login\">Are you a Subscriber?</a>\n                    <br />\n                    <a href=\"/author/forgetpassword\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default AuthorLogin;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSignup.js",["164"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { register } from '../../actions/authorActions';\nimport { Card, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport '../styles/UserSignUp.css';\nimport Swal from \"sweetalert2\"\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\n\n function AuthorSignup({ history }) {\n\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const authorRegister = useSelector(state => state.authorRegister);\n    const {  error ,success , message } = authorRegister;\n\n\n\n    useEffect(() => {\n          if(error){     \n               Swal.fire({\n                    icon : 'error' ,\n                    text : `${error}`\n               })\n          }\n          if(success){\n               Swal.fire({\n                    icon : 'success' ,\n                    text : `${message}`\n               }).then(res => {\n                    history.push('/author/login')\n               })\n          }\n        \n    }, [history, error , success ]);\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            console.log('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password, confirmPassword));\n            console.log(`Activation Link Sent to ${email}`);\n    };\n}\n\n    return (\n        <div className=\"signup\">\n            <Card className=\"sign\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Signup</CardTitle>\n\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"username\">Username</label>\n                            <FormInput\n                                type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                onChange={event => {\n                                    setName(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"confirmpassword\">Confirm Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"confirmpassword\"\n                                placeholder=\"Confirm Password\"\n                                onChange={event => {\n                                    setConfirmPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button theme=\"success\">Sign Up</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup\">Are you a Subscriber?</a><br />\n\n                    <a href=\"/author/login\">Existing User?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n\n}\n\nexport default AuthorSignup\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorProfile.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberProfile.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberVerify.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorForgetPassword.js",["165"],"import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\nexport default function AuthorForgetPassword() {\n\n    const [email, setEmail] = useState('');\n\n    return (\n        <div>\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Author Forget Password</CardTitle>\n                    <Form >\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >\n                            Submit\n                        </Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/author/login/\">Log in</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberLogin.js",["166"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\nimport \"../styles/UserLogin.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport login from \"../../actions/subscriberActions\"\nimport Swal from 'sweetalert2'\n\n\nfunction SubscriberLogin({history}) {\n     const [email, setEmail] = useState('');\n\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const subscriberLogin = useSelector(state => state.subscriberLogin);\n    const {  error, subscriberInfo } = subscriberLogin;\n\n    useEffect(() => {\n        if (subscriberInfo) {\n            console.log(\"Loged In\")\n            history.push('/subscriber/dashboard')\n        }\n        if(error){\n             Swal.fire({\n                  icon : 'error' ,\n                  text : `${error}`\n             })\n        }\n    }, [subscriberInfo , error]);   \n\n\n    const submitHandler = e => {\n        e.preventDefault();\n        dispatch(login(email, password));\n       \n    };\n\n    return (\n        <div className=\"loginclass\">\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Login</CardTitle>\n                    <Form onSubmit={submitHandler}>\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <label htmlFor=\"password\">Password</label>\n                            <FormInput\n                                type=\"password\"\n                                id=\"#password\"\n                                placeholder=\"Password\"\n                                onChange={event => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\">Login</Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/signup/\">Not registered?</a>\n                    <br />\n                    <a href=\"/author/login\">Are you an Author?</a>\n                    <br />\n                    <a href=\"/subscriber/forgetpassword\">Having problems logging in?</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default SubscriberLogin\n\n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberForgetPassword.js",["167"],"import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, Button } from 'shards-react';\n\n\nexport default function SubscriberForgetPassword() {\n\n    const [email, setEmail] = useState('');\n\n    \n\n    return (\n        <div>\n            <Card className=\"login\" theme=\"info\" style={{ maxWidth: '450px' }}>\n                <CardHeader></CardHeader>\n                {/* <CardImg src=\"https://place-hold.it/300x200\" /> */}\n                <CardBody>\n                    <CardTitle className=\"tex\">Subscriber Forget Password</CardTitle>\n                    <Form >\n                        <FormGroup>\n                            <label htmlFor=\"email\">Email</label>\n                            <FormInput\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                onChange={event => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </FormGroup>\n                        <Button className=\"button1\" theme=\"success\" >\n                            Submit\n                        </Button>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <a href=\"/subscriber/login/\">Log in</a>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Home.js",["168"],"import React, { useEffect } from 'react';\nimport { Header } from './Header';\nimport CourseCard from './CourseCard';\nimport HomeCarousel from './HomeCarousel';\nimport Footer1 from './Footer';\nimport { Container, Row, Col } from 'shards-react';\n\nexport default function Home({ history }) {\n    const cardTitles = ['Complete Ethical Hacking Bootcamp 2021: Zero to Mastery', 'MERN', 'JAVA', 'PhotoShop', 'C++'];\n\n    return (\n        <div className=\"home\">\n            <div className=\"header\">\n                <Header />\n            </div>\n            <HomeCarousel />\n\n            <div className=\"main\">\n                {cardTitles.map(title => (\n                    <Container className=\"cc\">\n                        <Row>\n                            <Col>\n                                <CourseCard title={title} />\n                            </Col>\n                        </Row>\n                    </Container>\n                ))}\n                ;\n            </div>\n            <div className=\"main2\">\n                <Container className=\"dr-example-container\">\n                    <Row>\n                        {/* <Col>\n                            <CourseCard title=\"title6\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title7\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title8\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title9\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title10\"/>\n                        </Col> */}\n                    </Row>\n                </Container>\n            </div>\n\n            <Footer1 />\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorSettings.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberDashboard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseHome.js",["169"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/CourseHome.css';\nimport { useParams } from 'react-router';\nimport Header from '../Utils/Header';\nimport { Card, CardHeader, CardTitle, CardBody, CardFooter, CardImg, Button } from 'shards-react';\nimport logo from '../assets/CEH.jpg';\nimport Footer1 from '../Utils/Footer';\nimport { Collapse } from 'antd';\n\nexport default function CourseHome() {\n    const { Panel } = Collapse;\n\n    const history = useHistory();\n    let { title } = useParams();\n    let description =\n        'Learn Ethical Hacking + Penetration Testing! Use real techniques by black hat hackers then learn to defend against them!';\n\n    const butclk = title => {\n        history.push(`/course/view/${title}`);\n    };\n\n\n\n    return (\n        <div>\n            <Header />\n            <div className=\"topCard\">\n                <Card className=\"tpCard\" style={{ maxWidth: '1800px' }}>\n                    <CardImg className=\"crdImg\" src={logo} />\n                    <CardBody>\n                        <CardTitle className=\"crhmCT\">{title}</CardTitle>\n                        <Button className=\"crhmBT\" onClick={() => butclk(title)}>\n                            View\n                        </Button>\n                    </CardBody>\n                </Card>\n                <div>\n                    <Card className=\"tpCard1\" style={{ maxWidth: '1800px' }}>\n                        <CardHeader></CardHeader>\n                        <CardBody>\n                            <CardTitle className=\"crhmCT\">{title}</CardTitle>\n                            <div className=\"CoHoText\">\n                            Description:\n                            </div>\n                            <Collapse className=\"CoHoCollaps\">\n                                <Panel header=\"Section 1\" key=\"1\">\n                                    <p>\n                                        <a href=\"#vid\">Video1</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video2</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video3</a>\n                                    </p>\n                                </Panel>\n                                <Panel header=\"Section 2\" key=\"2\">\n                                    <p>\n                                        <a href=\"#vid\">Video1</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video2</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video3</a>\n                                    </p>\n                                </Panel>\n                                <Panel header=\"Section 3\" key=\"3\">\n                                    <p>\n                                        <a href=\"#vid\">Video1</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video2</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video3</a>\n                                    </p>\n                                </Panel>\n                                <Panel header=\"Section 4\" key=\"4\">\n                                    <p>\n                                        <a href=\"#vid\">Video1</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video2</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video3</a>\n                                    </p>\n                                </Panel>\n                                <Panel header=\"Section 5\" key=\"5\">\n                                    <p>\n                                        <a href=\"#vid\">Video1</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video2</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video3</a>\n                                    </p>\n                                </Panel>\n                                <Panel header=\"Section 6\" key=\"6\">\n                                    <p>\n                                        <a href=\"#vid\">Video1</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video2</a>\n                                    </p>\n                                    <p>\n                                        <a href=\"#vid\">Video3</a>\n                                    </p>\n                                </Panel>\n                            </Collapse>\n                        </CardBody>\n                        <CardFooter></CardFooter>\n                    </Card>\n                </div>\n            </div>\n\n            <div><Footer1 /></div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorCourses.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorDashboard.js",["170","171"],"import React, { useState, useEffect } from 'react';\nimport CourseCard from '../Utils/CourseCard';\nimport AuthorHeader from './AuthorHeader';\nimport { Container, Row, Col } from 'shards-react';\nimport '../styles/UserDashboard.css';\nimport Axios from 'axios';\n\nexport default function AuthorDashboard() {\n    const cardTitles = ['title1', 'title5', 'title4', 'title3', 'title2'];\n\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        // Axios.post('/author/profile').then(res => {\n        //     console.log('Project : ', res.data.message);\n        //     setName(res.data.message.firstName);\n        // });\n    }, []);\n\n    return (\n        <div>\n            <AuthorHeader />\n            <div className=\"all\">\n                <h1>Welcome {name}!</h1>\n                Use the Icon on the top right corner to Go to Profile/ Account Settings/ Log out!\n                <div className=\"main\">\n                    {cardTitles.map(title => (\n                        <Container className=\"cc\">\n                            <Row>\n                                <Col>\n                                    <CourseCard title={title} />\n                                </Col>\n                                {/* <Col>\n                            <CourseCard title=\"title2\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title3\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title4\"/>\n                        </Col>\n                        <Col>\n                            <CourseCard title=\"title5\"/>\n                        </Col> */}\n                            </Row>\n                        </Container>\n                    ))}\n                    ;\n                </div>\n            </div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/UploadCourse.js",["172","173","174","175","176","177"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/UploadCourse.css';\nimport { Dropdown, Forms } from 'react-bootstrap';\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\nimport axios from 'axios';\n\nexport default function UploadCourse() {\n\n    const [title, setTitle] = useState('Course Name') \n    const [description, setDescription] = useState('') \n    const [category , setCategory] = useState('') \n    const [suitableFor, setSuitableFor] = useState('') \n    const [platform , setPlatform] = useState('')\n    const [prerequisite, setPrerequisite] = useState('') \n    // setup the step content\n    let history = useHistory();\n    const step1Content = (\n        <div> \n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <CardTitle className=\"institle\">Instructions</CardTitle>\n                    <p>Instructions will be entered here</p>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"name\">\n                                    What would you like to name your course?\n                                </label>\n\n                                <FormInput type=\"text\" id=\"title\"  onChange = {(e) => setTitle(e.target.value)} placeholder=\"Enter Something..\" ></FormInput>\n                            </FormGroup>\n                            <FormGroup>\n                                <label className=\"labelstep2\" htmlFor=\"desc\">\n                                    Give a short Description about your course!\n                                </label>\n                                <FormTextarea rows=\"5\" type=\"text\" id=\"desc\" onChange = {(e) => setDescription(e.target.value)} placeholder=\"Enter Something..\" />\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n    \n    const step3Content = (\n        <div>\n            <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step3\">\n                        <label className=\"labelstep3\" htmlFor=\"dropdown\">\n                            Where would you categorize your course?\n                        </label>\n                        <Dropdown className=\"createdropdown\"\n                            \n                        >\n                            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\n                                Choose\n                            </Dropdown.Toggle>\n                            <input type = \"text\" onChange = {(e) => setCategory(e.target.value)}/>\n                            <Dropdown.Menu\n                            \n                            >\n                                <Dropdown.Item href=\"#Development\">Development</Dropdown.Item>\n                                <Dropdown.Item href=\"#Business\">Business</Dropdown.Item>\n                                <Dropdown.Item href=\"#Finance&Accounting\">Finance & Accounting</Dropdown.Item>\n                                <Dropdown.Item href=\"#IT&Software\">IT & Software</Dropdown.Item>\n                                <Dropdown.Item href=\"#Marketing\">Marketing</Dropdown.Item>\n                                <Dropdown.Item href=\"Photography\">Photography</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <Card className=\"uploadcard\" style={{ maxWidth: '1500px' }}>\n            <CardBody>\n                <div className=\"step4\">\n                    <Form>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"suit\">\n                                For whom this course will be suitable for?\n                            </label>\n                            <FormInput type=\"suit\" id=\"suit\" \n                             onChange = {(e) => {setSuitableFor(e.target.value)}}\n                            placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"platform\">\n                                Platform?\n                            </label>\n                            <FormInput type=\"text\" id=\"platform\" \n                            onChange = {(e) => {setPlatform(e.target.value)}}\n                            placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <label className=\"labelstep4\" htmlFor=\"prerequisites\">\n                                Any prerequisites?\n                            </label>\n                            <FormInput type=\"suit\" id=\"prerequisites\" \n                            onChange = {(e) => {setPrerequisite(e.target.value)}}\n                            placeholder=\"Enter Something..\" />\n                        </FormGroup>\n                    </Form>\n                </div>\n            </CardBody>\n        </Card>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n\n        axios.post('/author/create-course' ,{title , description , category , suitableFor , platform ,   prerequisite}).then(res => {\n            console.log(res.data.courseId)\n            history.push(\n                {\n                    pathname: '/course/create',\n                    state: { id: res.data.courseId}\n                }\n            );\n        })\n        \n       //\n    }\n\n    \n    \n\n    return (\n        <div>\n            <div className=\"createheading\">Get Started With Your Course</div>\n            <Button className=\"buttonexit\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                Exit\n            </Button>\n            <StepProgressBar\n                className=\"stepbar\"\n                startingStep={0}\n                onSubmit={onFormSubmit}\n                steps={[\n                    {\n                        label: 'Step 1',\n                        name: 'step 1',\n                        content: step1Content\n                        // validator: step1Validator\n                    },\n                    {\n                        label: 'Step 2',\n                        name: 'step 2',\n                        content: step2Content\n                        // validator: step2Validator\n                    },\n                    {\n                        label: 'Step 3',\n                        name: 'step 3',\n                        content: step3Content\n                        // validator: step3Validator\n                    },\n                    {\n                        label: 'Step 4',\n                        name: 'step 4',\n                        content: step4Content\n                        // validator: step4Validator\n                    }\n                ]}\n            />\n            ;\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CreateCourse.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport StepProgressBar from 'react-step-progress';\nimport 'react-step-progress/dist/index.css';\nimport { Form, FormInput, FormGroup, FormTextarea, Button } from 'shards-react';\nimport '../styles/CreateCourse.css';\nimport { Card, CardTitle, CardImg, CardBody } from 'shards-react';\nimport { Image } from 'react-bootstrap';\nimport 'antd/dist/antd.css';\nimport { Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport { Slider, Switch } from 'antd';\nimport axios from 'axios';\n\nexport default function CreateCourse() {\n    let history = useHistory();\n\n    useEffect(() => {\n        //  console.log(\"History : \" , history.location.state.id)\n    }, []);\n\n    // Course Thumbnail\n    const CourseThumbnail = () => {\n        const [fileList, setFileList] = useState([]);\n\n        const onChange = ({ fileList: newFileList }) => {\n            setFileList(newFileList);\n        };\n\n        const onPreview = async file => {\n            let src = file.url;\n            if (!src) {\n                src = await new Promise(resolve => {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(file.originFileObj);\n                    reader.onload = () => resolve(reader.result);\n                });\n            }\n            const image = new Image();\n            image.src = src;\n            const imgWindow = window.open(src);\n            imgWindow.document.write(image.outerHTML);\n        };\n\n        return (\n            <ImgCrop rotate>\n                <Upload\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    listType=\"picture-card\"\n                    fileList={fileList}\n                    onChange={onChange}\n                    onPreview={onPreview}\n                >\n                    {fileList.length < 1 && '+ Upload'}\n                </Upload>\n            </ImgCrop>\n        );\n    };\n\n    // Preview Video\n    const previewprops = {\n        name: 'file',\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        headers: {\n            authorization: 'authorization-text'\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        }\n    };\n\n    // Price Slider\n    class PriceSlider extends React.Component {\n        state = {\n            disabled: false\n        };\n\n        handleDisabledChange = disabled => {\n            this.setState({ disabled });\n        };\n\n        render() {\n            const { disabled } = this.state;\n            return (\n                <>\n                    <Slider min={500} max={5000} range defaultValue={[700, 1500]} disabled={disabled} />\n                </>\n            );\n        }\n    }\n\n    // Section and Video Inputs\n    function SecIp() {\n        const [secName, setSecName] = useState('Name');\n        const [section, setFields] = useState([{ value: null }]);\n        console.log(section);\n        function handleChange(i, event) {\n            const values = [...section];\n            values[i].value = event.target.value;\n            setFields(values);\n        }\n\n        function handleAdd() {\n            const values = [...section];\n            values.push({ value: null });\n            setFields(values);\n        }\n\n        function handleRemove(i) {\n            const values = [...section];\n            values.splice(i, 1);\n            setFields(values);\n        }\n\n        return (\n            <div className=\"App\">\n                {section.map((field, idx) => {\n                    return (\n                        <div>\n                            <Card className=\"sectionCard\" style={{ maxWidth: '600px' }}>\n                                <CardBody>\n                                    <div className=\"sectionForm\" key={`${field}-${idx}`}>\n                                        <FormInput\n                                            className=\"sectionIp\"\n                                            type=\"text\"\n                                            placeholder=\"Enter Section Name\"\n                                            value={secName || ''}\n                                            onChange={e => handleChange(idx, e)}\n                                        />\n                                        <VidIp />\n                                        <Button theme=\"danger\" className=\"secdelbut\" type=\"button\" onClick={() => handleRemove(idx)}>\n                                            Del Sec\n                                        </Button>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    );\n                })}\n                <Button theme=\"success\" className=\"secaddbut\" type=\"button\" onClick={() => handleAdd()}>\n                    Add Sec\n                </Button>\n            </div>\n        );\n    }\n\n    // Video IP\n    function VidIp() {\n        const [fields, setFields] = useState([{ value: null }]);\n        const [file, setFile] = useState();\n        console.log(fields);\n        function handleChange(i, event) {\n            const values = [...fields];\n            values[i].value = event.target.value;\n            setFields(values);\n        }\n\n        function handleAdd() {\n            const values = [...fields];\n            values.push({ value: null });\n            setFields(values);\n        }\n\n        function handleRemove(i) {\n            const values = [...fields];\n            values.splice(i, 1);\n            setFields(values);\n        }\n\n        return (\n            <div className=\"App\">\n                {fields.map((field, idx) => {\n                    return (\n                        <div key={`${field}-${idx}`}>\n                            <FormInput\n                                className=\"videoIp\"\n                                type=\"text\"\n                                placeholder=\"Enter Lecture Name and attach file\"\n                                value={field.value || ''}\n                            />\n                            <FormInput className=\"videoIp\" type=\"file\" placeholder=\"Upload File\" />\n                            <Button theme=\"danger\" className=\"viddelbut\" type=\"button\" onClick={() => handleRemove(idx)}>\n                                Delete Lecture\n                            </Button>\n                        </div>\n                    );\n                })}\n                <Button theme=\"success\" className=\"vidaddbut\" type=\"button\" onClick={() => handleAdd()}>\n                    Add Lecture\n                </Button>\n            </div>\n        );\n    }\n\n    function Section({ sectionId }) {\n        const [section, createSection] = useState(true);\n        const [sectionName, setSectionName] = useState('');\n\n        console.log('$$$$$$$$$$$$ Secid : ', sectionId);\n\n        const [fields, setFields] = useState([{ lectureName: '', lectureFile: null }]);\n\n        function handleAdd() {\n            const values = [...fields];\n            values.push({ lectureName: '', lectureFile: null });\n            setFields(values);\n        }\n\n        function handleRemove(i) {\n            const values = [...fields];\n            values.splice(i, 1);\n            setFields(values);\n        }\n\n        function handleNameChange(i, event) {\n            const values = [...fields];\n            values[i].lectureName = event.target.value;\n            setFields(values);\n        }\n        function handleFileChange(i, event) {\n            const values = [...fields];\n            values[i].lectureFile = event.target.files[0];\n            setFields(values);\n        }\n\n        function saveLecture(i) {\n            const values = [...fields];\n            const formData = new FormData();\n            formData.append('image', values[i].lectureFile);\n            formData.append('vedioName', `${values[i].lectureName}`);\n            formData.append('sectionId', `${sectionId}`);\n            axios({\n                method: 'post',\n                url: '/author/add-video',\n                data: formData\n            });\n        }\n\n        return (\n            <div>\n                <Card className=\"CrCoCard\">\n                    <CardBody>\n                        <CardTitle>\n                            <h4>Section Name</h4>\n                        </CardTitle>\n                        {fields.map((field, idx) => {\n                            return (\n                                <div key={`${field}-${idx}`}>\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Lecture Name and attach file\"\n                                        value={field.lectureName || ''}\n                                        onChange={e => handleNameChange(idx, e)}\n                                    />\n                                    <FormInput\n                                        className=\"videoIp\"\n                                        type=\"file\"\n                                        placeholder=\"Upload File\"\n                                        onChange={e => handleFileChange(idx, e)}\n                                    />\n                                    <Button theme=\"success\" className=\"CrCoSaveLectureBut\" type=\"button\" onClick={() => saveLecture(idx)}>\n                                        Save Lecture\n                                    </Button>\n                                </div>\n                            );\n                        })}\n                        <Button theme=\"success\" className=\"CrCoAddLectureBut\" type=\"button\" onClick={() => handleAdd()}>\n                            Add Lecture\n                        </Button>\n                        <Button\n                            theme=\"success\"\n                            className=\"CrCoShowStateBut\"\n                            type=\"button\"\n                            onClick={() => {\n                                console.log('Feilds : ', fields);\n                            }}\n                        >\n                            Show State\n                        </Button>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n    function SectionContainer() {\n        //  const courseId = '60040cd8ca5848206b593c67'\n        const [sections, setSections] = useState([{ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' }]);\n        const [sectionCount, setSectionCount] = useState(0);\n        const [name, setName] = useState('');\n\n        const saveSection = i => {\n            setSectionCount(sectionCount + 1);\n            axios\n                .post('/author/create-section', {\n                    number: sectionCount,\n                    sectionName: name,\n                    courseId: '60082c800d498d80629c8335'\n                })\n                .then(res => {\n                    const values = [...sections];\n                    values[i].sectionNumber = sectionCount;\n                    values[i].sectionSaved = true;\n                    values[i].sectionName = name;\n                    values[i].sectionId = `${res.data.sectionId}`;\n                    setSections(values);\n                });\n        };\n        const addSection = () => {\n            setName('');\n            const values = [...sections];\n            values.push({ sectionNumber: 0, sectionSaved: false, sectionName: '', sectionId: '' });\n            setSections(values);\n        };\n\n        return (\n            <div>\n                {sections.map((section, idx) => {\n                    return !section.sectionSaved ? (\n                        <div>\n                            <FormInput\n                                className=\"videoIp\"\n                                type=\"text\"\n                                placeholder=\"Enter Section Name\"\n                                value={name || ''}\n                                onChange={e => setName(e.target.value)}\n                            />\n\n                            <Button theme=\"success\" className=\"CrCoSaveSecBut\" type=\"button\" onClick={() => saveSection(idx)}>\n                                Save Section\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Section sectionId={section.sectionId} />\n                        </div>\n                    );\n                })}\n                <Button className=\"CrCoAddSectionBtn\" theme=\"success\" type=\"button\" onClick={addSection}>\n                    Add Section\n                </Button>\n                {/* <Button theme=\"success\"  type=\"button\" \n                                    onClick = {() => console.log(\"Section : \" , sections)}\n                                >\n                                    State\n                     </Button> */}\n            </div>\n        );\n    }\n\n    // function Section(){\n\n    //     const courseId = '60043f1bca5848206b593c6a'\n    //     const [section , createSection] = useState(false)\n    //     const [sectionName , setSectionName] = useState('')\n    //     const [lectName , setLectName] = useState('')\n    //     const [file ,setFile] = useState()\n    //     const [sectionId , setSectionId] = useState('')\n\n    //     if(!section){\n    //         return(\n    //             <div>\n    //                 <FormInput\n    //                     className=\"videoIp\"\n    //                     type=\"text\"\n    //                     value = {sectionName}\n    //                     onChange = {(e) => setSectionName(e.target.value)}\n    //                 />\n    //                 <Button theme=\"success\" className=\"vidaddbut\" type=\"button\"\n    //                 onClick={() => {\n    //                     axios.post('/author/create-section' , {\n    //                         \"number\" : 1 ,\n    //                         \"sectionName\" : `${sectionName}` ,\n    //                         \"courseId\" : `${courseId}`\n    //                     }).then(res => {\n    //                         console.log(\"Section Id : \" , res.data.sectionId )\n    //                         setSectionId(res.data.sectionId)\n    //                         createSection(true)\n    //                     })\n\n    //                 }}>\n    //                     Create Section\n    //             </Button>\n    //             </div>\n    //         )\n    //     }else{\n    //         return(\n    //             <div>\n    //                  <FormInput\n    //                     className=\"videoIp\"\n    //                     type=\"text\"\n    //                     placeholder=\"Enter Lecture Name \"\n    //                     value = {lectName}\n    //                     onChange = {(e) => setLectName(e.target.value)}\n\n    //                 />\n    //                 <FormInput\n    //                     className=\"videoIp\"\n    //                     type=\"file\"\n    //                     placeholder=\"Upload File\"\n    //                     onChange = {(e) => setFile(e.target.files[0])}\n    //                 />\n    //                 <Button theme=\"success\" className=\"viddelbut\" type=\"button\"\n    //                     onClick = {\n    //                         (e) => {\n\n    //                             e.preventDefault()\n    //                             console.log(\"name : \" , lectName)\n    //                             console.log(\"image : \" , file)\n    //                             const formData = new FormData();\n    //                             formData.append('image', file)\n    //                             formData.append('vedioName', `${lectName}`)\n    //                             formData.append('sectionId', '600472176ddf051db87a9611')\n    //                             axios({\n    //                                 method: 'post',\n    //                                 url: '/author/add-video',\n    //                                 data: formData,\n    //                             })\n    //                         }\n    //                     }\n    //                 >\n    //                     Save Lecuret\n    //                 </Button>\n    //             </div>\n    //         )\n    //     }\n\n    // }\n\n    const step1Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        <Form>\n                            <label className=\"labelstep2\" htmlFor=\"name\">\n                                Section Name:\n                            </label>\n                        </Form>\n                    </div>\n                    <SectionContainer />\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step2Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"step2\">\n                        Add a thumbnail and preview\n                        <div className=\"thumbnailUpload\">\n                            <h4>Thumbnail</h4>\n                            <CourseThumbnail />\n                        </div>\n                        <div className=\"previewUpload\">\n                            <h4>Preview</h4>\n                            <Upload {...previewprops}>\n                                <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                            </Upload>\n                        </div>\n                        <Form>\n                            <FormGroup></FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step3Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"priceRange\">\n                        What price range would to like to set for your course\n                        <PriceSlider />\n                    </div>\n                    <Form>\n                        <label className=\"labelstep2\" htmlFor=\"name\">\n                            Would you like to add any coupons?:\n                        </label>\n                        <FormGroup>\n                            <FormInput type=\"text\"></FormInput>\n                        </FormGroup>\n                    </Form>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    const step4Content = (\n        <div>\n            <Card className=\"createcard\" style={{ maxWidth: '1500px' }}>\n                <CardBody>\n                    <div className=\"previewCourse\">Please Confirm all the data before submitting your course for preview</div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n\n    // setup step validators, will be called before proceeding to the next step\n    function step1Validator() {\n        // return a boolean\n    }\n\n    function step2Validator() {\n        // return a boolean\n    }\n\n    function step3Validator() {\n        // return a boolean\n    }\n\n    function step4Validator() {\n        // return a boolean\n    }\n\n    function onFormSubmit() {\n        // handle the submit logic here\n        // This function will be executed at the last step\n        // when the submit button (next button in the previous steps) is pressed\n        history.push('/course/create');\n    }\n    return (\n        <div>\n            {/* <AuthorHeader /> */}\n            <div className=\"createheader\">\n                <Button className=\"buttonexitc\" theme=\"outline-danger\" href=\"/author/dashboard\">\n                    Exit\n                </Button>\n                <div className=\"createheading\">Let's Set-up your Course!</div>\n                <Button className=\"buttonbackc\" theme=\"outline-danger\" href=\"/author/uploadcourse\">\n                    Back\n                </Button>\n            </div>\n            <div className=\"ui divider\"></div>\n            <div className=\"stepbar\">\n                <StepProgressBar\n                    startingStep={0}\n                    onSubmit={onFormSubmit}\n                    steps={[\n                        {\n                            label: 'Step 1',\n                            name: 'step 1',\n                            subtitle: 'Course Curiculam and Content',\n                            content: step1Content\n                            // validator: step1Validator\n                        },\n                        {\n                            label: 'Step 2',\n                            name: 'step 2',\n                            subtitle: 'Course Preview and Thumbnail',\n                            content: step2Content\n                            // validator: step2Validator\n                        },\n                        {\n                            label: 'Step 3',\n                            name: 'step 3',\n                            subtitle: 'Pricing and Coupons',\n                            content: step3Content\n                            // validator: step3Validator\n                        },\n                        {\n                            label: 'Step 4',\n                            name: 'step 4',\n                            subtitle: 'Submit for Preview',\n                            content: step4Content\n                            // validator: step4Validator\n                        }\n                    ]}\n                />\n            </div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/constants/userConstants.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HomeCarousel.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Footer.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Author/AuthorHeader.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Subscriber/SubscriberHeader.js",["195"],"import React from 'react';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport { BsPersonSquare } from 'react-icons/bs';\nimport { Dropdown } from 'react-bootstrap';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\nimport CategoriesDropdown from \"../Utils/CategoriesDropdown\"\n\n// import { useDispatch } from 'react-redux';\n// import { logout } from '../../actions/subscriberActions';\n\n export const SubscriberHeader = () => {\n    return (\n        <div className=\"subscriberheader\">\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo}  width='90' heigh='90' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink>\n                            <CategoriesDropdown />\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav navbar>\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\">\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n            </Collapse>\n            <div className=\"right\">\n                <Collapse navbar>\n                <div>\n                    <ShoppingCartIcon fontSize=\"large\" />\n                </div>\n                <Dropdown >\n                    <Dropdown.Toggle variant=\"inf\" id=\"dropdown-basic\">\n                        <BsPersonSquare size=\"30\" />\n                    </Dropdown.Toggle>\n\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"/subscriber/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/subscriber/settings\">Account Settings</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Button className=\"logoutbutton\" theme=\"outline-danger\" href=\"/\">Logout</Button>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                <div className=\"right\"></div>\n            </Collapse>\n            </div>\n\n        </Navbar>\n        </div>\n    );\n};\n\nexport default SubscriberHeader;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/Header.js",["196"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../assets/CL.png';\nimport { Button } from 'shards-react';\nimport CategoriesDropdown from './CategoriesDropdown';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from 'shards-react';\n\nexport var type = \"\";\n\nexport const Header = () => {\n    const history = useHistory();\n\n    function loginHandleClick() {\n        history.push('/subscriber/login');\n    }\n    const signupHandleClick = () => {\n        history.push('/subscriber/signup');\n    };\n   \n    return (\n        <Navbar className=\"nav\" expand=\"md\">\n            <NavbarBrand>\n                <img src={logo} width='60' heigh='40' />\n            </NavbarBrand>\n            <NavbarToggler />\n\n            <Collapse navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink><CategoriesDropdown /></NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar >\n                    <InputGroup size=\"sm\" seamless className=\"headersearch\" >\n                        <InputGroupAddon  type=\"prepend\">\n                            <InputGroupText>\n                                <SearchIcon />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n\n                \n                \n            </Collapse>\n            <div className=\"right\">\n                    \n                    <Button outline theme=\"danger\" onClick={loginHandleClick}>\n                        LogIn\n                    </Button>\n                    <Button className=\"signupButton\" outline theme=\"danger\" onClick={signupHandleClick}>\n                        SignUp\n                    </Button>\n                </div>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/subscriberActions.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CourseCard.js",[],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/actions/authorActions.js",["197","198"],"import axios from 'axios'\nimport {\n  \n  AUTHOR_LOGIN_FAIL,\n  AUTHOR_LOGIN_REQUEST,\n  AUTHOR_LOGIN_SUCCESS,\n  AUTHOR_LOGOUT,\n\n  AUTHOR_REGISTER_FAIL,\n  AUTHOR_REGISTER_REQUEST,\n  AUTHOR_REGISTER_SUCCESS,\n  \n  AUTHOR_VERIFY_REQUEST,\n  AUTHOR_VERIFY_SUCCESS,\n  AUTHOR_VERIFY_FAIL,\n  SET_COURSE_ID,\n\n} from '../constants/userConstants'\n\n\nexport const register = (username, email, password , confirm_password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_REGISTER_REQUEST,\n       })\n   \n       await axios.post(\n         '/author/register',\n         { username, email, password , confirm_password },\n       ).then(res => {\n            dispatch({\n                 type : AUTHOR_REGISTER_SUCCESS ,\n                 payload : \"An Email has been sent to you.\"\n            })\n       })\n       \n     } catch (error) {\n       dispatch({\n         type: AUTHOR_REGISTER_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export const logout = () => (dispatch) => {\n     localStorage.removeItem('isAuthor')\n     dispatch({\n       type : AUTHOR_LOGOUT\n     })\n   }\n\n   export const verifyAuthor = (token) => async (dispatch) => {\n     try {\n       dispatch({\n         type:AUTHOR_VERIFY_REQUEST,\n       })\n   \n\n       const config = {\n         headers : {\n          'Content-Type': 'application/json',\n           'Authorization' : `Bearer ${token}`\n         }\n       }\n\n       await axios.post(\n         '/author/verify',\n         {token} ,\n         {\n          headers : {\n           'Content-Type': 'application/json',\n            'Authorization' : `Bearer ${token}`\n          }\n        }\n \n       )\n       dispatch({\n         type:AUTHOR_VERIFY_SUCCESS,\n       })\n  \n       \n     } catch (error) {\n       dispatch({\n         type:AUTHOR_VERIFY_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n\n   const login = (email, password) => async (dispatch) => {\n     try {\n       dispatch({\n         type: AUTHOR_LOGIN_REQUEST,\n       })\n   \n       const config = {\n         headers: {\n\n           'Content-Type': 'application/json',\n         },\n       }\n   \n       const { data } = await axios.post(\n         '/author/login',\n         { email, password },\n         config\n       )\n   \n       dispatch({\n         type: AUTHOR_LOGIN_SUCCESS,\n         payload: data,\n       })\n   \n     //  localStorage.setItem('isAuthor', true)\n     } catch (error) {\n       dispatch({\n         type: AUTHOR_LOGIN_FAIL,\n         payload:\n           error.response && error.response.data.message\n             ? error.response.data.message\n             : error.message,\n       })\n     }\n   }\n\n   export default login \n\n   \n\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/CategoriesDropdown.js",[],["199","200"],"/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Course/CourseView.js",["201"],"import React from 'react';\nimport SubscriberHeader from '../Subscriber/SubscriberHeader';\nimport '../styles/CourseView.css';\nimport '../styles/video-react.css'; // import css\nimport HLSSource from '../Utils/HLSSource';\nimport { Player, ControlBar, ForwardControl, ReplayControl } from 'video-react';\nimport { Button } from 'shards-react';\nimport { Collapse } from 'antd';\nimport { Scrollbars } from 'rc-scrollbars';\n\nexport default function CourseView() {\n    const { Panel } = Collapse;\n\n    return (\n        <div>\n            <SubscriberHeader />\n            <div className=\"vidPlayerdiv\">\n                <h1 className=\"crvTitle\">Title</h1>\n\n                {/* If you want to use MP4 file, give a src prop to Player tag and remove HLSSoure tag || If you want to play m3u8 file, keep the HLSSource tag just change the url */}\n                <Player className=\"vidPlayer\">\n                    <HLSSource\n                        isVideoChild\n                        src=\"https://multiplatform-f.akamaihd.net/i/multi/will/bunny/big_buck_bunny_,640x360_400,640x360_700,640x360_1000,950x540_1500,.f4v.csmil/master.m3u8\"\n                    />\n                    <ControlBar className=\"ctrlbar\" autoHide={true}>\n                        <ReplayControl seconds={10} order={2.2} />\n                        <ForwardControl seconds={10} order={3.2} />\n                    </ControlBar>\n                </Player>\n            </div>\n            <div  className=\"crvCollapse\"> \n                <Scrollbars style={{ width: 525, height: 630 }}>\n                    <Collapse>\n                        <Panel header=\"Section 1\" key=\"1\">\n                            <p>\n                                <a href=\"#vid\">Video1</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video2</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video3</a>\n                            </p>\n                        </Panel>\n                        <Panel header=\"Section 2\" key=\"2\">\n                            <p>\n                                <a href=\"#vid\">Video1</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video2</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video3</a>\n                            </p>\n                        </Panel>\n                        <Panel header=\"Section 3\" key=\"3\">\n                            <p>\n                                <a href=\"#vid\">Video1</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video2</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video3</a>\n                            </p>\n                        </Panel>\n                        <Panel header=\"Section 4\" key=\"4\">\n                            <p>\n                                <a href=\"#vid\">Video1</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video2</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video3</a>\n                            </p>\n                        </Panel>\n                        <Panel header=\"Section 5\" key=\"5\">\n                            <p>\n                                <a href=\"#vid\">Video1</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video2</a>\n                            </p>\n                            <p>\n                                <a href=\"#vid\">Video3</a>\n                            </p>\n                        </Panel>\n                    </Collapse>\n                </Scrollbars>\n            </div>\n        </div>\n    );\n}\n","/home/rutik/COLLEGE/BE MEGA PROJECT/Celestial_Learning_MERN/CelestialLearning-client/src/Components/Utils/HLSSource.js",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":28,"column":13,"nodeType":"208","messageId":"209","endLine":28,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":50,"column":8,"nodeType":"212","endLine":50,"endColumn":25,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":30,"column":8,"nodeType":"212","endLine":30,"endColumn":29,"suggestions":"215"},{"ruleId":"210","severity":1,"message":"211","line":44,"column":8,"nodeType":"212","endLine":44,"endColumn":35,"suggestions":"216"},{"ruleId":"206","severity":1,"message":"217","line":7,"column":12,"nodeType":"208","messageId":"209","endLine":7,"endColumn":17},{"ruleId":"210","severity":1,"message":"218","line":33,"column":8,"nodeType":"212","endLine":33,"endColumn":32,"suggestions":"219"},{"ruleId":"206","severity":1,"message":"217","line":8,"column":12,"nodeType":"208","messageId":"209","endLine":8,"endColumn":17},{"ruleId":"206","severity":1,"message":"220","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"221","line":16,"column":9,"nodeType":"208","messageId":"209","endLine":16,"endColumn":20},{"ruleId":"206","severity":1,"message":"222","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":13},{"ruleId":"206","severity":1,"message":"223","line":11,"column":18,"nodeType":"208","messageId":"209","endLine":11,"endColumn":25},{"ruleId":"206","severity":1,"message":"224","line":7,"column":20,"nodeType":"208","messageId":"209","endLine":7,"endColumn":25},{"ruleId":"206","severity":1,"message":"225","line":8,"column":27,"nodeType":"208","messageId":"209","endLine":8,"endColumn":34},{"ruleId":"206","severity":1,"message":"226","line":126,"column":14,"nodeType":"208","messageId":"209","endLine":126,"endColumn":28},{"ruleId":"206","severity":1,"message":"227","line":130,"column":14,"nodeType":"208","messageId":"209","endLine":130,"endColumn":28},{"ruleId":"206","severity":1,"message":"228","line":134,"column":14,"nodeType":"208","messageId":"209","endLine":134,"endColumn":28},{"ruleId":"206","severity":1,"message":"229","line":138,"column":14,"nodeType":"208","messageId":"209","endLine":138,"endColumn":28},{"ruleId":"206","severity":1,"message":"230","line":5,"column":38,"nodeType":"208","messageId":"209","endLine":5,"endColumn":50},{"ruleId":"206","severity":1,"message":"225","line":7,"column":27,"nodeType":"208","messageId":"209","endLine":7,"endColumn":34},{"ruleId":"206","severity":1,"message":"231","line":13,"column":18,"nodeType":"208","messageId":"209","endLine":13,"endColumn":24},{"ruleId":"206","severity":1,"message":"232","line":101,"column":14,"nodeType":"208","messageId":"209","endLine":101,"endColumn":19},{"ruleId":"206","severity":1,"message":"233","line":102,"column":25,"nodeType":"208","messageId":"209","endLine":102,"endColumn":35},{"ruleId":"206","severity":1,"message":"234","line":158,"column":16,"nodeType":"208","messageId":"209","endLine":158,"endColumn":20},{"ruleId":"206","severity":1,"message":"235","line":158,"column":22,"nodeType":"208","messageId":"209","endLine":158,"endColumn":29},{"ruleId":"206","severity":1,"message":"236","line":160,"column":18,"nodeType":"208","messageId":"209","endLine":160,"endColumn":30},{"ruleId":"206","severity":1,"message":"237","line":204,"column":16,"nodeType":"208","messageId":"209","endLine":204,"endColumn":23},{"ruleId":"206","severity":1,"message":"238","line":204,"column":25,"nodeType":"208","messageId":"209","endLine":204,"endColumn":38},{"ruleId":"206","severity":1,"message":"239","line":205,"column":16,"nodeType":"208","messageId":"209","endLine":205,"endColumn":27},{"ruleId":"206","severity":1,"message":"240","line":205,"column":29,"nodeType":"208","messageId":"209","endLine":205,"endColumn":43},{"ruleId":"206","severity":1,"message":"241","line":217,"column":18,"nodeType":"208","messageId":"209","endLine":217,"endColumn":30},{"ruleId":"206","severity":1,"message":"226","line":513,"column":14,"nodeType":"208","messageId":"209","endLine":513,"endColumn":28},{"ruleId":"206","severity":1,"message":"227","line":517,"column":14,"nodeType":"208","messageId":"209","endLine":517,"endColumn":28},{"ruleId":"206","severity":1,"message":"228","line":521,"column":14,"nodeType":"208","messageId":"209","endLine":521,"endColumn":28},{"ruleId":"206","severity":1,"message":"229","line":525,"column":14,"nodeType":"208","messageId":"209","endLine":525,"endColumn":28},{"ruleId":"242","severity":1,"message":"243","line":34,"column":17,"nodeType":"244","endLine":34,"endColumn":58},{"ruleId":"242","severity":1,"message":"243","line":39,"column":17,"nodeType":"244","endLine":39,"endColumn":57},{"ruleId":"206","severity":1,"message":"245","line":16,"column":3,"nodeType":"208","messageId":"209","endLine":16,"endColumn":16},{"ruleId":"206","severity":1,"message":"246","line":62,"column":14,"nodeType":"208","messageId":"209","endLine":62,"endColumn":20},{"ruleId":"202","replacedBy":"247"},{"ruleId":"204","replacedBy":"248"},{"ruleId":"206","severity":1,"message":"249","line":7,"column":10,"nodeType":"208","messageId":"209","endLine":7,"endColumn":16},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.","ArrayExpression",["252"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["253"],["254"],"'email' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["255"],"'useEffect' is defined but never used.","'description' is assigned a value but never used.","'Axios' is defined but never used.","'setName' is assigned a value but never used.","'Forms' is defined but never used.","'CardImg' is defined but never used.","'step1Validator' is defined but never used.","'step2Validator' is defined but never used.","'step3Validator' is defined but never used.","'step4Validator' is defined but never used.","'FormTextarea' is defined but never used.","'Switch' is defined but never used.","'SecIp' is defined but never used.","'setSecName' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'handleChange' is defined but never used.","'section' is assigned a value but never used.","'createSection' is assigned a value but never used.","'sectionName' is assigned a value but never used.","'setSectionName' is assigned a value but never used.","'handleRemove' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SET_COURSE_ID' is defined but never used.","'config' is assigned a value but never used.",["250"],["251"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [error, message, success]",{"range":"264","text":"265"},"Update the dependencies array to be: [history, authorInfo, error]",{"range":"266","text":"267"},"Update the dependencies array to be: [history, error, success, message]",{"range":"268","text":"269"},"Update the dependencies array to be: [subscriberInfo, error, history]",{"range":"270","text":"271"},[1447,1464],"[error, message, success]",[996,1017],"[history, authorInfo, error]",[1308,1335],"[history, error, success, message]",[1064,1088],"[subscriberInfo, error, history]"]